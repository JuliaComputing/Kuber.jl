# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""specification of a horizontal pod autoscaler.

    IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec(;
        maxReplicas=nothing,
        minReplicas=nothing,
        scaleTargetRef=nothing,
        targetCPUUtilizationPercentage=nothing,
    )

    - maxReplicas::Int32 : upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
    - minReplicas::Int32 : minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
    - scaleTargetRef::IoK8sApiAutoscalingV1CrossVersionObjectReference : reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.
    - targetCPUUtilizationPercentage::Int32 : target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
"""
mutable struct IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec <: SwaggerModel
    maxReplicas::Any # spec type: Union{ Nothing, Int32 } # spec name: maxReplicas
    minReplicas::Any # spec type: Union{ Nothing, Int32 } # spec name: minReplicas
    scaleTargetRef::Any # spec type: Union{ Nothing, IoK8sApiAutoscalingV1CrossVersionObjectReference } # spec name: scaleTargetRef
    targetCPUUtilizationPercentage::Any # spec type: Union{ Nothing, Int32 } # spec name: targetCPUUtilizationPercentage

    function IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec(;maxReplicas=nothing, minReplicas=nothing, scaleTargetRef=nothing, targetCPUUtilizationPercentage=nothing)
        o = new()
        validate_property(IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec, Symbol("maxReplicas"), maxReplicas)
        setfield!(o, Symbol("maxReplicas"), maxReplicas)
        validate_property(IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec, Symbol("minReplicas"), minReplicas)
        setfield!(o, Symbol("minReplicas"), minReplicas)
        validate_property(IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec, Symbol("scaleTargetRef"), scaleTargetRef)
        setfield!(o, Symbol("scaleTargetRef"), scaleTargetRef)
        validate_property(IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec, Symbol("targetCPUUtilizationPercentage"), targetCPUUtilizationPercentage)
        setfield!(o, Symbol("targetCPUUtilizationPercentage"), targetCPUUtilizationPercentage)
        o
    end
end # type IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec

const _property_map_IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec = Dict{Symbol,Symbol}(Symbol("maxReplicas")=>Symbol("maxReplicas"), Symbol("minReplicas")=>Symbol("minReplicas"), Symbol("scaleTargetRef")=>Symbol("scaleTargetRef"), Symbol("targetCPUUtilizationPercentage")=>Symbol("targetCPUUtilizationPercentage"))
const _property_types_IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec = Dict{Symbol,String}(Symbol("maxReplicas")=>"Int32", Symbol("minReplicas")=>"Int32", Symbol("scaleTargetRef")=>"IoK8sApiAutoscalingV1CrossVersionObjectReference", Symbol("targetCPUUtilizationPercentage")=>"Int32")
Base.propertynames(::Type{ IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec }) = collect(keys(_property_map_IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec))
Swagger.property_type(::Type{ IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec[name]))}
Swagger.field_name(::Type{ IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec }, property_name::Symbol) =  _property_map_IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec[property_name]

function check_required(o::IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec)
    (getproperty(o, Symbol("maxReplicas")) === nothing) && (return false)
    (getproperty(o, Symbol("scaleTargetRef")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec }, name::Symbol, val)
end
