# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.

    IoK8sApiCoreV1NodeConfigSource(;
        configMap=nothing,
    )

    - configMap::IoK8sApiCoreV1ConfigMapNodeConfigSource : ConfigMap is a reference to a Node&#39;s ConfigMap
"""
mutable struct IoK8sApiCoreV1NodeConfigSource <: SwaggerModel
    configMap::Any # spec type: Union{ Nothing, IoK8sApiCoreV1ConfigMapNodeConfigSource } # spec name: configMap

    function IoK8sApiCoreV1NodeConfigSource(;configMap=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1NodeConfigSource, Symbol("configMap"), configMap)
        setfield!(o, Symbol("configMap"), configMap)
        o
    end
end # type IoK8sApiCoreV1NodeConfigSource

const _property_map_IoK8sApiCoreV1NodeConfigSource = Dict{Symbol,Symbol}(Symbol("configMap")=>Symbol("configMap"))
const _property_types_IoK8sApiCoreV1NodeConfigSource = Dict{Symbol,String}(Symbol("configMap")=>"IoK8sApiCoreV1ConfigMapNodeConfigSource")
Base.propertynames(::Type{ IoK8sApiCoreV1NodeConfigSource }) = collect(keys(_property_map_IoK8sApiCoreV1NodeConfigSource))
Swagger.property_type(::Type{ IoK8sApiCoreV1NodeConfigSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1NodeConfigSource[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1NodeConfigSource }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1NodeConfigSource[property_name]

function check_required(o::IoK8sApiCoreV1NodeConfigSource)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1NodeConfigSource }, name::Symbol, val)
end
