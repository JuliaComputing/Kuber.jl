# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""DeploymentStrategy describes how to replace existing pods with new ones.

    IoK8sApiAppsV1beta2DeploymentStrategy(;
        rollingUpdate=nothing,
        type=nothing,
    )

    - rollingUpdate::IoK8sApiAppsV1beta2RollingUpdateDeployment : Rolling update config params. Present only if DeploymentStrategyType &#x3D; RollingUpdate.
    - type::String : Type of deployment. Can be \&quot;Recreate\&quot; or \&quot;RollingUpdate\&quot;. Default is RollingUpdate.
"""
mutable struct IoK8sApiAppsV1beta2DeploymentStrategy <: SwaggerModel
    rollingUpdate::Any # spec type: Union{ Nothing, IoK8sApiAppsV1beta2RollingUpdateDeployment } # spec name: rollingUpdate
    type::Any # spec type: Union{ Nothing, String } # spec name: type

    function IoK8sApiAppsV1beta2DeploymentStrategy(;rollingUpdate=nothing, type=nothing)
        o = new()
        validate_property(IoK8sApiAppsV1beta2DeploymentStrategy, Symbol("rollingUpdate"), rollingUpdate)
        setfield!(o, Symbol("rollingUpdate"), rollingUpdate)
        validate_property(IoK8sApiAppsV1beta2DeploymentStrategy, Symbol("type"), type)
        setfield!(o, Symbol("type"), type)
        o
    end
end # type IoK8sApiAppsV1beta2DeploymentStrategy

const _property_map_IoK8sApiAppsV1beta2DeploymentStrategy = Dict{Symbol,Symbol}(Symbol("rollingUpdate")=>Symbol("rollingUpdate"), Symbol("type")=>Symbol("type"))
const _property_types_IoK8sApiAppsV1beta2DeploymentStrategy = Dict{Symbol,String}(Symbol("rollingUpdate")=>"IoK8sApiAppsV1beta2RollingUpdateDeployment", Symbol("type")=>"String")
Base.propertynames(::Type{ IoK8sApiAppsV1beta2DeploymentStrategy }) = collect(keys(_property_map_IoK8sApiAppsV1beta2DeploymentStrategy))
Swagger.property_type(::Type{ IoK8sApiAppsV1beta2DeploymentStrategy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAppsV1beta2DeploymentStrategy[name]))}
Swagger.field_name(::Type{ IoK8sApiAppsV1beta2DeploymentStrategy }, property_name::Symbol) =  _property_map_IoK8sApiAppsV1beta2DeploymentStrategy[property_name]

function check_required(o::IoK8sApiAppsV1beta2DeploymentStrategy)
    true
end

function validate_property(::Type{ IoK8sApiAppsV1beta2DeploymentStrategy }, name::Symbol, val)
end
