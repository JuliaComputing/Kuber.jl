# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition(;
        lastUpdateTime=nothing,
        message=nothing,
        reason=nothing,
        type=nothing,
    )

    - lastUpdateTime::IoK8sApimachineryPkgApisMetaV1Time : timestamp for the last update to this condition
    - message::String : human readable message with details about the request state
    - reason::String : brief reason for the request state
    - type::String : request approval state, currently Approved or Denied.
"""
mutable struct IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition <: SwaggerModel
    lastUpdateTime::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1Time } # spec name: lastUpdateTime
    message::Any # spec type: Union{ Nothing, String } # spec name: message
    reason::Any # spec type: Union{ Nothing, String } # spec name: reason
    type::Any # spec type: Union{ Nothing, String } # spec name: type

    function IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition(;lastUpdateTime=nothing, message=nothing, reason=nothing, type=nothing)
        o = new()
        validate_property(IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition, Symbol("lastUpdateTime"), lastUpdateTime)
        setfield!(o, Symbol("lastUpdateTime"), lastUpdateTime)
        validate_property(IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition, Symbol("message"), message)
        setfield!(o, Symbol("message"), message)
        validate_property(IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition, Symbol("reason"), reason)
        setfield!(o, Symbol("reason"), reason)
        validate_property(IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition, Symbol("type"), type)
        setfield!(o, Symbol("type"), type)
        o
    end
end # type IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition

const _property_map_IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition = Dict{Symbol,Symbol}(Symbol("lastUpdateTime")=>Symbol("lastUpdateTime"), Symbol("message")=>Symbol("message"), Symbol("reason")=>Symbol("reason"), Symbol("type")=>Symbol("type"))
const _property_types_IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition = Dict{Symbol,String}(Symbol("lastUpdateTime")=>"IoK8sApimachineryPkgApisMetaV1Time", Symbol("message")=>"String", Symbol("reason")=>"String", Symbol("type")=>"String")
Base.propertynames(::Type{ IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition }) = collect(keys(_property_map_IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition))
Swagger.property_type(::Type{ IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition[name]))}
Swagger.field_name(::Type{ IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition }, property_name::Symbol) =  _property_map_IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition[property_name]

function check_required(o::IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition)
    (getproperty(o, Symbol("type")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiCertificatesV1beta1CertificateSigningRequestCondition }, name::Symbol, val)
end
