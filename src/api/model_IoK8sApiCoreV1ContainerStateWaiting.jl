# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""ContainerStateWaiting is a waiting state of a container.

    IoK8sApiCoreV1ContainerStateWaiting(;
        message=nothing,
        reason=nothing,
    )

    - message::String : Message regarding why the container is not yet running.
    - reason::String : (brief) reason the container is not yet running.
"""
mutable struct IoK8sApiCoreV1ContainerStateWaiting <: SwaggerModel
    message::Any # spec type: Union{ Nothing, String } # spec name: message
    reason::Any # spec type: Union{ Nothing, String } # spec name: reason

    function IoK8sApiCoreV1ContainerStateWaiting(;message=nothing, reason=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1ContainerStateWaiting, Symbol("message"), message)
        setfield!(o, Symbol("message"), message)
        validate_property(IoK8sApiCoreV1ContainerStateWaiting, Symbol("reason"), reason)
        setfield!(o, Symbol("reason"), reason)
        o
    end
end # type IoK8sApiCoreV1ContainerStateWaiting

const _property_map_IoK8sApiCoreV1ContainerStateWaiting = Dict{Symbol,Symbol}(Symbol("message")=>Symbol("message"), Symbol("reason")=>Symbol("reason"))
const _property_types_IoK8sApiCoreV1ContainerStateWaiting = Dict{Symbol,String}(Symbol("message")=>"String", Symbol("reason")=>"String")
Base.propertynames(::Type{ IoK8sApiCoreV1ContainerStateWaiting }) = collect(keys(_property_map_IoK8sApiCoreV1ContainerStateWaiting))
Swagger.property_type(::Type{ IoK8sApiCoreV1ContainerStateWaiting }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ContainerStateWaiting[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1ContainerStateWaiting }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1ContainerStateWaiting[property_name]

function check_required(o::IoK8sApiCoreV1ContainerStateWaiting)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1ContainerStateWaiting }, name::Symbol, val)
end
