# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""ResourceFieldSelector represents container resources (cpu, memory) and their output format

    IoK8sApiCoreV1ResourceFieldSelector(;
        containerName=nothing,
        divisor=nothing,
        resource=nothing,
    )

    - containerName::String : Container name: required for volumes, optional for env vars
    - divisor::IoK8sApimachineryPkgApiResourceQuantity : Specifies the output format of the exposed resources, defaults to \&quot;1\&quot;
    - resource::String : Required: resource to select
"""
mutable struct IoK8sApiCoreV1ResourceFieldSelector <: SwaggerModel
    containerName::Any # spec type: Union{ Nothing, String } # spec name: containerName
    divisor::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApiResourceQuantity } # spec name: divisor
    resource::Any # spec type: Union{ Nothing, String } # spec name: resource

    function IoK8sApiCoreV1ResourceFieldSelector(;containerName=nothing, divisor=nothing, resource=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1ResourceFieldSelector, Symbol("containerName"), containerName)
        setfield!(o, Symbol("containerName"), containerName)
        validate_property(IoK8sApiCoreV1ResourceFieldSelector, Symbol("divisor"), divisor)
        setfield!(o, Symbol("divisor"), divisor)
        validate_property(IoK8sApiCoreV1ResourceFieldSelector, Symbol("resource"), resource)
        setfield!(o, Symbol("resource"), resource)
        o
    end
end # type IoK8sApiCoreV1ResourceFieldSelector

const _property_map_IoK8sApiCoreV1ResourceFieldSelector = Dict{Symbol,Symbol}(Symbol("containerName")=>Symbol("containerName"), Symbol("divisor")=>Symbol("divisor"), Symbol("resource")=>Symbol("resource"))
const _property_types_IoK8sApiCoreV1ResourceFieldSelector = Dict{Symbol,String}(Symbol("containerName")=>"String", Symbol("divisor")=>"IoK8sApimachineryPkgApiResourceQuantity", Symbol("resource")=>"String")
Base.propertynames(::Type{ IoK8sApiCoreV1ResourceFieldSelector }) = collect(keys(_property_map_IoK8sApiCoreV1ResourceFieldSelector))
Swagger.property_type(::Type{ IoK8sApiCoreV1ResourceFieldSelector }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ResourceFieldSelector[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1ResourceFieldSelector }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1ResourceFieldSelector[property_name]

function check_required(o::IoK8sApiCoreV1ResourceFieldSelector)
    (getproperty(o, Symbol("resource")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1ResourceFieldSelector }, name::Symbol, val)
end
