# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""VolumeNodeResources is a set of resource limits for scheduling of volumes.

    IoK8sApiStorageV1VolumeNodeResources(;
        count=nothing,
    )

    - count::Int32 : Maximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is not specified, then the supported number of volumes on this node is unbounded.
"""
mutable struct IoK8sApiStorageV1VolumeNodeResources <: SwaggerModel
    count::Any # spec type: Union{ Nothing, Int32 } # spec name: count

    function IoK8sApiStorageV1VolumeNodeResources(;count=nothing)
        o = new()
        validate_property(IoK8sApiStorageV1VolumeNodeResources, Symbol("count"), count)
        setfield!(o, Symbol("count"), count)
        o
    end
end # type IoK8sApiStorageV1VolumeNodeResources

const _property_map_IoK8sApiStorageV1VolumeNodeResources = Dict{Symbol,Symbol}(Symbol("count")=>Symbol("count"))
const _property_types_IoK8sApiStorageV1VolumeNodeResources = Dict{Symbol,String}(Symbol("count")=>"Int32")
Base.propertynames(::Type{ IoK8sApiStorageV1VolumeNodeResources }) = collect(keys(_property_map_IoK8sApiStorageV1VolumeNodeResources))
Swagger.property_type(::Type{ IoK8sApiStorageV1VolumeNodeResources }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiStorageV1VolumeNodeResources[name]))}
Swagger.field_name(::Type{ IoK8sApiStorageV1VolumeNodeResources }, property_name::Symbol) =  _property_map_IoK8sApiStorageV1VolumeNodeResources[property_name]

function check_required(o::IoK8sApiStorageV1VolumeNodeResources)
    true
end

function validate_property(::Type{ IoK8sApiStorageV1VolumeNodeResources }, name::Symbol, val)
end
