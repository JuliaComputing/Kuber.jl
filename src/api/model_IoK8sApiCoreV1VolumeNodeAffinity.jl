# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.

    IoK8sApiCoreV1VolumeNodeAffinity(;
        required=nothing,
    )

    - required::IoK8sApiCoreV1NodeSelector : Required specifies hard node constraints that must be met.
"""
mutable struct IoK8sApiCoreV1VolumeNodeAffinity <: SwaggerModel
    required::Any # spec type: Union{ Nothing, IoK8sApiCoreV1NodeSelector } # spec name: required

    function IoK8sApiCoreV1VolumeNodeAffinity(;required=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1VolumeNodeAffinity, Symbol("required"), required)
        setfield!(o, Symbol("required"), required)
        o
    end
end # type IoK8sApiCoreV1VolumeNodeAffinity

const _property_map_IoK8sApiCoreV1VolumeNodeAffinity = Dict{Symbol,Symbol}(Symbol("required")=>Symbol("required"))
const _property_types_IoK8sApiCoreV1VolumeNodeAffinity = Dict{Symbol,String}(Symbol("required")=>"IoK8sApiCoreV1NodeSelector")
Base.propertynames(::Type{ IoK8sApiCoreV1VolumeNodeAffinity }) = collect(keys(_property_map_IoK8sApiCoreV1VolumeNodeAffinity))
Swagger.property_type(::Type{ IoK8sApiCoreV1VolumeNodeAffinity }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1VolumeNodeAffinity[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1VolumeNodeAffinity }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1VolumeNodeAffinity[property_name]

function check_required(o::IoK8sApiCoreV1VolumeNodeAffinity)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1VolumeNodeAffinity }, name::Symbol, val)
end
