# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.

    IoK8sApiSchedulingV1PriorityClass(;
        apiVersion=nothing,
        description=nothing,
        globalDefault=nothing,
        kind=nothing,
        metadata=nothing,
        preemptionPolicy=nothing,
        value=nothing,
    )

    - apiVersion::String : APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    - description::String : description is an arbitrary string that usually provides guidelines on when this priority class should be used.
    - globalDefault::Bool : globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as &#x60;globalDefault&#x60;. However, if more than one PriorityClasses exists with their &#x60;globalDefault&#x60; field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.
    - kind::String : Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    - metadata::IoK8sApimachineryPkgApisMetaV1ObjectMeta : Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    - preemptionPolicy::String : PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.
    - value::Int32 : The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.
"""
mutable struct IoK8sApiSchedulingV1PriorityClass <: SwaggerModel
    apiVersion::Any # spec type: Union{ Nothing, String } # spec name: apiVersion
    description::Any # spec type: Union{ Nothing, String } # spec name: description
    globalDefault::Any # spec type: Union{ Nothing, Bool } # spec name: globalDefault
    kind::Any # spec type: Union{ Nothing, String } # spec name: kind
    metadata::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta } # spec name: metadata
    preemptionPolicy::Any # spec type: Union{ Nothing, String } # spec name: preemptionPolicy
    value::Any # spec type: Union{ Nothing, Int32 } # spec name: value

    function IoK8sApiSchedulingV1PriorityClass(;apiVersion=nothing, description=nothing, globalDefault=nothing, kind=nothing, metadata=nothing, preemptionPolicy=nothing, value=nothing)
        o = new()
        validate_property(IoK8sApiSchedulingV1PriorityClass, Symbol("apiVersion"), apiVersion)
        setfield!(o, Symbol("apiVersion"), apiVersion)
        validate_property(IoK8sApiSchedulingV1PriorityClass, Symbol("description"), description)
        setfield!(o, Symbol("description"), description)
        validate_property(IoK8sApiSchedulingV1PriorityClass, Symbol("globalDefault"), globalDefault)
        setfield!(o, Symbol("globalDefault"), globalDefault)
        validate_property(IoK8sApiSchedulingV1PriorityClass, Symbol("kind"), kind)
        setfield!(o, Symbol("kind"), kind)
        validate_property(IoK8sApiSchedulingV1PriorityClass, Symbol("metadata"), metadata)
        setfield!(o, Symbol("metadata"), metadata)
        validate_property(IoK8sApiSchedulingV1PriorityClass, Symbol("preemptionPolicy"), preemptionPolicy)
        setfield!(o, Symbol("preemptionPolicy"), preemptionPolicy)
        validate_property(IoK8sApiSchedulingV1PriorityClass, Symbol("value"), value)
        setfield!(o, Symbol("value"), value)
        o
    end
end # type IoK8sApiSchedulingV1PriorityClass

const _property_map_IoK8sApiSchedulingV1PriorityClass = Dict{Symbol,Symbol}(Symbol("apiVersion")=>Symbol("apiVersion"), Symbol("description")=>Symbol("description"), Symbol("globalDefault")=>Symbol("globalDefault"), Symbol("kind")=>Symbol("kind"), Symbol("metadata")=>Symbol("metadata"), Symbol("preemptionPolicy")=>Symbol("preemptionPolicy"), Symbol("value")=>Symbol("value"))
const _property_types_IoK8sApiSchedulingV1PriorityClass = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("description")=>"String", Symbol("globalDefault")=>"Bool", Symbol("kind")=>"String", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta", Symbol("preemptionPolicy")=>"String", Symbol("value")=>"Int32")
Base.propertynames(::Type{ IoK8sApiSchedulingV1PriorityClass }) = collect(keys(_property_map_IoK8sApiSchedulingV1PriorityClass))
Swagger.property_type(::Type{ IoK8sApiSchedulingV1PriorityClass }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiSchedulingV1PriorityClass[name]))}
Swagger.field_name(::Type{ IoK8sApiSchedulingV1PriorityClass }, property_name::Symbol) =  _property_map_IoK8sApiSchedulingV1PriorityClass[property_name]

function check_required(o::IoK8sApiSchedulingV1PriorityClass)
    (getproperty(o, Symbol("value")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiSchedulingV1PriorityClass }, name::Symbol, val)
end
