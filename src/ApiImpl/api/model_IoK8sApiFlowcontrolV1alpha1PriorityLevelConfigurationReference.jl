# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""PriorityLevelConfigurationReference contains information that points to the \&quot;request-priority\&quot; being used.

    IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference(;
        name=nothing,
    )

    - name::String : &#x60;name&#x60; is the name of the priority level configuration being referenced Required.
"""
mutable struct IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference <: SwaggerModel
    name::Any # spec type: Union{ Nothing, String } # spec name: name

    function IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference(;name=nothing)
        o = new()
        validate_property(IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        o
    end
end # type IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference

const _property_map_IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference = Dict{Symbol,Symbol}(Symbol("name")=>Symbol("name"))
const _property_types_IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference = Dict{Symbol,String}(Symbol("name")=>"String")
Base.propertynames(::Type{ IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference }) = collect(keys(_property_map_IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference))
Swagger.property_type(::Type{ IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference[name]))}
Swagger.field_name(::Type{ IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference }, property_name::Symbol) =  _property_map_IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference[property_name]

function check_required(o::IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference)
    (getproperty(o, Symbol("name")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationReference }, name::Symbol, val)
end
