# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.

    IoK8sApiNodeV1alpha1Scheduling(;
        nodeSelector=nothing,
        tolerations=nothing,
    )

    - nodeSelector::Dict{String, String} : nodeSelector lists labels that must be present on nodes that support this RuntimeClass. Pods using this RuntimeClass can only be scheduled to a node matched by this selector. The RuntimeClass nodeSelector is merged with a pod&#39;s existing nodeSelector. Any conflicts will cause the pod to be rejected in admission.
    - tolerations::Vector{IoK8sApiCoreV1Toleration} : tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.
"""
mutable struct IoK8sApiNodeV1alpha1Scheduling <: SwaggerModel
    nodeSelector::Any # spec type: Union{ Nothing, Dict{String, String} } # spec name: nodeSelector
    tolerations::Any # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1Toleration} } # spec name: tolerations

    function IoK8sApiNodeV1alpha1Scheduling(;nodeSelector=nothing, tolerations=nothing)
        o = new()
        validate_property(IoK8sApiNodeV1alpha1Scheduling, Symbol("nodeSelector"), nodeSelector)
        setfield!(o, Symbol("nodeSelector"), nodeSelector)
        validate_property(IoK8sApiNodeV1alpha1Scheduling, Symbol("tolerations"), tolerations)
        setfield!(o, Symbol("tolerations"), tolerations)
        o
    end
end # type IoK8sApiNodeV1alpha1Scheduling

const _property_map_IoK8sApiNodeV1alpha1Scheduling = Dict{Symbol,Symbol}(Symbol("nodeSelector")=>Symbol("nodeSelector"), Symbol("tolerations")=>Symbol("tolerations"))
const _property_types_IoK8sApiNodeV1alpha1Scheduling = Dict{Symbol,String}(Symbol("nodeSelector")=>"Dict{String, String}", Symbol("tolerations")=>"Vector{IoK8sApiCoreV1Toleration}")
Base.propertynames(::Type{ IoK8sApiNodeV1alpha1Scheduling }) = collect(keys(_property_map_IoK8sApiNodeV1alpha1Scheduling))
Swagger.property_type(::Type{ IoK8sApiNodeV1alpha1Scheduling }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiNodeV1alpha1Scheduling[name]))}
Swagger.field_name(::Type{ IoK8sApiNodeV1alpha1Scheduling }, property_name::Symbol) =  _property_map_IoK8sApiNodeV1alpha1Scheduling[property_name]

function check_required(o::IoK8sApiNodeV1alpha1Scheduling)
    true
end

function validate_property(::Type{ IoK8sApiNodeV1alpha1Scheduling }, name::Symbol, val)
end
