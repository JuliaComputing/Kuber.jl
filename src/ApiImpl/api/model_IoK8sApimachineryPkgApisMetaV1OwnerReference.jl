# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.

    IoK8sApimachineryPkgApisMetaV1OwnerReference(;
        apiVersion=nothing,
        blockOwnerDeletion=nothing,
        controller=nothing,
        kind=nothing,
        name=nothing,
        uid=nothing,
    )

    - apiVersion::String : API version of the referent.
    - blockOwnerDeletion::Bool : If true, AND if the owner has the \&quot;foregroundDeletion\&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \&quot;delete\&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
    - controller::Bool : If true, this reference points to the managing controller.
    - kind::String : Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    - name::String : Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    - uid::String : UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
"""
mutable struct IoK8sApimachineryPkgApisMetaV1OwnerReference <: SwaggerModel
    apiVersion::Any # spec type: Union{ Nothing, String } # spec name: apiVersion
    blockOwnerDeletion::Any # spec type: Union{ Nothing, Bool } # spec name: blockOwnerDeletion
    controller::Any # spec type: Union{ Nothing, Bool } # spec name: controller
    kind::Any # spec type: Union{ Nothing, String } # spec name: kind
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    uid::Any # spec type: Union{ Nothing, String } # spec name: uid

    function IoK8sApimachineryPkgApisMetaV1OwnerReference(;apiVersion=nothing, blockOwnerDeletion=nothing, controller=nothing, kind=nothing, name=nothing, uid=nothing)
        o = new()
        validate_property(IoK8sApimachineryPkgApisMetaV1OwnerReference, Symbol("apiVersion"), apiVersion)
        setfield!(o, Symbol("apiVersion"), apiVersion)
        validate_property(IoK8sApimachineryPkgApisMetaV1OwnerReference, Symbol("blockOwnerDeletion"), blockOwnerDeletion)
        setfield!(o, Symbol("blockOwnerDeletion"), blockOwnerDeletion)
        validate_property(IoK8sApimachineryPkgApisMetaV1OwnerReference, Symbol("controller"), controller)
        setfield!(o, Symbol("controller"), controller)
        validate_property(IoK8sApimachineryPkgApisMetaV1OwnerReference, Symbol("kind"), kind)
        setfield!(o, Symbol("kind"), kind)
        validate_property(IoK8sApimachineryPkgApisMetaV1OwnerReference, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(IoK8sApimachineryPkgApisMetaV1OwnerReference, Symbol("uid"), uid)
        setfield!(o, Symbol("uid"), uid)
        o
    end
end # type IoK8sApimachineryPkgApisMetaV1OwnerReference

const _property_map_IoK8sApimachineryPkgApisMetaV1OwnerReference = Dict{Symbol,Symbol}(Symbol("apiVersion")=>Symbol("apiVersion"), Symbol("blockOwnerDeletion")=>Symbol("blockOwnerDeletion"), Symbol("controller")=>Symbol("controller"), Symbol("kind")=>Symbol("kind"), Symbol("name")=>Symbol("name"), Symbol("uid")=>Symbol("uid"))
const _property_types_IoK8sApimachineryPkgApisMetaV1OwnerReference = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("blockOwnerDeletion")=>"Bool", Symbol("controller")=>"Bool", Symbol("kind")=>"String", Symbol("name")=>"String", Symbol("uid")=>"String")
Base.propertynames(::Type{ IoK8sApimachineryPkgApisMetaV1OwnerReference }) = collect(keys(_property_map_IoK8sApimachineryPkgApisMetaV1OwnerReference))
Swagger.property_type(::Type{ IoK8sApimachineryPkgApisMetaV1OwnerReference }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApimachineryPkgApisMetaV1OwnerReference[name]))}
Swagger.field_name(::Type{ IoK8sApimachineryPkgApisMetaV1OwnerReference }, property_name::Symbol) =  _property_map_IoK8sApimachineryPkgApisMetaV1OwnerReference[property_name]

function check_required(o::IoK8sApimachineryPkgApisMetaV1OwnerReference)
    (getproperty(o, Symbol("apiVersion")) === nothing) && (return false)
    (getproperty(o, Symbol("kind")) === nothing) && (return false)
    (getproperty(o, Symbol("name")) === nothing) && (return false)
    (getproperty(o, Symbol("uid")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApimachineryPkgApisMetaV1OwnerReference }, name::Symbol, val)
end
