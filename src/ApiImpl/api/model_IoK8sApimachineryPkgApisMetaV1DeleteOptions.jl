# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""DeleteOptions may be provided when deleting an API object.

    IoK8sApimachineryPkgApisMetaV1DeleteOptions(;
        apiVersion=nothing,
        dryRun=nothing,
        gracePeriodSeconds=nothing,
        kind=nothing,
        orphanDependents=nothing,
        preconditions=nothing,
        propagationPolicy=nothing,
    )

    - apiVersion::String : APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    - dryRun::Vector{String} : When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    - gracePeriodSeconds::Int64 : The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    - kind::String : Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    - orphanDependents::Bool : Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
    - preconditions::IoK8sApimachineryPkgApisMetaV1Preconditions : Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.
    - propagationPolicy::String : Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: &#39;Orphan&#39; - orphan the dependents; &#39;Background&#39; - allow the garbage collector to delete the dependents in the background; &#39;Foreground&#39; - a cascading policy that deletes all dependents in the foreground.
"""
mutable struct IoK8sApimachineryPkgApisMetaV1DeleteOptions <: SwaggerModel
    apiVersion::Any # spec type: Union{ Nothing, String } # spec name: apiVersion
    dryRun::Any # spec type: Union{ Nothing, Vector{String} } # spec name: dryRun
    gracePeriodSeconds::Any # spec type: Union{ Nothing, Int64 } # spec name: gracePeriodSeconds
    kind::Any # spec type: Union{ Nothing, String } # spec name: kind
    orphanDependents::Any # spec type: Union{ Nothing, Bool } # spec name: orphanDependents
    preconditions::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1Preconditions } # spec name: preconditions
    propagationPolicy::Any # spec type: Union{ Nothing, String } # spec name: propagationPolicy

    function IoK8sApimachineryPkgApisMetaV1DeleteOptions(;apiVersion=nothing, dryRun=nothing, gracePeriodSeconds=nothing, kind=nothing, orphanDependents=nothing, preconditions=nothing, propagationPolicy=nothing)
        o = new()
        validate_property(IoK8sApimachineryPkgApisMetaV1DeleteOptions, Symbol("apiVersion"), apiVersion)
        setfield!(o, Symbol("apiVersion"), apiVersion)
        validate_property(IoK8sApimachineryPkgApisMetaV1DeleteOptions, Symbol("dryRun"), dryRun)
        setfield!(o, Symbol("dryRun"), dryRun)
        validate_property(IoK8sApimachineryPkgApisMetaV1DeleteOptions, Symbol("gracePeriodSeconds"), gracePeriodSeconds)
        setfield!(o, Symbol("gracePeriodSeconds"), gracePeriodSeconds)
        validate_property(IoK8sApimachineryPkgApisMetaV1DeleteOptions, Symbol("kind"), kind)
        setfield!(o, Symbol("kind"), kind)
        validate_property(IoK8sApimachineryPkgApisMetaV1DeleteOptions, Symbol("orphanDependents"), orphanDependents)
        setfield!(o, Symbol("orphanDependents"), orphanDependents)
        validate_property(IoK8sApimachineryPkgApisMetaV1DeleteOptions, Symbol("preconditions"), preconditions)
        setfield!(o, Symbol("preconditions"), preconditions)
        validate_property(IoK8sApimachineryPkgApisMetaV1DeleteOptions, Symbol("propagationPolicy"), propagationPolicy)
        setfield!(o, Symbol("propagationPolicy"), propagationPolicy)
        o
    end
end # type IoK8sApimachineryPkgApisMetaV1DeleteOptions

const _property_map_IoK8sApimachineryPkgApisMetaV1DeleteOptions = Dict{Symbol,Symbol}(Symbol("apiVersion")=>Symbol("apiVersion"), Symbol("dryRun")=>Symbol("dryRun"), Symbol("gracePeriodSeconds")=>Symbol("gracePeriodSeconds"), Symbol("kind")=>Symbol("kind"), Symbol("orphanDependents")=>Symbol("orphanDependents"), Symbol("preconditions")=>Symbol("preconditions"), Symbol("propagationPolicy")=>Symbol("propagationPolicy"))
const _property_types_IoK8sApimachineryPkgApisMetaV1DeleteOptions = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("dryRun")=>"Vector{String}", Symbol("gracePeriodSeconds")=>"Int64", Symbol("kind")=>"String", Symbol("orphanDependents")=>"Bool", Symbol("preconditions")=>"IoK8sApimachineryPkgApisMetaV1Preconditions", Symbol("propagationPolicy")=>"String")
Base.propertynames(::Type{ IoK8sApimachineryPkgApisMetaV1DeleteOptions }) = collect(keys(_property_map_IoK8sApimachineryPkgApisMetaV1DeleteOptions))
Swagger.property_type(::Type{ IoK8sApimachineryPkgApisMetaV1DeleteOptions }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApimachineryPkgApisMetaV1DeleteOptions[name]))}
Swagger.field_name(::Type{ IoK8sApimachineryPkgApisMetaV1DeleteOptions }, property_name::Symbol) =  _property_map_IoK8sApimachineryPkgApisMetaV1DeleteOptions[property_name]

function check_required(o::IoK8sApimachineryPkgApisMetaV1DeleteOptions)
    true
end

function validate_property(::Type{ IoK8sApimachineryPkgApisMetaV1DeleteOptions }, name::Symbol, val)
end
