# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""LoadBalancerStatus represents the status of a load-balancer.

    IoK8sApiCoreV1LoadBalancerStatus(;
        ingress=nothing,
    )

    - ingress::Vector{IoK8sApiCoreV1LoadBalancerIngress} : Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
"""
mutable struct IoK8sApiCoreV1LoadBalancerStatus <: SwaggerModel
    ingress::Any # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1LoadBalancerIngress} } # spec name: ingress

    function IoK8sApiCoreV1LoadBalancerStatus(;ingress=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1LoadBalancerStatus, Symbol("ingress"), ingress)
        setfield!(o, Symbol("ingress"), ingress)
        o
    end
end # type IoK8sApiCoreV1LoadBalancerStatus

const _property_map_IoK8sApiCoreV1LoadBalancerStatus = Dict{Symbol,Symbol}(Symbol("ingress")=>Symbol("ingress"))
const _property_types_IoK8sApiCoreV1LoadBalancerStatus = Dict{Symbol,String}(Symbol("ingress")=>"Vector{IoK8sApiCoreV1LoadBalancerIngress}")
Base.propertynames(::Type{ IoK8sApiCoreV1LoadBalancerStatus }) = collect(keys(_property_map_IoK8sApiCoreV1LoadBalancerStatus))
Swagger.property_type(::Type{ IoK8sApiCoreV1LoadBalancerStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1LoadBalancerStatus[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1LoadBalancerStatus }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1LoadBalancerStatus[property_name]

function check_required(o::IoK8sApiCoreV1LoadBalancerStatus)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1LoadBalancerStatus }, name::Symbol, val)
end
