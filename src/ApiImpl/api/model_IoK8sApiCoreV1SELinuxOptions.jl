# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""SELinuxOptions are the labels to be applied to the container

    IoK8sApiCoreV1SELinuxOptions(;
        level=nothing,
        role=nothing,
        type=nothing,
        user=nothing,
    )

    - level::String : Level is SELinux level label that applies to the container.
    - role::String : Role is a SELinux role label that applies to the container.
    - type::String : Type is a SELinux type label that applies to the container.
    - user::String : User is a SELinux user label that applies to the container.
"""
mutable struct IoK8sApiCoreV1SELinuxOptions <: SwaggerModel
    level::Any # spec type: Union{ Nothing, String } # spec name: level
    role::Any # spec type: Union{ Nothing, String } # spec name: role
    type::Any # spec type: Union{ Nothing, String } # spec name: type
    user::Any # spec type: Union{ Nothing, String } # spec name: user

    function IoK8sApiCoreV1SELinuxOptions(;level=nothing, role=nothing, type=nothing, user=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1SELinuxOptions, Symbol("level"), level)
        setfield!(o, Symbol("level"), level)
        validate_property(IoK8sApiCoreV1SELinuxOptions, Symbol("role"), role)
        setfield!(o, Symbol("role"), role)
        validate_property(IoK8sApiCoreV1SELinuxOptions, Symbol("type"), type)
        setfield!(o, Symbol("type"), type)
        validate_property(IoK8sApiCoreV1SELinuxOptions, Symbol("user"), user)
        setfield!(o, Symbol("user"), user)
        o
    end
end # type IoK8sApiCoreV1SELinuxOptions

const _property_map_IoK8sApiCoreV1SELinuxOptions = Dict{Symbol,Symbol}(Symbol("level")=>Symbol("level"), Symbol("role")=>Symbol("role"), Symbol("type")=>Symbol("type"), Symbol("user")=>Symbol("user"))
const _property_types_IoK8sApiCoreV1SELinuxOptions = Dict{Symbol,String}(Symbol("level")=>"String", Symbol("role")=>"String", Symbol("type")=>"String", Symbol("user")=>"String")
Base.propertynames(::Type{ IoK8sApiCoreV1SELinuxOptions }) = collect(keys(_property_map_IoK8sApiCoreV1SELinuxOptions))
Swagger.property_type(::Type{ IoK8sApiCoreV1SELinuxOptions }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1SELinuxOptions[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1SELinuxOptions }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1SELinuxOptions[property_name]

function check_required(o::IoK8sApiCoreV1SELinuxOptions)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1SELinuxOptions }, name::Symbol, val)
end
