# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.TCPSocketAction
TCPSocketAction describes an action based on opening a socket

    IoK8sApiCoreV1TCPSocketAction(;
        host=nothing,
        port=nothing,
    )

    - host::String : Optional: Host name to connect to, defaults to the pod IP.
    - port::Any : IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1TCPSocketAction <: OpenAPI.APIModel
    host::Union{Nothing, String} = nothing
    port::Union{Nothing, Any} = nothing

    function IoK8sApiCoreV1TCPSocketAction(host, port, )
        OpenAPI.validate_property(IoK8sApiCoreV1TCPSocketAction, Symbol("host"), host)
        OpenAPI.validate_property(IoK8sApiCoreV1TCPSocketAction, Symbol("port"), port)
        return new(host, port, )
    end
end # type IoK8sApiCoreV1TCPSocketAction

const _property_types_IoK8sApiCoreV1TCPSocketAction = Dict{Symbol,String}(Symbol("host")=>"String", Symbol("port")=>"Any", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1TCPSocketAction }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1TCPSocketAction[name]))}

function check_required(o::IoK8sApiCoreV1TCPSocketAction)
    o.port === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1TCPSocketAction }, name::Symbol, val)
    if name === Symbol("port")
        OpenAPI.validate_param(name, "IoK8sApiCoreV1TCPSocketAction", :format, val, "int-or-string")
    end
end
