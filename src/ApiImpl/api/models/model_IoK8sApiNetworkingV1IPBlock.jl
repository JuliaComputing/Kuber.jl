# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.networking.v1.IPBlock
IPBlock describes a particular CIDR (Ex. \&quot;192.168.1.1/24\&quot;) that is allowed to the pods matched by a NetworkPolicySpec&#39;s podSelector. The except entry describes CIDRs that should not be included within this rule.

    IoK8sApiNetworkingV1IPBlock(;
        cidr=nothing,
        except=nothing,
    )

    - cidr::String : CIDR is a string representing the IP Block Valid examples are \&quot;192.168.1.1/24\&quot;
    - except::Vector{String} : Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \&quot;192.168.1.1/24\&quot; Except values will be rejected if they are outside the CIDR range
"""
Base.@kwdef mutable struct IoK8sApiNetworkingV1IPBlock <: OpenAPI.APIModel
    cidr::Union{Nothing, String} = nothing
    except::Union{Nothing, Vector{String}} = nothing

    function IoK8sApiNetworkingV1IPBlock(cidr, except, )
        OpenAPI.validate_property(IoK8sApiNetworkingV1IPBlock, Symbol("cidr"), cidr)
        OpenAPI.validate_property(IoK8sApiNetworkingV1IPBlock, Symbol("except"), except)
        return new(cidr, except, )
    end
end # type IoK8sApiNetworkingV1IPBlock

const _property_types_IoK8sApiNetworkingV1IPBlock = Dict{Symbol,String}(Symbol("cidr")=>"String", Symbol("except")=>"Vector{String}", )
OpenAPI.property_type(::Type{ IoK8sApiNetworkingV1IPBlock }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiNetworkingV1IPBlock[name]))}

function check_required(o::IoK8sApiNetworkingV1IPBlock)
    o.cidr === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiNetworkingV1IPBlock }, name::Symbol, val)
end
