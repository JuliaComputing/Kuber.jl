# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.authorization.v1.SelfSubjectRulesReview
SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server&#39;s authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.

    IoK8sApiAuthorizationV1SelfSubjectRulesReview(;
        apiVersion=nothing,
        kind=nothing,
        metadata=nothing,
        spec=nothing,
        status=nothing,
    )

    - apiVersion::String : APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    - kind::String : Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    - metadata::IoK8sApimachineryPkgApisMetaV1ObjectMeta
    - spec::IoK8sApiAuthorizationV1SelfSubjectRulesReviewSpec
    - status::IoK8sApiAuthorizationV1SubjectRulesReviewStatus
"""
Base.@kwdef mutable struct IoK8sApiAuthorizationV1SelfSubjectRulesReview <: OpenAPI.APIModel
    apiVersion::Union{Nothing, String} = nothing
    kind::Union{Nothing, String} = nothing
    metadata = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta }
    spec = nothing # spec type: Union{ Nothing, IoK8sApiAuthorizationV1SelfSubjectRulesReviewSpec }
    status = nothing # spec type: Union{ Nothing, IoK8sApiAuthorizationV1SubjectRulesReviewStatus }

    function IoK8sApiAuthorizationV1SelfSubjectRulesReview(apiVersion, kind, metadata, spec, status, )
        OpenAPI.validate_property(IoK8sApiAuthorizationV1SelfSubjectRulesReview, Symbol("apiVersion"), apiVersion)
        OpenAPI.validate_property(IoK8sApiAuthorizationV1SelfSubjectRulesReview, Symbol("kind"), kind)
        OpenAPI.validate_property(IoK8sApiAuthorizationV1SelfSubjectRulesReview, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoK8sApiAuthorizationV1SelfSubjectRulesReview, Symbol("spec"), spec)
        OpenAPI.validate_property(IoK8sApiAuthorizationV1SelfSubjectRulesReview, Symbol("status"), status)
        return new(apiVersion, kind, metadata, spec, status, )
    end
end # type IoK8sApiAuthorizationV1SelfSubjectRulesReview

const _property_types_IoK8sApiAuthorizationV1SelfSubjectRulesReview = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("kind")=>"String", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta", Symbol("spec")=>"IoK8sApiAuthorizationV1SelfSubjectRulesReviewSpec", Symbol("status")=>"IoK8sApiAuthorizationV1SubjectRulesReviewStatus", )
OpenAPI.property_type(::Type{ IoK8sApiAuthorizationV1SelfSubjectRulesReview }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAuthorizationV1SelfSubjectRulesReview[name]))}

function check_required(o::IoK8sApiAuthorizationV1SelfSubjectRulesReview)
    o.spec === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiAuthorizationV1SelfSubjectRulesReview }, name::Symbol, val)
end
