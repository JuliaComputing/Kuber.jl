# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.ContainerImage
Describe a container image

    IoK8sApiCoreV1ContainerImage(;
        names=nothing,
        sizeBytes=nothing,
    )

    - names::Vector{String} : Names by which this image is known. e.g. [\&quot;k8s.gcr.io/hyperkube:v1.0.7\&quot;, \&quot;dockerhub.io/google_containers/hyperkube:v1.0.7\&quot;]
    - sizeBytes::Int64 : The size of the image in bytes.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1ContainerImage <: OpenAPI.APIModel
    names::Union{Nothing, Vector{String}} = nothing
    sizeBytes::Union{Nothing, Int64} = nothing

    function IoK8sApiCoreV1ContainerImage(names, sizeBytes, )
        OpenAPI.validate_property(IoK8sApiCoreV1ContainerImage, Symbol("names"), names)
        OpenAPI.validate_property(IoK8sApiCoreV1ContainerImage, Symbol("sizeBytes"), sizeBytes)
        return new(names, sizeBytes, )
    end
end # type IoK8sApiCoreV1ContainerImage

const _property_types_IoK8sApiCoreV1ContainerImage = Dict{Symbol,String}(Symbol("names")=>"Vector{String}", Symbol("sizeBytes")=>"Int64", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1ContainerImage }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ContainerImage[name]))}

function check_required(o::IoK8sApiCoreV1ContainerImage)
    o.names === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1ContainerImage }, name::Symbol, val)
    if name === Symbol("sizeBytes")
        OpenAPI.validate_param(name, "IoK8sApiCoreV1ContainerImage", :format, val, "int64")
    end
end
