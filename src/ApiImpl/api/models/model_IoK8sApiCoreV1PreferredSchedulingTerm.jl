# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.PreferredSchedulingTerm
An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it&#39;s a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    IoK8sApiCoreV1PreferredSchedulingTerm(;
        preference=nothing,
        weight=nothing,
    )

    - preference::IoK8sApiCoreV1NodeSelectorTerm
    - weight::Int64 : Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1PreferredSchedulingTerm <: OpenAPI.APIModel
    preference = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1NodeSelectorTerm }
    weight::Union{Nothing, Int64} = nothing

    function IoK8sApiCoreV1PreferredSchedulingTerm(preference, weight, )
        OpenAPI.validate_property(IoK8sApiCoreV1PreferredSchedulingTerm, Symbol("preference"), preference)
        OpenAPI.validate_property(IoK8sApiCoreV1PreferredSchedulingTerm, Symbol("weight"), weight)
        return new(preference, weight, )
    end
end # type IoK8sApiCoreV1PreferredSchedulingTerm

const _property_types_IoK8sApiCoreV1PreferredSchedulingTerm = Dict{Symbol,String}(Symbol("preference")=>"IoK8sApiCoreV1NodeSelectorTerm", Symbol("weight")=>"Int64", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1PreferredSchedulingTerm }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1PreferredSchedulingTerm[name]))}

function check_required(o::IoK8sApiCoreV1PreferredSchedulingTerm)
    o.preference === nothing && (return false)
    o.weight === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1PreferredSchedulingTerm }, name::Symbol, val)
    if name === Symbol("weight")
        OpenAPI.validate_param(name, "IoK8sApiCoreV1PreferredSchedulingTerm", :format, val, "int32")
    end
end
