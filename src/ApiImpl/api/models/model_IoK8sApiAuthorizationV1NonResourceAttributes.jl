# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.authorization.v1.NonResourceAttributes
NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface

    IoK8sApiAuthorizationV1NonResourceAttributes(;
        path=nothing,
        verb=nothing,
    )

    - path::String : Path is the URL path of the request
    - verb::String : Verb is the standard HTTP verb
"""
Base.@kwdef mutable struct IoK8sApiAuthorizationV1NonResourceAttributes <: OpenAPI.APIModel
    path::Union{Nothing, String} = nothing
    verb::Union{Nothing, String} = nothing

    function IoK8sApiAuthorizationV1NonResourceAttributes(path, verb, )
        OpenAPI.validate_property(IoK8sApiAuthorizationV1NonResourceAttributes, Symbol("path"), path)
        OpenAPI.validate_property(IoK8sApiAuthorizationV1NonResourceAttributes, Symbol("verb"), verb)
        return new(path, verb, )
    end
end # type IoK8sApiAuthorizationV1NonResourceAttributes

const _property_types_IoK8sApiAuthorizationV1NonResourceAttributes = Dict{Symbol,String}(Symbol("path")=>"String", Symbol("verb")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiAuthorizationV1NonResourceAttributes }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAuthorizationV1NonResourceAttributes[name]))}

function check_required(o::IoK8sApiAuthorizationV1NonResourceAttributes)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiAuthorizationV1NonResourceAttributes }, name::Symbol, val)
end
