# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.NFSVolumeSource
Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.

    IoK8sApiCoreV1NFSVolumeSource(;
        path=nothing,
        readOnly=nothing,
        server=nothing,
    )

    - path::String : Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    - readOnly::Bool : ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    - server::String : Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
"""
Base.@kwdef mutable struct IoK8sApiCoreV1NFSVolumeSource <: OpenAPI.APIModel
    path::Union{Nothing, String} = nothing
    readOnly::Union{Nothing, Bool} = nothing
    server::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1NFSVolumeSource(path, readOnly, server, )
        OpenAPI.validate_property(IoK8sApiCoreV1NFSVolumeSource, Symbol("path"), path)
        OpenAPI.validate_property(IoK8sApiCoreV1NFSVolumeSource, Symbol("readOnly"), readOnly)
        OpenAPI.validate_property(IoK8sApiCoreV1NFSVolumeSource, Symbol("server"), server)
        return new(path, readOnly, server, )
    end
end # type IoK8sApiCoreV1NFSVolumeSource

const _property_types_IoK8sApiCoreV1NFSVolumeSource = Dict{Symbol,String}(Symbol("path")=>"String", Symbol("readOnly")=>"Bool", Symbol("server")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1NFSVolumeSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1NFSVolumeSource[name]))}

function check_required(o::IoK8sApiCoreV1NFSVolumeSource)
    o.path === nothing && (return false)
    o.server === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1NFSVolumeSource }, name::Symbol, val)
end
