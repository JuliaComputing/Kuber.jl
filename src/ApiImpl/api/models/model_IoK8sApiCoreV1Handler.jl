# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.Handler
Handler defines a specific action that should be taken

    IoK8sApiCoreV1Handler(;
        exec=nothing,
        httpGet=nothing,
        tcpSocket=nothing,
    )

    - exec::IoK8sApiCoreV1ExecAction
    - httpGet::IoK8sApiCoreV1HTTPGetAction
    - tcpSocket::IoK8sApiCoreV1TCPSocketAction
"""
Base.@kwdef mutable struct IoK8sApiCoreV1Handler <: OpenAPI.APIModel
    exec = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ExecAction }
    httpGet = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1HTTPGetAction }
    tcpSocket = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1TCPSocketAction }

    function IoK8sApiCoreV1Handler(exec, httpGet, tcpSocket, )
        OpenAPI.validate_property(IoK8sApiCoreV1Handler, Symbol("exec"), exec)
        OpenAPI.validate_property(IoK8sApiCoreV1Handler, Symbol("httpGet"), httpGet)
        OpenAPI.validate_property(IoK8sApiCoreV1Handler, Symbol("tcpSocket"), tcpSocket)
        return new(exec, httpGet, tcpSocket, )
    end
end # type IoK8sApiCoreV1Handler

const _property_types_IoK8sApiCoreV1Handler = Dict{Symbol,String}(Symbol("exec")=>"IoK8sApiCoreV1ExecAction", Symbol("httpGet")=>"IoK8sApiCoreV1HTTPGetAction", Symbol("tcpSocket")=>"IoK8sApiCoreV1TCPSocketAction", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1Handler }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1Handler[name]))}

function check_required(o::IoK8sApiCoreV1Handler)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1Handler }, name::Symbol, val)
end
