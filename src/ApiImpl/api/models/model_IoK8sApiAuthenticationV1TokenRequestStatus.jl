# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.authentication.v1.TokenRequestStatus
TokenRequestStatus is the result of a token request.

    IoK8sApiAuthenticationV1TokenRequestStatus(;
        expirationTimestamp=nothing,
        token=nothing,
    )

    - expirationTimestamp::ZonedDateTime : Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
    - token::String : Token is the opaque bearer token.
"""
Base.@kwdef mutable struct IoK8sApiAuthenticationV1TokenRequestStatus <: OpenAPI.APIModel
    expirationTimestamp::Union{Nothing, ZonedDateTime} = nothing
    token::Union{Nothing, String} = nothing

    function IoK8sApiAuthenticationV1TokenRequestStatus(expirationTimestamp, token, )
        OpenAPI.validate_property(IoK8sApiAuthenticationV1TokenRequestStatus, Symbol("expirationTimestamp"), expirationTimestamp)
        OpenAPI.validate_property(IoK8sApiAuthenticationV1TokenRequestStatus, Symbol("token"), token)
        return new(expirationTimestamp, token, )
    end
end # type IoK8sApiAuthenticationV1TokenRequestStatus

const _property_types_IoK8sApiAuthenticationV1TokenRequestStatus = Dict{Symbol,String}(Symbol("expirationTimestamp")=>"ZonedDateTime", Symbol("token")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiAuthenticationV1TokenRequestStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAuthenticationV1TokenRequestStatus[name]))}

function check_required(o::IoK8sApiAuthenticationV1TokenRequestStatus)
    o.expirationTimestamp === nothing && (return false)
    o.token === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiAuthenticationV1TokenRequestStatus }, name::Symbol, val)
    if name === Symbol("expirationTimestamp")
        OpenAPI.validate_param(name, "IoK8sApiAuthenticationV1TokenRequestStatus", :format, val, "date-time")
    end
end
