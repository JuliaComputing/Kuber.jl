# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.Affinity
Affinity is a group of affinity scheduling rules.

    IoK8sApiCoreV1Affinity(;
        nodeAffinity=nothing,
        podAffinity=nothing,
        podAntiAffinity=nothing,
    )

    - nodeAffinity::IoK8sApiCoreV1NodeAffinity
    - podAffinity::IoK8sApiCoreV1PodAffinity
    - podAntiAffinity::IoK8sApiCoreV1PodAntiAffinity
"""
Base.@kwdef mutable struct IoK8sApiCoreV1Affinity <: OpenAPI.APIModel
    nodeAffinity = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1NodeAffinity }
    podAffinity = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1PodAffinity }
    podAntiAffinity = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1PodAntiAffinity }

    function IoK8sApiCoreV1Affinity(nodeAffinity, podAffinity, podAntiAffinity, )
        OpenAPI.validate_property(IoK8sApiCoreV1Affinity, Symbol("nodeAffinity"), nodeAffinity)
        OpenAPI.validate_property(IoK8sApiCoreV1Affinity, Symbol("podAffinity"), podAffinity)
        OpenAPI.validate_property(IoK8sApiCoreV1Affinity, Symbol("podAntiAffinity"), podAntiAffinity)
        return new(nodeAffinity, podAffinity, podAntiAffinity, )
    end
end # type IoK8sApiCoreV1Affinity

const _property_types_IoK8sApiCoreV1Affinity = Dict{Symbol,String}(Symbol("nodeAffinity")=>"IoK8sApiCoreV1NodeAffinity", Symbol("podAffinity")=>"IoK8sApiCoreV1PodAffinity", Symbol("podAntiAffinity")=>"IoK8sApiCoreV1PodAntiAffinity", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1Affinity }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1Affinity[name]))}

function check_required(o::IoK8sApiCoreV1Affinity)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1Affinity }, name::Symbol, val)
end
