# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceStatus
APIServiceStatus contains derived information about an API server

    IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus(;
        conditions=nothing,
    )

    - conditions::Vector{IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceCondition} : Current service state of apiService.
"""
Base.@kwdef mutable struct IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus <: OpenAPI.APIModel
    conditions::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceCondition} }

    function IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus(conditions, )
        OpenAPI.validate_property(IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus, Symbol("conditions"), conditions)
        return new(conditions, )
    end
end # type IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus

const _property_types_IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus = Dict{Symbol,String}(Symbol("conditions")=>"Vector{IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceCondition}", )
OpenAPI.property_type(::Type{ IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus[name]))}

function check_required(o::IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceStatus }, name::Symbol, val)
end
