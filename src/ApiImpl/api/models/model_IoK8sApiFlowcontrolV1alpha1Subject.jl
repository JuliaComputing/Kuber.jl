# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.flowcontrol.v1alpha1.Subject
Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.

    IoK8sApiFlowcontrolV1alpha1Subject(;
        group=nothing,
        kind=nothing,
        serviceAccount=nothing,
        user=nothing,
    )

    - group::IoK8sApiFlowcontrolV1alpha1GroupSubject
    - kind::String : Required
    - serviceAccount::IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject
    - user::IoK8sApiFlowcontrolV1alpha1UserSubject
"""
Base.@kwdef mutable struct IoK8sApiFlowcontrolV1alpha1Subject <: OpenAPI.APIModel
    group = nothing # spec type: Union{ Nothing, IoK8sApiFlowcontrolV1alpha1GroupSubject }
    kind::Union{Nothing, String} = nothing
    serviceAccount = nothing # spec type: Union{ Nothing, IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject }
    user = nothing # spec type: Union{ Nothing, IoK8sApiFlowcontrolV1alpha1UserSubject }

    function IoK8sApiFlowcontrolV1alpha1Subject(group, kind, serviceAccount, user, )
        OpenAPI.validate_property(IoK8sApiFlowcontrolV1alpha1Subject, Symbol("group"), group)
        OpenAPI.validate_property(IoK8sApiFlowcontrolV1alpha1Subject, Symbol("kind"), kind)
        OpenAPI.validate_property(IoK8sApiFlowcontrolV1alpha1Subject, Symbol("serviceAccount"), serviceAccount)
        OpenAPI.validate_property(IoK8sApiFlowcontrolV1alpha1Subject, Symbol("user"), user)
        return new(group, kind, serviceAccount, user, )
    end
end # type IoK8sApiFlowcontrolV1alpha1Subject

const _property_types_IoK8sApiFlowcontrolV1alpha1Subject = Dict{Symbol,String}(Symbol("group")=>"IoK8sApiFlowcontrolV1alpha1GroupSubject", Symbol("kind")=>"String", Symbol("serviceAccount")=>"IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject", Symbol("user")=>"IoK8sApiFlowcontrolV1alpha1UserSubject", )
OpenAPI.property_type(::Type{ IoK8sApiFlowcontrolV1alpha1Subject }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiFlowcontrolV1alpha1Subject[name]))}

function check_required(o::IoK8sApiFlowcontrolV1alpha1Subject)
    o.kind === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiFlowcontrolV1alpha1Subject }, name::Symbol, val)
end
