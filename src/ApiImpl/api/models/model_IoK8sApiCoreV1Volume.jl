# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.Volume
Volume represents a named volume in a pod that may be accessed by any container in the pod.

    IoK8sApiCoreV1Volume(;
        awsElasticBlockStore=nothing,
        azureDisk=nothing,
        azureFile=nothing,
        cephfs=nothing,
        cinder=nothing,
        configMap=nothing,
        csi=nothing,
        downwardAPI=nothing,
        emptyDir=nothing,
        fc=nothing,
        flexVolume=nothing,
        flocker=nothing,
        gcePersistentDisk=nothing,
        gitRepo=nothing,
        glusterfs=nothing,
        hostPath=nothing,
        iscsi=nothing,
        name=nothing,
        nfs=nothing,
        persistentVolumeClaim=nothing,
        photonPersistentDisk=nothing,
        portworxVolume=nothing,
        projected=nothing,
        quobyte=nothing,
        rbd=nothing,
        scaleIO=nothing,
        secret=nothing,
        storageos=nothing,
        vsphereVolume=nothing,
    )

    - awsElasticBlockStore::IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
    - azureDisk::IoK8sApiCoreV1AzureDiskVolumeSource
    - azureFile::IoK8sApiCoreV1AzureFileVolumeSource
    - cephfs::IoK8sApiCoreV1CephFSVolumeSource
    - cinder::IoK8sApiCoreV1CinderVolumeSource
    - configMap::IoK8sApiCoreV1ConfigMapVolumeSource
    - csi::IoK8sApiCoreV1CSIVolumeSource
    - downwardAPI::IoK8sApiCoreV1DownwardAPIVolumeSource
    - emptyDir::IoK8sApiCoreV1EmptyDirVolumeSource
    - fc::IoK8sApiCoreV1FCVolumeSource
    - flexVolume::IoK8sApiCoreV1FlexVolumeSource
    - flocker::IoK8sApiCoreV1FlockerVolumeSource
    - gcePersistentDisk::IoK8sApiCoreV1GCEPersistentDiskVolumeSource
    - gitRepo::IoK8sApiCoreV1GitRepoVolumeSource
    - glusterfs::IoK8sApiCoreV1GlusterfsVolumeSource
    - hostPath::IoK8sApiCoreV1HostPathVolumeSource
    - iscsi::IoK8sApiCoreV1ISCSIVolumeSource
    - name::String : Volume&#39;s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    - nfs::IoK8sApiCoreV1NFSVolumeSource
    - persistentVolumeClaim::IoK8sApiCoreV1PersistentVolumeClaimVolumeSource
    - photonPersistentDisk::IoK8sApiCoreV1PhotonPersistentDiskVolumeSource
    - portworxVolume::IoK8sApiCoreV1PortworxVolumeSource
    - projected::IoK8sApiCoreV1ProjectedVolumeSource
    - quobyte::IoK8sApiCoreV1QuobyteVolumeSource
    - rbd::IoK8sApiCoreV1RBDVolumeSource
    - scaleIO::IoK8sApiCoreV1ScaleIOVolumeSource
    - secret::IoK8sApiCoreV1SecretVolumeSource
    - storageos::IoK8sApiCoreV1StorageOSVolumeSource
    - vsphereVolume::IoK8sApiCoreV1VsphereVirtualDiskVolumeSource
"""
Base.@kwdef mutable struct IoK8sApiCoreV1Volume <: OpenAPI.APIModel
    awsElasticBlockStore = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource }
    azureDisk = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1AzureDiskVolumeSource }
    azureFile = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1AzureFileVolumeSource }
    cephfs = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1CephFSVolumeSource }
    cinder = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1CinderVolumeSource }
    configMap = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ConfigMapVolumeSource }
    csi = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1CSIVolumeSource }
    downwardAPI = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1DownwardAPIVolumeSource }
    emptyDir = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1EmptyDirVolumeSource }
    fc = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1FCVolumeSource }
    flexVolume = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1FlexVolumeSource }
    flocker = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1FlockerVolumeSource }
    gcePersistentDisk = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1GCEPersistentDiskVolumeSource }
    gitRepo = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1GitRepoVolumeSource }
    glusterfs = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1GlusterfsVolumeSource }
    hostPath = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1HostPathVolumeSource }
    iscsi = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ISCSIVolumeSource }
    name::Union{Nothing, String} = nothing
    nfs = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1NFSVolumeSource }
    persistentVolumeClaim = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1PersistentVolumeClaimVolumeSource }
    photonPersistentDisk = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1PhotonPersistentDiskVolumeSource }
    portworxVolume = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1PortworxVolumeSource }
    projected = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ProjectedVolumeSource }
    quobyte = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1QuobyteVolumeSource }
    rbd = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1RBDVolumeSource }
    scaleIO = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ScaleIOVolumeSource }
    secret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretVolumeSource }
    storageos = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1StorageOSVolumeSource }
    vsphereVolume = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1VsphereVirtualDiskVolumeSource }

    function IoK8sApiCoreV1Volume(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume, )
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("awsElasticBlockStore"), awsElasticBlockStore)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("azureDisk"), azureDisk)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("azureFile"), azureFile)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("cephfs"), cephfs)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("cinder"), cinder)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("configMap"), configMap)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("csi"), csi)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("downwardAPI"), downwardAPI)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("emptyDir"), emptyDir)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("fc"), fc)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("flexVolume"), flexVolume)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("flocker"), flocker)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("gcePersistentDisk"), gcePersistentDisk)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("gitRepo"), gitRepo)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("glusterfs"), glusterfs)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("hostPath"), hostPath)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("iscsi"), iscsi)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("name"), name)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("nfs"), nfs)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("persistentVolumeClaim"), persistentVolumeClaim)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("photonPersistentDisk"), photonPersistentDisk)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("portworxVolume"), portworxVolume)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("projected"), projected)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("quobyte"), quobyte)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("rbd"), rbd)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("scaleIO"), scaleIO)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("secret"), secret)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("storageos"), storageos)
        OpenAPI.validate_property(IoK8sApiCoreV1Volume, Symbol("vsphereVolume"), vsphereVolume)
        return new(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume, )
    end
end # type IoK8sApiCoreV1Volume

const _property_types_IoK8sApiCoreV1Volume = Dict{Symbol,String}(Symbol("awsElasticBlockStore")=>"IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource", Symbol("azureDisk")=>"IoK8sApiCoreV1AzureDiskVolumeSource", Symbol("azureFile")=>"IoK8sApiCoreV1AzureFileVolumeSource", Symbol("cephfs")=>"IoK8sApiCoreV1CephFSVolumeSource", Symbol("cinder")=>"IoK8sApiCoreV1CinderVolumeSource", Symbol("configMap")=>"IoK8sApiCoreV1ConfigMapVolumeSource", Symbol("csi")=>"IoK8sApiCoreV1CSIVolumeSource", Symbol("downwardAPI")=>"IoK8sApiCoreV1DownwardAPIVolumeSource", Symbol("emptyDir")=>"IoK8sApiCoreV1EmptyDirVolumeSource", Symbol("fc")=>"IoK8sApiCoreV1FCVolumeSource", Symbol("flexVolume")=>"IoK8sApiCoreV1FlexVolumeSource", Symbol("flocker")=>"IoK8sApiCoreV1FlockerVolumeSource", Symbol("gcePersistentDisk")=>"IoK8sApiCoreV1GCEPersistentDiskVolumeSource", Symbol("gitRepo")=>"IoK8sApiCoreV1GitRepoVolumeSource", Symbol("glusterfs")=>"IoK8sApiCoreV1GlusterfsVolumeSource", Symbol("hostPath")=>"IoK8sApiCoreV1HostPathVolumeSource", Symbol("iscsi")=>"IoK8sApiCoreV1ISCSIVolumeSource", Symbol("name")=>"String", Symbol("nfs")=>"IoK8sApiCoreV1NFSVolumeSource", Symbol("persistentVolumeClaim")=>"IoK8sApiCoreV1PersistentVolumeClaimVolumeSource", Symbol("photonPersistentDisk")=>"IoK8sApiCoreV1PhotonPersistentDiskVolumeSource", Symbol("portworxVolume")=>"IoK8sApiCoreV1PortworxVolumeSource", Symbol("projected")=>"IoK8sApiCoreV1ProjectedVolumeSource", Symbol("quobyte")=>"IoK8sApiCoreV1QuobyteVolumeSource", Symbol("rbd")=>"IoK8sApiCoreV1RBDVolumeSource", Symbol("scaleIO")=>"IoK8sApiCoreV1ScaleIOVolumeSource", Symbol("secret")=>"IoK8sApiCoreV1SecretVolumeSource", Symbol("storageos")=>"IoK8sApiCoreV1StorageOSVolumeSource", Symbol("vsphereVolume")=>"IoK8sApiCoreV1VsphereVirtualDiskVolumeSource", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1Volume }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1Volume[name]))}

function check_required(o::IoK8sApiCoreV1Volume)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1Volume }, name::Symbol, val)
end
