# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.extensions.v1beta1.NetworkPolicyPort
DEPRECATED 1.9 - This group version of NetworkPolicyPort is deprecated by networking/v1/NetworkPolicyPort.

    IoK8sApiExtensionsV1beta1NetworkPolicyPort(;
        port=nothing,
        protocol=nothing,
    )

    - port::String : IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
    - protocol::String : Optional.  The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
"""
Base.@kwdef mutable struct IoK8sApiExtensionsV1beta1NetworkPolicyPort <: OpenAPI.APIModel
    port::Union{Nothing, String} = nothing
    protocol::Union{Nothing, String} = nothing

    function IoK8sApiExtensionsV1beta1NetworkPolicyPort(port, protocol, )
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1NetworkPolicyPort, Symbol("port"), port)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1NetworkPolicyPort, Symbol("protocol"), protocol)
        return new(port, protocol, )
    end
end # type IoK8sApiExtensionsV1beta1NetworkPolicyPort

const _property_types_IoK8sApiExtensionsV1beta1NetworkPolicyPort = Dict{Symbol,String}(Symbol("port")=>"String", Symbol("protocol")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiExtensionsV1beta1NetworkPolicyPort }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiExtensionsV1beta1NetworkPolicyPort[name]))}

function check_required(o::IoK8sApiExtensionsV1beta1NetworkPolicyPort)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiExtensionsV1beta1NetworkPolicyPort }, name::Symbol, val)
    if name === Symbol("port")
        OpenAPI.validate_param(name, "IoK8sApiExtensionsV1beta1NetworkPolicyPort", :format, val, "int-or-string")
    end
end
