# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""sh_karpenter_v1alpha5_Provisioner_status_conditions_inner
Condition defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties

    ShKarpenterV1alpha5ProvisionerStatusConditionsInner(;
        lastTransitionTime=nothing,
        message=nothing,
        reason=nothing,
        severity=nothing,
        status=nothing,
        type=nothing,
    )

    - lastTransitionTime::String : LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
    - message::String : A human readable message indicating details about the transition.
    - reason::String : The reason for the condition&#39;s last transition.
    - severity::String : Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    - status::String : Status of the condition, one of True, False, Unknown.
    - type::String : Type of condition.
"""
Base.@kwdef mutable struct ShKarpenterV1alpha5ProvisionerStatusConditionsInner <: OpenAPI.APIModel
    lastTransitionTime::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing
    reason::Union{Nothing, String} = nothing
    severity::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function ShKarpenterV1alpha5ProvisionerStatusConditionsInner(lastTransitionTime, message, reason, severity, status, type, )
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerStatusConditionsInner, Symbol("lastTransitionTime"), lastTransitionTime)
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerStatusConditionsInner, Symbol("message"), message)
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerStatusConditionsInner, Symbol("reason"), reason)
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerStatusConditionsInner, Symbol("severity"), severity)
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerStatusConditionsInner, Symbol("status"), status)
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerStatusConditionsInner, Symbol("type"), type)
        return new(lastTransitionTime, message, reason, severity, status, type, )
    end
end # type ShKarpenterV1alpha5ProvisionerStatusConditionsInner

const _property_types_ShKarpenterV1alpha5ProvisionerStatusConditionsInner = Dict{Symbol,String}(Symbol("lastTransitionTime")=>"String", Symbol("message")=>"String", Symbol("reason")=>"String", Symbol("severity")=>"String", Symbol("status")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ ShKarpenterV1alpha5ProvisionerStatusConditionsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ShKarpenterV1alpha5ProvisionerStatusConditionsInner[name]))}

function check_required(o::ShKarpenterV1alpha5ProvisionerStatusConditionsInner)
    o.status === nothing && (return false)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ShKarpenterV1alpha5ProvisionerStatusConditionsInner }, name::Symbol, val)
end
