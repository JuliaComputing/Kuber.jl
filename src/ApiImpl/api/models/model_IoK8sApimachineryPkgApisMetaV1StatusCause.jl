# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause
StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.

    IoK8sApimachineryPkgApisMetaV1StatusCause(;
        field=nothing,
        message=nothing,
        reason=nothing,
    )

    - field::String : The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.  Examples:   \&quot;name\&quot; - the field \&quot;name\&quot; on the current resource   \&quot;items[0].name\&quot; - the field \&quot;name\&quot; on the first array entry in \&quot;items\&quot;
    - message::String : A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
    - reason::String : A machine-readable description of the cause of the error. If this value is empty there is no information available.
"""
Base.@kwdef mutable struct IoK8sApimachineryPkgApisMetaV1StatusCause <: OpenAPI.APIModel
    field::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing
    reason::Union{Nothing, String} = nothing

    function IoK8sApimachineryPkgApisMetaV1StatusCause(field, message, reason, )
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1StatusCause, Symbol("field"), field)
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1StatusCause, Symbol("message"), message)
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1StatusCause, Symbol("reason"), reason)
        return new(field, message, reason, )
    end
end # type IoK8sApimachineryPkgApisMetaV1StatusCause

const _property_types_IoK8sApimachineryPkgApisMetaV1StatusCause = Dict{Symbol,String}(Symbol("field")=>"String", Symbol("message")=>"String", Symbol("reason")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApimachineryPkgApisMetaV1StatusCause }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApimachineryPkgApisMetaV1StatusCause[name]))}

function check_required(o::IoK8sApimachineryPkgApisMetaV1StatusCause)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApimachineryPkgApisMetaV1StatusCause }, name::Symbol, val)
end
