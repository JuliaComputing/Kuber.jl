# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerStatus
HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.

    IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus(;
        conditions=nothing,
        currentMetrics=nothing,
        currentReplicas=nothing,
        desiredReplicas=nothing,
        lastScaleTime=nothing,
        observedGeneration=nothing,
    )

    - conditions::Vector{IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerCondition} : conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.
    - currentMetrics::Vector{IoK8sApiAutoscalingV2beta2MetricStatus} : currentMetrics is the last read state of the metrics used by this autoscaler.
    - currentReplicas::Int64 : currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.
    - desiredReplicas::Int64 : desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.
    - lastScaleTime::ZonedDateTime : Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
    - observedGeneration::Int64 : observedGeneration is the most recent generation observed by this autoscaler.
"""
Base.@kwdef mutable struct IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus <: OpenAPI.APIModel
    conditions::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerCondition} }
    currentMetrics::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiAutoscalingV2beta2MetricStatus} }
    currentReplicas::Union{Nothing, Int64} = nothing
    desiredReplicas::Union{Nothing, Int64} = nothing
    lastScaleTime::Union{Nothing, ZonedDateTime} = nothing
    observedGeneration::Union{Nothing, Int64} = nothing

    function IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus(conditions, currentMetrics, currentReplicas, desiredReplicas, lastScaleTime, observedGeneration, )
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus, Symbol("conditions"), conditions)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus, Symbol("currentMetrics"), currentMetrics)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus, Symbol("currentReplicas"), currentReplicas)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus, Symbol("desiredReplicas"), desiredReplicas)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus, Symbol("lastScaleTime"), lastScaleTime)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus, Symbol("observedGeneration"), observedGeneration)
        return new(conditions, currentMetrics, currentReplicas, desiredReplicas, lastScaleTime, observedGeneration, )
    end
end # type IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus

const _property_types_IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus = Dict{Symbol,String}(Symbol("conditions")=>"Vector{IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerCondition}", Symbol("currentMetrics")=>"Vector{IoK8sApiAutoscalingV2beta2MetricStatus}", Symbol("currentReplicas")=>"Int64", Symbol("desiredReplicas")=>"Int64", Symbol("lastScaleTime")=>"ZonedDateTime", Symbol("observedGeneration")=>"Int64", )
OpenAPI.property_type(::Type{ IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus[name]))}

function check_required(o::IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus)
    o.conditions === nothing && (return false)
    o.currentReplicas === nothing && (return false)
    o.desiredReplicas === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus }, name::Symbol, val)
    if name === Symbol("currentReplicas")
        OpenAPI.validate_param(name, "IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus", :format, val, "int32")
    end
    if name === Symbol("desiredReplicas")
        OpenAPI.validate_param(name, "IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus", :format, val, "int32")
    end
    if name === Symbol("lastScaleTime")
        OpenAPI.validate_param(name, "IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus", :format, val, "date-time")
    end
    if name === Symbol("observedGeneration")
        OpenAPI.validate_param(name, "IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerStatus", :format, val, "int64")
    end
end
