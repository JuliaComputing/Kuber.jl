# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.autoscaling.v2beta2.ExternalMetricSource
ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).

    IoK8sApiAutoscalingV2beta2ExternalMetricSource(;
        metric=nothing,
        target=nothing,
    )

    - metric::IoK8sApiAutoscalingV2beta2MetricIdentifier
    - target::IoK8sApiAutoscalingV2beta2MetricTarget
"""
Base.@kwdef mutable struct IoK8sApiAutoscalingV2beta2ExternalMetricSource <: OpenAPI.APIModel
    metric = nothing # spec type: Union{ Nothing, IoK8sApiAutoscalingV2beta2MetricIdentifier }
    target = nothing # spec type: Union{ Nothing, IoK8sApiAutoscalingV2beta2MetricTarget }

    function IoK8sApiAutoscalingV2beta2ExternalMetricSource(metric, target, )
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2ExternalMetricSource, Symbol("metric"), metric)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2ExternalMetricSource, Symbol("target"), target)
        return new(metric, target, )
    end
end # type IoK8sApiAutoscalingV2beta2ExternalMetricSource

const _property_types_IoK8sApiAutoscalingV2beta2ExternalMetricSource = Dict{Symbol,String}(Symbol("metric")=>"IoK8sApiAutoscalingV2beta2MetricIdentifier", Symbol("target")=>"IoK8sApiAutoscalingV2beta2MetricTarget", )
OpenAPI.property_type(::Type{ IoK8sApiAutoscalingV2beta2ExternalMetricSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAutoscalingV2beta2ExternalMetricSource[name]))}

function check_required(o::IoK8sApiAutoscalingV2beta2ExternalMetricSource)
    o.metric === nothing && (return false)
    o.target === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiAutoscalingV2beta2ExternalMetricSource }, name::Symbol, val)
end
