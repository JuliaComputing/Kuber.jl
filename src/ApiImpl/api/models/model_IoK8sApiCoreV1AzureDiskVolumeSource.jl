# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.AzureDiskVolumeSource
AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.

    IoK8sApiCoreV1AzureDiskVolumeSource(;
        cachingMode=nothing,
        diskName=nothing,
        diskURI=nothing,
        fsType=nothing,
        kind=nothing,
        readOnly=nothing,
    )

    - cachingMode::String : Host Caching mode: None, Read Only, Read Write.
    - diskName::String : The Name of the data disk in the blob storage
    - diskURI::String : The URI the data disk in the blob storage
    - fsType::String : Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \&quot;ext4\&quot;, \&quot;xfs\&quot;, \&quot;ntfs\&quot;. Implicitly inferred to be \&quot;ext4\&quot; if unspecified.
    - kind::String : Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
    - readOnly::Bool : Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1AzureDiskVolumeSource <: OpenAPI.APIModel
    cachingMode::Union{Nothing, String} = nothing
    diskName::Union{Nothing, String} = nothing
    diskURI::Union{Nothing, String} = nothing
    fsType::Union{Nothing, String} = nothing
    kind::Union{Nothing, String} = nothing
    readOnly::Union{Nothing, Bool} = nothing

    function IoK8sApiCoreV1AzureDiskVolumeSource(cachingMode, diskName, diskURI, fsType, kind, readOnly, )
        OpenAPI.validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("cachingMode"), cachingMode)
        OpenAPI.validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("diskName"), diskName)
        OpenAPI.validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("diskURI"), diskURI)
        OpenAPI.validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("fsType"), fsType)
        OpenAPI.validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("kind"), kind)
        OpenAPI.validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("readOnly"), readOnly)
        return new(cachingMode, diskName, diskURI, fsType, kind, readOnly, )
    end
end # type IoK8sApiCoreV1AzureDiskVolumeSource

const _property_types_IoK8sApiCoreV1AzureDiskVolumeSource = Dict{Symbol,String}(Symbol("cachingMode")=>"String", Symbol("diskName")=>"String", Symbol("diskURI")=>"String", Symbol("fsType")=>"String", Symbol("kind")=>"String", Symbol("readOnly")=>"Bool", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1AzureDiskVolumeSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1AzureDiskVolumeSource[name]))}

function check_required(o::IoK8sApiCoreV1AzureDiskVolumeSource)
    o.diskName === nothing && (return false)
    o.diskURI === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1AzureDiskVolumeSource }, name::Symbol, val)
end
