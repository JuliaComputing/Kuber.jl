# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.VolumeDevice
volumeDevice describes a mapping of a raw block device within a container.

    IoK8sApiCoreV1VolumeDevice(;
        devicePath=nothing,
        name=nothing,
    )

    - devicePath::String : devicePath is the path inside of the container that the device will be mapped to.
    - name::String : name must match the name of a persistentVolumeClaim in the pod
"""
Base.@kwdef mutable struct IoK8sApiCoreV1VolumeDevice <: OpenAPI.APIModel
    devicePath::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1VolumeDevice(devicePath, name, )
        OpenAPI.validate_property(IoK8sApiCoreV1VolumeDevice, Symbol("devicePath"), devicePath)
        OpenAPI.validate_property(IoK8sApiCoreV1VolumeDevice, Symbol("name"), name)
        return new(devicePath, name, )
    end
end # type IoK8sApiCoreV1VolumeDevice

const _property_types_IoK8sApiCoreV1VolumeDevice = Dict{Symbol,String}(Symbol("devicePath")=>"String", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1VolumeDevice }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1VolumeDevice[name]))}

function check_required(o::IoK8sApiCoreV1VolumeDevice)
    o.devicePath === nothing && (return false)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1VolumeDevice }, name::Symbol, val)
end
