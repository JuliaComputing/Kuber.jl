# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions
Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.

    IoK8sApimachineryPkgApisMetaV1Preconditions(;
        resourceVersion=nothing,
        uid=nothing,
    )

    - resourceVersion::String : Specifies the target ResourceVersion
    - uid::String : Specifies the target UID.
"""
Base.@kwdef mutable struct IoK8sApimachineryPkgApisMetaV1Preconditions <: OpenAPI.APIModel
    resourceVersion::Union{Nothing, String} = nothing
    uid::Union{Nothing, String} = nothing

    function IoK8sApimachineryPkgApisMetaV1Preconditions(resourceVersion, uid, )
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1Preconditions, Symbol("resourceVersion"), resourceVersion)
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1Preconditions, Symbol("uid"), uid)
        return new(resourceVersion, uid, )
    end
end # type IoK8sApimachineryPkgApisMetaV1Preconditions

const _property_types_IoK8sApimachineryPkgApisMetaV1Preconditions = Dict{Symbol,String}(Symbol("resourceVersion")=>"String", Symbol("uid")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApimachineryPkgApisMetaV1Preconditions }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApimachineryPkgApisMetaV1Preconditions[name]))}

function check_required(o::IoK8sApimachineryPkgApisMetaV1Preconditions)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApimachineryPkgApisMetaV1Preconditions }, name::Symbol, val)
end
