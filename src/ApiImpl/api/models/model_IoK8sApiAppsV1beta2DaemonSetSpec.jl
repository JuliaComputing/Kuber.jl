# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.apps.v1beta2.DaemonSetSpec
DaemonSetSpec is the specification of a daemon set.

    IoK8sApiAppsV1beta2DaemonSetSpec(;
        minReadySeconds=nothing,
        revisionHistoryLimit=nothing,
        selector=nothing,
        template=nothing,
        updateStrategy=nothing,
    )

    - minReadySeconds::Int64 : The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
    - revisionHistoryLimit::Int64 : The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
    - selector::IoK8sApimachineryPkgApisMetaV1LabelSelector
    - template::IoK8sApiCoreV1PodTemplateSpec
    - updateStrategy::IoK8sApiAppsV1beta2DaemonSetUpdateStrategy
"""
Base.@kwdef mutable struct IoK8sApiAppsV1beta2DaemonSetSpec <: OpenAPI.APIModel
    minReadySeconds::Union{Nothing, Int64} = nothing
    revisionHistoryLimit::Union{Nothing, Int64} = nothing
    selector = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1LabelSelector }
    template = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1PodTemplateSpec }
    updateStrategy = nothing # spec type: Union{ Nothing, IoK8sApiAppsV1beta2DaemonSetUpdateStrategy }

    function IoK8sApiAppsV1beta2DaemonSetSpec(minReadySeconds, revisionHistoryLimit, selector, template, updateStrategy, )
        OpenAPI.validate_property(IoK8sApiAppsV1beta2DaemonSetSpec, Symbol("minReadySeconds"), minReadySeconds)
        OpenAPI.validate_property(IoK8sApiAppsV1beta2DaemonSetSpec, Symbol("revisionHistoryLimit"), revisionHistoryLimit)
        OpenAPI.validate_property(IoK8sApiAppsV1beta2DaemonSetSpec, Symbol("selector"), selector)
        OpenAPI.validate_property(IoK8sApiAppsV1beta2DaemonSetSpec, Symbol("template"), template)
        OpenAPI.validate_property(IoK8sApiAppsV1beta2DaemonSetSpec, Symbol("updateStrategy"), updateStrategy)
        return new(minReadySeconds, revisionHistoryLimit, selector, template, updateStrategy, )
    end
end # type IoK8sApiAppsV1beta2DaemonSetSpec

const _property_types_IoK8sApiAppsV1beta2DaemonSetSpec = Dict{Symbol,String}(Symbol("minReadySeconds")=>"Int64", Symbol("revisionHistoryLimit")=>"Int64", Symbol("selector")=>"IoK8sApimachineryPkgApisMetaV1LabelSelector", Symbol("template")=>"IoK8sApiCoreV1PodTemplateSpec", Symbol("updateStrategy")=>"IoK8sApiAppsV1beta2DaemonSetUpdateStrategy", )
OpenAPI.property_type(::Type{ IoK8sApiAppsV1beta2DaemonSetSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAppsV1beta2DaemonSetSpec[name]))}

function check_required(o::IoK8sApiAppsV1beta2DaemonSetSpec)
    o.selector === nothing && (return false)
    o.template === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiAppsV1beta2DaemonSetSpec }, name::Symbol, val)
    if name === Symbol("minReadySeconds")
        OpenAPI.validate_param(name, "IoK8sApiAppsV1beta2DaemonSetSpec", :format, val, "int32")
    end
    if name === Symbol("revisionHistoryLimit")
        OpenAPI.validate_param(name, "IoK8sApiAppsV1beta2DaemonSetSpec", :format, val, "int32")
    end
end
