# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion
WebhookConversion describes how to call a conversion webhook

    IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion(;
        clientConfig=nothing,
        conversionReviewVersions=nothing,
    )

    - clientConfig::IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig
    - conversionReviewVersions::Vector{String} : conversionReviewVersions is an ordered list of preferred &#x60;ConversionReview&#x60; versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.
"""
Base.@kwdef mutable struct IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion <: OpenAPI.APIModel
    clientConfig = nothing # spec type: Union{ Nothing, IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig }
    conversionReviewVersions::Union{Nothing, Vector{String}} = nothing

    function IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion(clientConfig, conversionReviewVersions, )
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion, Symbol("clientConfig"), clientConfig)
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion, Symbol("conversionReviewVersions"), conversionReviewVersions)
        return new(clientConfig, conversionReviewVersions, )
    end
end # type IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion

const _property_types_IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion = Dict{Symbol,String}(Symbol("clientConfig")=>"IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig", Symbol("conversionReviewVersions")=>"Vector{String}", )
OpenAPI.property_type(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion[name]))}

function check_required(o::IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion)
    o.conversionReviewVersions === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion }, name::Symbol, val)
end
