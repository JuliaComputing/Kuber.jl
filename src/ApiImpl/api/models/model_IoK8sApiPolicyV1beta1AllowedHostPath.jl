# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.policy.v1beta1.AllowedHostPath
AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined.

    IoK8sApiPolicyV1beta1AllowedHostPath(;
        pathPrefix=nothing,
        readOnly=nothing,
    )

    - pathPrefix::String : pathPrefix is the path prefix that the host volume must match. It does not support &#x60;*&#x60;. Trailing slashes are trimmed when validating the path prefix with a host path.  Examples: &#x60;/foo&#x60; would allow &#x60;/foo&#x60;, &#x60;/foo/&#x60; and &#x60;/foo/bar&#x60; &#x60;/foo&#x60; would not allow &#x60;/food&#x60; or &#x60;/etc/foo&#x60;
    - readOnly::Bool : when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.
"""
Base.@kwdef mutable struct IoK8sApiPolicyV1beta1AllowedHostPath <: OpenAPI.APIModel
    pathPrefix::Union{Nothing, String} = nothing
    readOnly::Union{Nothing, Bool} = nothing

    function IoK8sApiPolicyV1beta1AllowedHostPath(pathPrefix, readOnly, )
        OpenAPI.validate_property(IoK8sApiPolicyV1beta1AllowedHostPath, Symbol("pathPrefix"), pathPrefix)
        OpenAPI.validate_property(IoK8sApiPolicyV1beta1AllowedHostPath, Symbol("readOnly"), readOnly)
        return new(pathPrefix, readOnly, )
    end
end # type IoK8sApiPolicyV1beta1AllowedHostPath

const _property_types_IoK8sApiPolicyV1beta1AllowedHostPath = Dict{Symbol,String}(Symbol("pathPrefix")=>"String", Symbol("readOnly")=>"Bool", )
OpenAPI.property_type(::Type{ IoK8sApiPolicyV1beta1AllowedHostPath }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiPolicyV1beta1AllowedHostPath[name]))}

function check_required(o::IoK8sApiPolicyV1beta1AllowedHostPath)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiPolicyV1beta1AllowedHostPath }, name::Symbol, val)
end
