# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.ResourceQuotaStatus
ResourceQuotaStatus defines the enforced hard limits and observed use.

    IoK8sApiCoreV1ResourceQuotaStatus(;
        hard=nothing,
        used=nothing,
    )

    - hard::Dict{String, String} : Hard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
    - used::Dict{String, String} : Used is the current observed total usage of the resource in the namespace.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1ResourceQuotaStatus <: OpenAPI.APIModel
    hard::Union{Nothing, Dict{String, String}} = nothing
    used::Union{Nothing, Dict{String, String}} = nothing

    function IoK8sApiCoreV1ResourceQuotaStatus(hard, used, )
        OpenAPI.validate_property(IoK8sApiCoreV1ResourceQuotaStatus, Symbol("hard"), hard)
        OpenAPI.validate_property(IoK8sApiCoreV1ResourceQuotaStatus, Symbol("used"), used)
        return new(hard, used, )
    end
end # type IoK8sApiCoreV1ResourceQuotaStatus

const _property_types_IoK8sApiCoreV1ResourceQuotaStatus = Dict{Symbol,String}(Symbol("hard")=>"Dict{String, String}", Symbol("used")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1ResourceQuotaStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ResourceQuotaStatus[name]))}

function check_required(o::IoK8sApiCoreV1ResourceQuotaStatus)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1ResourceQuotaStatus }, name::Symbol, val)
end
