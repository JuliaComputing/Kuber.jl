# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.batch.v1beta1.CronJobStatus
CronJobStatus represents the current state of a cron job.

    IoK8sApiBatchV1beta1CronJobStatus(;
        active=nothing,
        lastScheduleTime=nothing,
        lastSuccessfulTime=nothing,
    )

    - active::Vector{IoK8sApiCoreV1ObjectReference} : A list of pointers to currently running jobs.
    - lastScheduleTime::ZonedDateTime : Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
    - lastSuccessfulTime::ZonedDateTime : Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
"""
Base.@kwdef mutable struct IoK8sApiBatchV1beta1CronJobStatus <: OpenAPI.APIModel
    active::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1ObjectReference} }
    lastScheduleTime::Union{Nothing, ZonedDateTime} = nothing
    lastSuccessfulTime::Union{Nothing, ZonedDateTime} = nothing

    function IoK8sApiBatchV1beta1CronJobStatus(active, lastScheduleTime, lastSuccessfulTime, )
        OpenAPI.validate_property(IoK8sApiBatchV1beta1CronJobStatus, Symbol("active"), active)
        OpenAPI.validate_property(IoK8sApiBatchV1beta1CronJobStatus, Symbol("lastScheduleTime"), lastScheduleTime)
        OpenAPI.validate_property(IoK8sApiBatchV1beta1CronJobStatus, Symbol("lastSuccessfulTime"), lastSuccessfulTime)
        return new(active, lastScheduleTime, lastSuccessfulTime, )
    end
end # type IoK8sApiBatchV1beta1CronJobStatus

const _property_types_IoK8sApiBatchV1beta1CronJobStatus = Dict{Symbol,String}(Symbol("active")=>"Vector{IoK8sApiCoreV1ObjectReference}", Symbol("lastScheduleTime")=>"ZonedDateTime", Symbol("lastSuccessfulTime")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ IoK8sApiBatchV1beta1CronJobStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiBatchV1beta1CronJobStatus[name]))}

function check_required(o::IoK8sApiBatchV1beta1CronJobStatus)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiBatchV1beta1CronJobStatus }, name::Symbol, val)
    if name === Symbol("lastScheduleTime")
        OpenAPI.validate_param(name, "IoK8sApiBatchV1beta1CronJobStatus", :format, val, "date-time")
    end
    if name === Symbol("lastSuccessfulTime")
        OpenAPI.validate_param(name, "IoK8sApiBatchV1beta1CronJobStatus", :format, val, "date-time")
    end
end
