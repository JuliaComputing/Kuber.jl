# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.metrics.v1beta1.PodMetricsList
PodMetricsList is a list of PodMetrics.

    IoK8sApiMetricsV1beta1PodMetricsList(;
        items=nothing,
        metadata=nothing,
    )

    - items::Vector{IoK8sApiMetricsV1beta1PodMetrics} : List of pod metrics.
    - metadata::IoK8sApimachineryPkgApisMetaV1ListMeta
"""
Base.@kwdef mutable struct IoK8sApiMetricsV1beta1PodMetricsList <: OpenAPI.APIModel
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiMetricsV1beta1PodMetrics} }
    metadata = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ListMeta }

    function IoK8sApiMetricsV1beta1PodMetricsList(items, metadata, )
        OpenAPI.validate_property(IoK8sApiMetricsV1beta1PodMetricsList, Symbol("items"), items)
        OpenAPI.validate_property(IoK8sApiMetricsV1beta1PodMetricsList, Symbol("metadata"), metadata)
        return new(items, metadata, )
    end
end # type IoK8sApiMetricsV1beta1PodMetricsList

const _property_types_IoK8sApiMetricsV1beta1PodMetricsList = Dict{Symbol,String}(Symbol("items")=>"Vector{IoK8sApiMetricsV1beta1PodMetrics}", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ListMeta", )
OpenAPI.property_type(::Type{ IoK8sApiMetricsV1beta1PodMetricsList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiMetricsV1beta1PodMetricsList[name]))}

function check_required(o::IoK8sApiMetricsV1beta1PodMetricsList)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiMetricsV1beta1PodMetricsList }, name::Symbol, val)
end
