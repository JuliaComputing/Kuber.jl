# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.EnvVarSource
EnvVarSource represents a source for the value of an EnvVar.

    IoK8sApiCoreV1EnvVarSource(;
        configMapKeyRef=nothing,
        fieldRef=nothing,
        resourceFieldRef=nothing,
        secretKeyRef=nothing,
    )

    - configMapKeyRef::IoK8sApiCoreV1ConfigMapKeySelector
    - fieldRef::IoK8sApiCoreV1ObjectFieldSelector
    - resourceFieldRef::IoK8sApiCoreV1ResourceFieldSelector
    - secretKeyRef::IoK8sApiCoreV1SecretKeySelector
"""
Base.@kwdef mutable struct IoK8sApiCoreV1EnvVarSource <: OpenAPI.APIModel
    configMapKeyRef = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ConfigMapKeySelector }
    fieldRef = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ObjectFieldSelector }
    resourceFieldRef = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ResourceFieldSelector }
    secretKeyRef = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }

    function IoK8sApiCoreV1EnvVarSource(configMapKeyRef, fieldRef, resourceFieldRef, secretKeyRef, )
        OpenAPI.validate_property(IoK8sApiCoreV1EnvVarSource, Symbol("configMapKeyRef"), configMapKeyRef)
        OpenAPI.validate_property(IoK8sApiCoreV1EnvVarSource, Symbol("fieldRef"), fieldRef)
        OpenAPI.validate_property(IoK8sApiCoreV1EnvVarSource, Symbol("resourceFieldRef"), resourceFieldRef)
        OpenAPI.validate_property(IoK8sApiCoreV1EnvVarSource, Symbol("secretKeyRef"), secretKeyRef)
        return new(configMapKeyRef, fieldRef, resourceFieldRef, secretKeyRef, )
    end
end # type IoK8sApiCoreV1EnvVarSource

const _property_types_IoK8sApiCoreV1EnvVarSource = Dict{Symbol,String}(Symbol("configMapKeyRef")=>"IoK8sApiCoreV1ConfigMapKeySelector", Symbol("fieldRef")=>"IoK8sApiCoreV1ObjectFieldSelector", Symbol("resourceFieldRef")=>"IoK8sApiCoreV1ResourceFieldSelector", Symbol("secretKeyRef")=>"IoK8sApiCoreV1SecretKeySelector", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1EnvVarSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1EnvVarSource[name]))}

function check_required(o::IoK8sApiCoreV1EnvVarSource)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1EnvVarSource }, name::Symbol, val)
end
