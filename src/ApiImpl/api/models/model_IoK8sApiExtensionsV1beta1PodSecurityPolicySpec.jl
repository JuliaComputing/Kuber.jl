# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.extensions.v1beta1.PodSecurityPolicySpec
PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead.

    IoK8sApiExtensionsV1beta1PodSecurityPolicySpec(;
        allowPrivilegeEscalation=nothing,
        allowedCSIDrivers=nothing,
        allowedCapabilities=nothing,
        allowedFlexVolumes=nothing,
        allowedHostPaths=nothing,
        allowedProcMountTypes=nothing,
        allowedUnsafeSysctls=nothing,
        defaultAddCapabilities=nothing,
        defaultAllowPrivilegeEscalation=nothing,
        forbiddenSysctls=nothing,
        fsGroup=nothing,
        hostIPC=nothing,
        hostNetwork=nothing,
        hostPID=nothing,
        hostPorts=nothing,
        privileged=nothing,
        readOnlyRootFilesystem=nothing,
        requiredDropCapabilities=nothing,
        runAsGroup=nothing,
        runAsUser=nothing,
        runtimeClass=nothing,
        seLinux=nothing,
        supplementalGroups=nothing,
        volumes=nothing,
    )

    - allowPrivilegeEscalation::Bool : allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
    - allowedCSIDrivers::Vector{IoK8sApiExtensionsV1beta1AllowedCSIDriver} : AllowedCSIDrivers is a whitelist of inline CSI drivers that must be explicitly set to be embedded within a pod spec. An empty value indicates that any CSI driver can be used for inline ephemeral volumes.
    - allowedCapabilities::Vector{String} : allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author&#39;s discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.
    - allowedFlexVolumes::Vector{IoK8sApiExtensionsV1beta1AllowedFlexVolume} : allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \&quot;volumes\&quot; field.
    - allowedHostPaths::Vector{IoK8sApiExtensionsV1beta1AllowedHostPath} : allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used.
    - allowedProcMountTypes::Vector{String} : AllowedProcMountTypes is a whitelist of allowed ProcMountTypes. Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.
    - allowedUnsafeSysctls::Vector{String} : allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \&quot;*\&quot; in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.  Examples: e.g. \&quot;foo/*\&quot; allows \&quot;foo/bar\&quot;, \&quot;foo/baz\&quot;, etc. e.g. \&quot;foo.*\&quot; allows \&quot;foo.bar\&quot;, \&quot;foo.baz\&quot;, etc.
    - defaultAddCapabilities::Vector{String} : defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.
    - defaultAllowPrivilegeEscalation::Bool : defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.
    - forbiddenSysctls::Vector{String} : forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \&quot;*\&quot; in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.  Examples: e.g. \&quot;foo/*\&quot; forbids \&quot;foo/bar\&quot;, \&quot;foo/baz\&quot;, etc. e.g. \&quot;foo.*\&quot; forbids \&quot;foo.bar\&quot;, \&quot;foo.baz\&quot;, etc.
    - fsGroup::IoK8sApiExtensionsV1beta1FSGroupStrategyOptions
    - hostIPC::Bool : hostIPC determines if the policy allows the use of HostIPC in the pod spec.
    - hostNetwork::Bool : hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
    - hostPID::Bool : hostPID determines if the policy allows the use of HostPID in the pod spec.
    - hostPorts::Vector{IoK8sApiExtensionsV1beta1HostPortRange} : hostPorts determines which host port ranges are allowed to be exposed.
    - privileged::Bool : privileged determines if a pod can request to be run as privileged.
    - readOnlyRootFilesystem::Bool : readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
    - requiredDropCapabilities::Vector{String} : requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
    - runAsGroup::IoK8sApiExtensionsV1beta1RunAsGroupStrategyOptions
    - runAsUser::IoK8sApiExtensionsV1beta1RunAsUserStrategyOptions
    - runtimeClass::IoK8sApiExtensionsV1beta1RuntimeClassStrategyOptions
    - seLinux::IoK8sApiExtensionsV1beta1SELinuxStrategyOptions
    - supplementalGroups::IoK8sApiExtensionsV1beta1SupplementalGroupsStrategyOptions
    - volumes::Vector{String} : volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use &#39;*&#39;.
"""
Base.@kwdef mutable struct IoK8sApiExtensionsV1beta1PodSecurityPolicySpec <: OpenAPI.APIModel
    allowPrivilegeEscalation::Union{Nothing, Bool} = nothing
    allowedCSIDrivers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiExtensionsV1beta1AllowedCSIDriver} }
    allowedCapabilities::Union{Nothing, Vector{String}} = nothing
    allowedFlexVolumes::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiExtensionsV1beta1AllowedFlexVolume} }
    allowedHostPaths::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiExtensionsV1beta1AllowedHostPath} }
    allowedProcMountTypes::Union{Nothing, Vector{String}} = nothing
    allowedUnsafeSysctls::Union{Nothing, Vector{String}} = nothing
    defaultAddCapabilities::Union{Nothing, Vector{String}} = nothing
    defaultAllowPrivilegeEscalation::Union{Nothing, Bool} = nothing
    forbiddenSysctls::Union{Nothing, Vector{String}} = nothing
    fsGroup = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1FSGroupStrategyOptions }
    hostIPC::Union{Nothing, Bool} = nothing
    hostNetwork::Union{Nothing, Bool} = nothing
    hostPID::Union{Nothing, Bool} = nothing
    hostPorts::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiExtensionsV1beta1HostPortRange} }
    privileged::Union{Nothing, Bool} = nothing
    readOnlyRootFilesystem::Union{Nothing, Bool} = nothing
    requiredDropCapabilities::Union{Nothing, Vector{String}} = nothing
    runAsGroup = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1RunAsGroupStrategyOptions }
    runAsUser = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1RunAsUserStrategyOptions }
    runtimeClass = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1RuntimeClassStrategyOptions }
    seLinux = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1SELinuxStrategyOptions }
    supplementalGroups = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1SupplementalGroupsStrategyOptions }
    volumes::Union{Nothing, Vector{String}} = nothing

    function IoK8sApiExtensionsV1beta1PodSecurityPolicySpec(allowPrivilegeEscalation, allowedCSIDrivers, allowedCapabilities, allowedFlexVolumes, allowedHostPaths, allowedProcMountTypes, allowedUnsafeSysctls, defaultAddCapabilities, defaultAllowPrivilegeEscalation, forbiddenSysctls, fsGroup, hostIPC, hostNetwork, hostPID, hostPorts, privileged, readOnlyRootFilesystem, requiredDropCapabilities, runAsGroup, runAsUser, runtimeClass, seLinux, supplementalGroups, volumes, )
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("allowPrivilegeEscalation"), allowPrivilegeEscalation)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("allowedCSIDrivers"), allowedCSIDrivers)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("allowedCapabilities"), allowedCapabilities)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("allowedFlexVolumes"), allowedFlexVolumes)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("allowedHostPaths"), allowedHostPaths)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("allowedProcMountTypes"), allowedProcMountTypes)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("allowedUnsafeSysctls"), allowedUnsafeSysctls)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("defaultAddCapabilities"), defaultAddCapabilities)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("defaultAllowPrivilegeEscalation"), defaultAllowPrivilegeEscalation)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("forbiddenSysctls"), forbiddenSysctls)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("fsGroup"), fsGroup)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("hostIPC"), hostIPC)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("hostNetwork"), hostNetwork)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("hostPID"), hostPID)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("hostPorts"), hostPorts)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("privileged"), privileged)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("readOnlyRootFilesystem"), readOnlyRootFilesystem)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("requiredDropCapabilities"), requiredDropCapabilities)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("runAsGroup"), runAsGroup)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("runAsUser"), runAsUser)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("runtimeClass"), runtimeClass)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("seLinux"), seLinux)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("supplementalGroups"), supplementalGroups)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1PodSecurityPolicySpec, Symbol("volumes"), volumes)
        return new(allowPrivilegeEscalation, allowedCSIDrivers, allowedCapabilities, allowedFlexVolumes, allowedHostPaths, allowedProcMountTypes, allowedUnsafeSysctls, defaultAddCapabilities, defaultAllowPrivilegeEscalation, forbiddenSysctls, fsGroup, hostIPC, hostNetwork, hostPID, hostPorts, privileged, readOnlyRootFilesystem, requiredDropCapabilities, runAsGroup, runAsUser, runtimeClass, seLinux, supplementalGroups, volumes, )
    end
end # type IoK8sApiExtensionsV1beta1PodSecurityPolicySpec

const _property_types_IoK8sApiExtensionsV1beta1PodSecurityPolicySpec = Dict{Symbol,String}(Symbol("allowPrivilegeEscalation")=>"Bool", Symbol("allowedCSIDrivers")=>"Vector{IoK8sApiExtensionsV1beta1AllowedCSIDriver}", Symbol("allowedCapabilities")=>"Vector{String}", Symbol("allowedFlexVolumes")=>"Vector{IoK8sApiExtensionsV1beta1AllowedFlexVolume}", Symbol("allowedHostPaths")=>"Vector{IoK8sApiExtensionsV1beta1AllowedHostPath}", Symbol("allowedProcMountTypes")=>"Vector{String}", Symbol("allowedUnsafeSysctls")=>"Vector{String}", Symbol("defaultAddCapabilities")=>"Vector{String}", Symbol("defaultAllowPrivilegeEscalation")=>"Bool", Symbol("forbiddenSysctls")=>"Vector{String}", Symbol("fsGroup")=>"IoK8sApiExtensionsV1beta1FSGroupStrategyOptions", Symbol("hostIPC")=>"Bool", Symbol("hostNetwork")=>"Bool", Symbol("hostPID")=>"Bool", Symbol("hostPorts")=>"Vector{IoK8sApiExtensionsV1beta1HostPortRange}", Symbol("privileged")=>"Bool", Symbol("readOnlyRootFilesystem")=>"Bool", Symbol("requiredDropCapabilities")=>"Vector{String}", Symbol("runAsGroup")=>"IoK8sApiExtensionsV1beta1RunAsGroupStrategyOptions", Symbol("runAsUser")=>"IoK8sApiExtensionsV1beta1RunAsUserStrategyOptions", Symbol("runtimeClass")=>"IoK8sApiExtensionsV1beta1RuntimeClassStrategyOptions", Symbol("seLinux")=>"IoK8sApiExtensionsV1beta1SELinuxStrategyOptions", Symbol("supplementalGroups")=>"IoK8sApiExtensionsV1beta1SupplementalGroupsStrategyOptions", Symbol("volumes")=>"Vector{String}", )
OpenAPI.property_type(::Type{ IoK8sApiExtensionsV1beta1PodSecurityPolicySpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiExtensionsV1beta1PodSecurityPolicySpec[name]))}

function check_required(o::IoK8sApiExtensionsV1beta1PodSecurityPolicySpec)
    o.fsGroup === nothing && (return false)
    o.runAsUser === nothing && (return false)
    o.seLinux === nothing && (return false)
    o.supplementalGroups === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiExtensionsV1beta1PodSecurityPolicySpec }, name::Symbol, val)
end
