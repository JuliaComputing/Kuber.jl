# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.LoadBalancerIngress
LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.

    IoK8sApiCoreV1LoadBalancerIngress(;
        hostname=nothing,
        ip=nothing,
    )

    - hostname::String : Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
    - ip::String : IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
"""
Base.@kwdef mutable struct IoK8sApiCoreV1LoadBalancerIngress <: OpenAPI.APIModel
    hostname::Union{Nothing, String} = nothing
    ip::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1LoadBalancerIngress(hostname, ip, )
        OpenAPI.validate_property(IoK8sApiCoreV1LoadBalancerIngress, Symbol("hostname"), hostname)
        OpenAPI.validate_property(IoK8sApiCoreV1LoadBalancerIngress, Symbol("ip"), ip)
        return new(hostname, ip, )
    end
end # type IoK8sApiCoreV1LoadBalancerIngress

const _property_types_IoK8sApiCoreV1LoadBalancerIngress = Dict{Symbol,String}(Symbol("hostname")=>"String", Symbol("ip")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1LoadBalancerIngress }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1LoadBalancerIngress[name]))}

function check_required(o::IoK8sApiCoreV1LoadBalancerIngress)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1LoadBalancerIngress }, name::Symbol, val)
end
