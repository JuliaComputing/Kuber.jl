# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.EndpointAddress
EndpointAddress is a tuple that describes single IP address.

    IoK8sApiCoreV1EndpointAddress(;
        hostname=nothing,
        ip=nothing,
        nodeName=nothing,
        targetRef=nothing,
    )

    - hostname::String : The Hostname of this endpoint
    - ip::String : The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.
    - nodeName::String : Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.
    - targetRef::IoK8sApiCoreV1ObjectReference
"""
Base.@kwdef mutable struct IoK8sApiCoreV1EndpointAddress <: OpenAPI.APIModel
    hostname::Union{Nothing, String} = nothing
    ip::Union{Nothing, String} = nothing
    nodeName::Union{Nothing, String} = nothing
    targetRef = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ObjectReference }

    function IoK8sApiCoreV1EndpointAddress(hostname, ip, nodeName, targetRef, )
        OpenAPI.validate_property(IoK8sApiCoreV1EndpointAddress, Symbol("hostname"), hostname)
        OpenAPI.validate_property(IoK8sApiCoreV1EndpointAddress, Symbol("ip"), ip)
        OpenAPI.validate_property(IoK8sApiCoreV1EndpointAddress, Symbol("nodeName"), nodeName)
        OpenAPI.validate_property(IoK8sApiCoreV1EndpointAddress, Symbol("targetRef"), targetRef)
        return new(hostname, ip, nodeName, targetRef, )
    end
end # type IoK8sApiCoreV1EndpointAddress

const _property_types_IoK8sApiCoreV1EndpointAddress = Dict{Symbol,String}(Symbol("hostname")=>"String", Symbol("ip")=>"String", Symbol("nodeName")=>"String", Symbol("targetRef")=>"IoK8sApiCoreV1ObjectReference", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1EndpointAddress }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1EndpointAddress[name]))}

function check_required(o::IoK8sApiCoreV1EndpointAddress)
    o.ip === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1EndpointAddress }, name::Symbol, val)
end
