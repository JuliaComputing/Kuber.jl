# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.policy.v1beta1.HostPortRange
HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.

    IoK8sApiPolicyV1beta1HostPortRange(;
        max=nothing,
        min=nothing,
    )

    - max::Int64 : max is the end of the range, inclusive.
    - min::Int64 : min is the start of the range, inclusive.
"""
Base.@kwdef mutable struct IoK8sApiPolicyV1beta1HostPortRange <: OpenAPI.APIModel
    max::Union{Nothing, Int64} = nothing
    min::Union{Nothing, Int64} = nothing

    function IoK8sApiPolicyV1beta1HostPortRange(max, min, )
        OpenAPI.validate_property(IoK8sApiPolicyV1beta1HostPortRange, Symbol("max"), max)
        OpenAPI.validate_property(IoK8sApiPolicyV1beta1HostPortRange, Symbol("min"), min)
        return new(max, min, )
    end
end # type IoK8sApiPolicyV1beta1HostPortRange

const _property_types_IoK8sApiPolicyV1beta1HostPortRange = Dict{Symbol,String}(Symbol("max")=>"Int64", Symbol("min")=>"Int64", )
OpenAPI.property_type(::Type{ IoK8sApiPolicyV1beta1HostPortRange }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiPolicyV1beta1HostPortRange[name]))}

function check_required(o::IoK8sApiPolicyV1beta1HostPortRange)
    o.max === nothing && (return false)
    o.min === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiPolicyV1beta1HostPortRange }, name::Symbol, val)
    if name === Symbol("max")
        OpenAPI.validate_param(name, "IoK8sApiPolicyV1beta1HostPortRange", :format, val, "int32")
    end
    if name === Symbol("min")
        OpenAPI.validate_param(name, "IoK8sApiPolicyV1beta1HostPortRange", :format, val, "int32")
    end
end
