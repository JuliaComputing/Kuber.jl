# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion
CustomResourceDefinitionVersion describes a version for CRD.

    IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion(;
        additionalPrinterColumns=nothing,
        name=nothing,
        schema=nothing,
        served=nothing,
        storage=nothing,
        subresources=nothing,
    )

    - additionalPrinterColumns::Vector{IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition} : additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.
    - name::String : name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at &#x60;/apis/&lt;group&gt;/&lt;version&gt;/...&#x60; if &#x60;served&#x60; is true.
    - schema::IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation
    - served::Bool : served is a flag enabling/disabling this version from being served via REST APIs
    - storage::Bool : storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage&#x3D;true.
    - subresources::IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
"""
Base.@kwdef mutable struct IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion <: OpenAPI.APIModel
    additionalPrinterColumns::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition} }
    name::Union{Nothing, String} = nothing
    schema = nothing # spec type: Union{ Nothing, IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation }
    served::Union{Nothing, Bool} = nothing
    storage::Union{Nothing, Bool} = nothing
    subresources = nothing # spec type: Union{ Nothing, IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources }

    function IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion(additionalPrinterColumns, name, schema, served, storage, subresources, )
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion, Symbol("additionalPrinterColumns"), additionalPrinterColumns)
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion, Symbol("name"), name)
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion, Symbol("schema"), schema)
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion, Symbol("served"), served)
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion, Symbol("storage"), storage)
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion, Symbol("subresources"), subresources)
        return new(additionalPrinterColumns, name, schema, served, storage, subresources, )
    end
end # type IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion

const _property_types_IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion = Dict{Symbol,String}(Symbol("additionalPrinterColumns")=>"Vector{IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition}", Symbol("name")=>"String", Symbol("schema")=>"IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation", Symbol("served")=>"Bool", Symbol("storage")=>"Bool", Symbol("subresources")=>"IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources", )
OpenAPI.property_type(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion[name]))}

function check_required(o::IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion)
    o.name === nothing && (return false)
    o.served === nothing && (return false)
    o.storage === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion }, name::Symbol, val)
end
