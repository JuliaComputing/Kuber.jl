# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation
ExternalDocumentation allows referencing an external resource for extended documentation.

    IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation(;
        description=nothing,
        url=nothing,
    )

    - description::String
    - url::String
"""
Base.@kwdef mutable struct IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation <: OpenAPI.APIModel
    description::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing

    function IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation(description, url, )
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation, Symbol("description"), description)
        OpenAPI.validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation, Symbol("url"), url)
        return new(description, url, )
    end
end # type IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation

const _property_types_IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation = Dict{Symbol,String}(Symbol("description")=>"String", Symbol("url")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation[name]))}

function check_required(o::IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation }, name::Symbol, val)
end
