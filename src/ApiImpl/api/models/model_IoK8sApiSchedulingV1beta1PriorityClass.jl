# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.scheduling.v1beta1.PriorityClass
DEPRECATED - This group version of PriorityClass is deprecated by scheduling.k8s.io/v1/PriorityClass. PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.

    IoK8sApiSchedulingV1beta1PriorityClass(;
        apiVersion=nothing,
        description=nothing,
        globalDefault=nothing,
        kind=nothing,
        metadata=nothing,
        preemptionPolicy=nothing,
        value=nothing,
    )

    - apiVersion::String : APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    - description::String : description is an arbitrary string that usually provides guidelines on when this priority class should be used.
    - globalDefault::Bool : globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as &#x60;globalDefault&#x60;. However, if more than one PriorityClasses exists with their &#x60;globalDefault&#x60; field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.
    - kind::String : Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    - metadata::IoK8sApimachineryPkgApisMetaV1ObjectMeta
    - preemptionPolicy::String : PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.
    - value::Int64 : The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.
"""
Base.@kwdef mutable struct IoK8sApiSchedulingV1beta1PriorityClass <: OpenAPI.APIModel
    apiVersion::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    globalDefault::Union{Nothing, Bool} = nothing
    kind::Union{Nothing, String} = nothing
    metadata = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta }
    preemptionPolicy::Union{Nothing, String} = nothing
    value::Union{Nothing, Int64} = nothing

    function IoK8sApiSchedulingV1beta1PriorityClass(apiVersion, description, globalDefault, kind, metadata, preemptionPolicy, value, )
        OpenAPI.validate_property(IoK8sApiSchedulingV1beta1PriorityClass, Symbol("apiVersion"), apiVersion)
        OpenAPI.validate_property(IoK8sApiSchedulingV1beta1PriorityClass, Symbol("description"), description)
        OpenAPI.validate_property(IoK8sApiSchedulingV1beta1PriorityClass, Symbol("globalDefault"), globalDefault)
        OpenAPI.validate_property(IoK8sApiSchedulingV1beta1PriorityClass, Symbol("kind"), kind)
        OpenAPI.validate_property(IoK8sApiSchedulingV1beta1PriorityClass, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoK8sApiSchedulingV1beta1PriorityClass, Symbol("preemptionPolicy"), preemptionPolicy)
        OpenAPI.validate_property(IoK8sApiSchedulingV1beta1PriorityClass, Symbol("value"), value)
        return new(apiVersion, description, globalDefault, kind, metadata, preemptionPolicy, value, )
    end
end # type IoK8sApiSchedulingV1beta1PriorityClass

const _property_types_IoK8sApiSchedulingV1beta1PriorityClass = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("description")=>"String", Symbol("globalDefault")=>"Bool", Symbol("kind")=>"String", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta", Symbol("preemptionPolicy")=>"String", Symbol("value")=>"Int64", )
OpenAPI.property_type(::Type{ IoK8sApiSchedulingV1beta1PriorityClass }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiSchedulingV1beta1PriorityClass[name]))}

function check_required(o::IoK8sApiSchedulingV1beta1PriorityClass)
    o.value === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiSchedulingV1beta1PriorityClass }, name::Symbol, val)
    if name === Symbol("value")
        OpenAPI.validate_param(name, "IoK8sApiSchedulingV1beta1PriorityClass", :format, val, "int32")
    end
end
