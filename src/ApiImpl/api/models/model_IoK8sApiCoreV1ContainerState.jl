# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.ContainerState
ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.

    IoK8sApiCoreV1ContainerState(;
        running=nothing,
        terminated=nothing,
        waiting=nothing,
    )

    - running::IoK8sApiCoreV1ContainerStateRunning
    - terminated::IoK8sApiCoreV1ContainerStateTerminated
    - waiting::IoK8sApiCoreV1ContainerStateWaiting
"""
Base.@kwdef mutable struct IoK8sApiCoreV1ContainerState <: OpenAPI.APIModel
    running = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ContainerStateRunning }
    terminated = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ContainerStateTerminated }
    waiting = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ContainerStateWaiting }

    function IoK8sApiCoreV1ContainerState(running, terminated, waiting, )
        OpenAPI.validate_property(IoK8sApiCoreV1ContainerState, Symbol("running"), running)
        OpenAPI.validate_property(IoK8sApiCoreV1ContainerState, Symbol("terminated"), terminated)
        OpenAPI.validate_property(IoK8sApiCoreV1ContainerState, Symbol("waiting"), waiting)
        return new(running, terminated, waiting, )
    end
end # type IoK8sApiCoreV1ContainerState

const _property_types_IoK8sApiCoreV1ContainerState = Dict{Symbol,String}(Symbol("running")=>"IoK8sApiCoreV1ContainerStateRunning", Symbol("terminated")=>"IoK8sApiCoreV1ContainerStateTerminated", Symbol("waiting")=>"IoK8sApiCoreV1ContainerStateWaiting", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1ContainerState }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ContainerState[name]))}

function check_required(o::IoK8sApiCoreV1ContainerState)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1ContainerState }, name::Symbol, val)
end
