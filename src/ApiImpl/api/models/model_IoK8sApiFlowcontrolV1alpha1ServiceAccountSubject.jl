# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.flowcontrol.v1alpha1.ServiceAccountSubject
ServiceAccountSubject holds detailed information for service-account-kind subject.

    IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject(;
        name=nothing,
        namespace=nothing,
    )

    - name::String : &#x60;name&#x60; is the name of matching ServiceAccount objects, or \&quot;*\&quot; to match regardless of name. Required.
    - namespace::String : &#x60;namespace&#x60; is the namespace of matching ServiceAccount objects. Required.
"""
Base.@kwdef mutable struct IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    namespace::Union{Nothing, String} = nothing

    function IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject(name, namespace, )
        OpenAPI.validate_property(IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject, Symbol("name"), name)
        OpenAPI.validate_property(IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject, Symbol("namespace"), namespace)
        return new(name, namespace, )
    end
end # type IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject

const _property_types_IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("namespace")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject[name]))}

function check_required(o::IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject)
    o.name === nothing && (return false)
    o.namespace === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiFlowcontrolV1alpha1ServiceAccountSubject }, name::Symbol, val)
end
