# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.DownwardAPIVolumeSource
DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.

    IoK8sApiCoreV1DownwardAPIVolumeSource(;
        defaultMode=nothing,
        items=nothing,
    )

    - defaultMode::Int64 : Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    - items::Vector{IoK8sApiCoreV1DownwardAPIVolumeFile} : Items is a list of downward API volume file
"""
Base.@kwdef mutable struct IoK8sApiCoreV1DownwardAPIVolumeSource <: OpenAPI.APIModel
    defaultMode::Union{Nothing, Int64} = nothing
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1DownwardAPIVolumeFile} }

    function IoK8sApiCoreV1DownwardAPIVolumeSource(defaultMode, items, )
        OpenAPI.validate_property(IoK8sApiCoreV1DownwardAPIVolumeSource, Symbol("defaultMode"), defaultMode)
        OpenAPI.validate_property(IoK8sApiCoreV1DownwardAPIVolumeSource, Symbol("items"), items)
        return new(defaultMode, items, )
    end
end # type IoK8sApiCoreV1DownwardAPIVolumeSource

const _property_types_IoK8sApiCoreV1DownwardAPIVolumeSource = Dict{Symbol,String}(Symbol("defaultMode")=>"Int64", Symbol("items")=>"Vector{IoK8sApiCoreV1DownwardAPIVolumeFile}", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1DownwardAPIVolumeSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1DownwardAPIVolumeSource[name]))}

function check_required(o::IoK8sApiCoreV1DownwardAPIVolumeSource)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1DownwardAPIVolumeSource }, name::Symbol, val)
    if name === Symbol("defaultMode")
        OpenAPI.validate_param(name, "IoK8sApiCoreV1DownwardAPIVolumeSource", :format, val, "int32")
    end
end
