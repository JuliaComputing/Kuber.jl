# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.AzureFilePersistentVolumeSource
AzureFile represents an Azure File Service mount on the host and bind mount to the pod.

    IoK8sApiCoreV1AzureFilePersistentVolumeSource(;
        readOnly=nothing,
        secretName=nothing,
        secretNamespace=nothing,
        shareName=nothing,
    )

    - readOnly::Bool : Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    - secretName::String : the name of secret that contains Azure Storage Account Name and Key
    - secretNamespace::String : the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod
    - shareName::String : Share Name
"""
Base.@kwdef mutable struct IoK8sApiCoreV1AzureFilePersistentVolumeSource <: OpenAPI.APIModel
    readOnly::Union{Nothing, Bool} = nothing
    secretName::Union{Nothing, String} = nothing
    secretNamespace::Union{Nothing, String} = nothing
    shareName::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1AzureFilePersistentVolumeSource(readOnly, secretName, secretNamespace, shareName, )
        OpenAPI.validate_property(IoK8sApiCoreV1AzureFilePersistentVolumeSource, Symbol("readOnly"), readOnly)
        OpenAPI.validate_property(IoK8sApiCoreV1AzureFilePersistentVolumeSource, Symbol("secretName"), secretName)
        OpenAPI.validate_property(IoK8sApiCoreV1AzureFilePersistentVolumeSource, Symbol("secretNamespace"), secretNamespace)
        OpenAPI.validate_property(IoK8sApiCoreV1AzureFilePersistentVolumeSource, Symbol("shareName"), shareName)
        return new(readOnly, secretName, secretNamespace, shareName, )
    end
end # type IoK8sApiCoreV1AzureFilePersistentVolumeSource

const _property_types_IoK8sApiCoreV1AzureFilePersistentVolumeSource = Dict{Symbol,String}(Symbol("readOnly")=>"Bool", Symbol("secretName")=>"String", Symbol("secretNamespace")=>"String", Symbol("shareName")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1AzureFilePersistentVolumeSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1AzureFilePersistentVolumeSource[name]))}

function check_required(o::IoK8sApiCoreV1AzureFilePersistentVolumeSource)
    o.secretName === nothing && (return false)
    o.shareName === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1AzureFilePersistentVolumeSource }, name::Symbol, val)
end
