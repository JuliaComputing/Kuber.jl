# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.LimitRangeSpec
LimitRangeSpec defines a min/max usage limit for resources that match on kind.

    IoK8sApiCoreV1LimitRangeSpec(;
        limits=nothing,
    )

    - limits::Vector{IoK8sApiCoreV1LimitRangeItem} : Limits is the list of LimitRangeItem objects that are enforced.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1LimitRangeSpec <: OpenAPI.APIModel
    limits::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1LimitRangeItem} }

    function IoK8sApiCoreV1LimitRangeSpec(limits, )
        OpenAPI.validate_property(IoK8sApiCoreV1LimitRangeSpec, Symbol("limits"), limits)
        return new(limits, )
    end
end # type IoK8sApiCoreV1LimitRangeSpec

const _property_types_IoK8sApiCoreV1LimitRangeSpec = Dict{Symbol,String}(Symbol("limits")=>"Vector{IoK8sApiCoreV1LimitRangeItem}", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1LimitRangeSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1LimitRangeSpec[name]))}

function check_required(o::IoK8sApiCoreV1LimitRangeSpec)
    o.limits === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1LimitRangeSpec }, name::Symbol, val)
end
