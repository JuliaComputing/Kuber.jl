# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.node.v1alpha1.RuntimeClass
RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md

    IoK8sApiNodeV1alpha1RuntimeClass(;
        apiVersion=nothing,
        kind=nothing,
        metadata=nothing,
        spec=nothing,
    )

    - apiVersion::String : APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    - kind::String : Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    - metadata::IoK8sApimachineryPkgApisMetaV1ObjectMeta
    - spec::IoK8sApiNodeV1alpha1RuntimeClassSpec
"""
Base.@kwdef mutable struct IoK8sApiNodeV1alpha1RuntimeClass <: OpenAPI.APIModel
    apiVersion::Union{Nothing, String} = nothing
    kind::Union{Nothing, String} = nothing
    metadata = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta }
    spec = nothing # spec type: Union{ Nothing, IoK8sApiNodeV1alpha1RuntimeClassSpec }

    function IoK8sApiNodeV1alpha1RuntimeClass(apiVersion, kind, metadata, spec, )
        OpenAPI.validate_property(IoK8sApiNodeV1alpha1RuntimeClass, Symbol("apiVersion"), apiVersion)
        OpenAPI.validate_property(IoK8sApiNodeV1alpha1RuntimeClass, Symbol("kind"), kind)
        OpenAPI.validate_property(IoK8sApiNodeV1alpha1RuntimeClass, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoK8sApiNodeV1alpha1RuntimeClass, Symbol("spec"), spec)
        return new(apiVersion, kind, metadata, spec, )
    end
end # type IoK8sApiNodeV1alpha1RuntimeClass

const _property_types_IoK8sApiNodeV1alpha1RuntimeClass = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("kind")=>"String", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta", Symbol("spec")=>"IoK8sApiNodeV1alpha1RuntimeClassSpec", )
OpenAPI.property_type(::Type{ IoK8sApiNodeV1alpha1RuntimeClass }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiNodeV1alpha1RuntimeClass[name]))}

function check_required(o::IoK8sApiNodeV1alpha1RuntimeClass)
    o.spec === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiNodeV1alpha1RuntimeClass }, name::Symbol, val)
end
