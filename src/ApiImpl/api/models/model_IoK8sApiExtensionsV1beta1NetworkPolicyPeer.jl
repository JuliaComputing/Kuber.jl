# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.extensions.v1beta1.NetworkPolicyPeer
DEPRECATED 1.9 - This group version of NetworkPolicyPeer is deprecated by networking/v1/NetworkPolicyPeer.

    IoK8sApiExtensionsV1beta1NetworkPolicyPeer(;
        ipBlock=nothing,
        namespaceSelector=nothing,
        podSelector=nothing,
    )

    - ipBlock::IoK8sApiExtensionsV1beta1IPBlock
    - namespaceSelector::IoK8sApimachineryPkgApisMetaV1LabelSelector
    - podSelector::IoK8sApimachineryPkgApisMetaV1LabelSelector
"""
Base.@kwdef mutable struct IoK8sApiExtensionsV1beta1NetworkPolicyPeer <: OpenAPI.APIModel
    ipBlock = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1IPBlock }
    namespaceSelector = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1LabelSelector }
    podSelector = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1LabelSelector }

    function IoK8sApiExtensionsV1beta1NetworkPolicyPeer(ipBlock, namespaceSelector, podSelector, )
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1NetworkPolicyPeer, Symbol("ipBlock"), ipBlock)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1NetworkPolicyPeer, Symbol("namespaceSelector"), namespaceSelector)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1NetworkPolicyPeer, Symbol("podSelector"), podSelector)
        return new(ipBlock, namespaceSelector, podSelector, )
    end
end # type IoK8sApiExtensionsV1beta1NetworkPolicyPeer

const _property_types_IoK8sApiExtensionsV1beta1NetworkPolicyPeer = Dict{Symbol,String}(Symbol("ipBlock")=>"IoK8sApiExtensionsV1beta1IPBlock", Symbol("namespaceSelector")=>"IoK8sApimachineryPkgApisMetaV1LabelSelector", Symbol("podSelector")=>"IoK8sApimachineryPkgApisMetaV1LabelSelector", )
OpenAPI.property_type(::Type{ IoK8sApiExtensionsV1beta1NetworkPolicyPeer }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiExtensionsV1beta1NetworkPolicyPeer[name]))}

function check_required(o::IoK8sApiExtensionsV1beta1NetworkPolicyPeer)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiExtensionsV1beta1NetworkPolicyPeer }, name::Symbol, val)
end
