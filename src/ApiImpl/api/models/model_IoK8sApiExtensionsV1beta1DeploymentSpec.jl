# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.extensions.v1beta1.DeploymentSpec
DeploymentSpec is the specification of the desired behavior of the Deployment.

    IoK8sApiExtensionsV1beta1DeploymentSpec(;
        minReadySeconds=nothing,
        paused=nothing,
        progressDeadlineSeconds=nothing,
        replicas=nothing,
        revisionHistoryLimit=nothing,
        rollbackTo=nothing,
        selector=nothing,
        strategy=nothing,
        template=nothing,
    )

    - minReadySeconds::Int64 : Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
    - paused::Bool : Indicates that the deployment is paused and will not be processed by the deployment controller.
    - progressDeadlineSeconds::Int64 : The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. This is set to the max value of int32 (i.e. 2147483647) by default, which means \&quot;no deadline\&quot;.
    - replicas::Int64 : Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
    - revisionHistoryLimit::Int64 : The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. This is set to the max value of int32 (i.e. 2147483647) by default, which means \&quot;retaining all old RelicaSets\&quot;.
    - rollbackTo::IoK8sApiExtensionsV1beta1RollbackConfig
    - selector::IoK8sApimachineryPkgApisMetaV1LabelSelector
    - strategy::IoK8sApiExtensionsV1beta1DeploymentStrategy
    - template::IoK8sApiCoreV1PodTemplateSpec
"""
Base.@kwdef mutable struct IoK8sApiExtensionsV1beta1DeploymentSpec <: OpenAPI.APIModel
    minReadySeconds::Union{Nothing, Int64} = nothing
    paused::Union{Nothing, Bool} = nothing
    progressDeadlineSeconds::Union{Nothing, Int64} = nothing
    replicas::Union{Nothing, Int64} = nothing
    revisionHistoryLimit::Union{Nothing, Int64} = nothing
    rollbackTo = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1RollbackConfig }
    selector = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1LabelSelector }
    strategy = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1DeploymentStrategy }
    template = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1PodTemplateSpec }

    function IoK8sApiExtensionsV1beta1DeploymentSpec(minReadySeconds, paused, progressDeadlineSeconds, replicas, revisionHistoryLimit, rollbackTo, selector, strategy, template, )
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1DeploymentSpec, Symbol("minReadySeconds"), minReadySeconds)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1DeploymentSpec, Symbol("paused"), paused)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1DeploymentSpec, Symbol("progressDeadlineSeconds"), progressDeadlineSeconds)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1DeploymentSpec, Symbol("replicas"), replicas)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1DeploymentSpec, Symbol("revisionHistoryLimit"), revisionHistoryLimit)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1DeploymentSpec, Symbol("rollbackTo"), rollbackTo)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1DeploymentSpec, Symbol("selector"), selector)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1DeploymentSpec, Symbol("strategy"), strategy)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1DeploymentSpec, Symbol("template"), template)
        return new(minReadySeconds, paused, progressDeadlineSeconds, replicas, revisionHistoryLimit, rollbackTo, selector, strategy, template, )
    end
end # type IoK8sApiExtensionsV1beta1DeploymentSpec

const _property_types_IoK8sApiExtensionsV1beta1DeploymentSpec = Dict{Symbol,String}(Symbol("minReadySeconds")=>"Int64", Symbol("paused")=>"Bool", Symbol("progressDeadlineSeconds")=>"Int64", Symbol("replicas")=>"Int64", Symbol("revisionHistoryLimit")=>"Int64", Symbol("rollbackTo")=>"IoK8sApiExtensionsV1beta1RollbackConfig", Symbol("selector")=>"IoK8sApimachineryPkgApisMetaV1LabelSelector", Symbol("strategy")=>"IoK8sApiExtensionsV1beta1DeploymentStrategy", Symbol("template")=>"IoK8sApiCoreV1PodTemplateSpec", )
OpenAPI.property_type(::Type{ IoK8sApiExtensionsV1beta1DeploymentSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiExtensionsV1beta1DeploymentSpec[name]))}

function check_required(o::IoK8sApiExtensionsV1beta1DeploymentSpec)
    o.template === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiExtensionsV1beta1DeploymentSpec }, name::Symbol, val)
    if name === Symbol("minReadySeconds")
        OpenAPI.validate_param(name, "IoK8sApiExtensionsV1beta1DeploymentSpec", :format, val, "int32")
    end
    if name === Symbol("progressDeadlineSeconds")
        OpenAPI.validate_param(name, "IoK8sApiExtensionsV1beta1DeploymentSpec", :format, val, "int32")
    end
    if name === Symbol("replicas")
        OpenAPI.validate_param(name, "IoK8sApiExtensionsV1beta1DeploymentSpec", :format, val, "int32")
    end
    if name === Symbol("revisionHistoryLimit")
        OpenAPI.validate_param(name, "IoK8sApiExtensionsV1beta1DeploymentSpec", :format, val, "int32")
    end
end
