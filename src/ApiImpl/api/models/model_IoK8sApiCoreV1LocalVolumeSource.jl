# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.LocalVolumeSource
Local represents directly-attached storage with node affinity (Beta feature)

    IoK8sApiCoreV1LocalVolumeSource(;
        fsType=nothing,
        path=nothing,
    )

    - fsType::String : Filesystem type to mount. It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. \&quot;ext4\&quot;, \&quot;xfs\&quot;, \&quot;ntfs\&quot;. The default value is to auto-select a fileystem if unspecified.
    - path::String : The full path to the volume on the node. It can be either a directory or block device (disk, partition, ...).
"""
Base.@kwdef mutable struct IoK8sApiCoreV1LocalVolumeSource <: OpenAPI.APIModel
    fsType::Union{Nothing, String} = nothing
    path::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1LocalVolumeSource(fsType, path, )
        OpenAPI.validate_property(IoK8sApiCoreV1LocalVolumeSource, Symbol("fsType"), fsType)
        OpenAPI.validate_property(IoK8sApiCoreV1LocalVolumeSource, Symbol("path"), path)
        return new(fsType, path, )
    end
end # type IoK8sApiCoreV1LocalVolumeSource

const _property_types_IoK8sApiCoreV1LocalVolumeSource = Dict{Symbol,String}(Symbol("fsType")=>"String", Symbol("path")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1LocalVolumeSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1LocalVolumeSource[name]))}

function check_required(o::IoK8sApiCoreV1LocalVolumeSource)
    o.path === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1LocalVolumeSource }, name::Symbol, val)
end
