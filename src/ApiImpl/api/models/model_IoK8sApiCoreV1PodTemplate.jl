# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.PodTemplate
PodTemplate describes a template for creating copies of a predefined pod.

    IoK8sApiCoreV1PodTemplate(;
        apiVersion=nothing,
        kind=nothing,
        metadata=nothing,
        template=nothing,
    )

    - apiVersion::String : APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    - kind::String : Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    - metadata::IoK8sApimachineryPkgApisMetaV1ObjectMeta
    - template::IoK8sApiCoreV1PodTemplateSpec
"""
Base.@kwdef mutable struct IoK8sApiCoreV1PodTemplate <: OpenAPI.APIModel
    apiVersion::Union{Nothing, String} = nothing
    kind::Union{Nothing, String} = nothing
    metadata = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta }
    template = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1PodTemplateSpec }

    function IoK8sApiCoreV1PodTemplate(apiVersion, kind, metadata, template, )
        OpenAPI.validate_property(IoK8sApiCoreV1PodTemplate, Symbol("apiVersion"), apiVersion)
        OpenAPI.validate_property(IoK8sApiCoreV1PodTemplate, Symbol("kind"), kind)
        OpenAPI.validate_property(IoK8sApiCoreV1PodTemplate, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoK8sApiCoreV1PodTemplate, Symbol("template"), template)
        return new(apiVersion, kind, metadata, template, )
    end
end # type IoK8sApiCoreV1PodTemplate

const _property_types_IoK8sApiCoreV1PodTemplate = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("kind")=>"String", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta", Symbol("template")=>"IoK8sApiCoreV1PodTemplateSpec", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1PodTemplate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1PodTemplate[name]))}

function check_required(o::IoK8sApiCoreV1PodTemplate)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1PodTemplate }, name::Symbol, val)
end
