# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList
APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.

    IoK8sApimachineryPkgApisMetaV1APIResourceList(;
        apiVersion=nothing,
        groupVersion=nothing,
        kind=nothing,
        resources=nothing,
    )

    - apiVersion::String : APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    - groupVersion::String : groupVersion is the group and version this APIResourceList is for.
    - kind::String : Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    - resources::Vector{IoK8sApimachineryPkgApisMetaV1APIResource} : resources contains the name of the resources and if they are namespaced.
"""
Base.@kwdef mutable struct IoK8sApimachineryPkgApisMetaV1APIResourceList <: OpenAPI.APIModel
    apiVersion::Union{Nothing, String} = nothing
    groupVersion::Union{Nothing, String} = nothing
    kind::Union{Nothing, String} = nothing
    resources::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApimachineryPkgApisMetaV1APIResource} }

    function IoK8sApimachineryPkgApisMetaV1APIResourceList(apiVersion, groupVersion, kind, resources, )
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1APIResourceList, Symbol("apiVersion"), apiVersion)
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1APIResourceList, Symbol("groupVersion"), groupVersion)
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1APIResourceList, Symbol("kind"), kind)
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1APIResourceList, Symbol("resources"), resources)
        return new(apiVersion, groupVersion, kind, resources, )
    end
end # type IoK8sApimachineryPkgApisMetaV1APIResourceList

const _property_types_IoK8sApimachineryPkgApisMetaV1APIResourceList = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("groupVersion")=>"String", Symbol("kind")=>"String", Symbol("resources")=>"Vector{IoK8sApimachineryPkgApisMetaV1APIResource}", )
OpenAPI.property_type(::Type{ IoK8sApimachineryPkgApisMetaV1APIResourceList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApimachineryPkgApisMetaV1APIResourceList[name]))}

function check_required(o::IoK8sApimachineryPkgApisMetaV1APIResourceList)
    o.groupVersion === nothing && (return false)
    o.resources === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApimachineryPkgApisMetaV1APIResourceList }, name::Symbol, val)
end
