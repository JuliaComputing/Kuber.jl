# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""sh_karpenter_v1alpha5_Provisioner_spec_kubeletConfiguration
KubeletConfiguration are options passed to the kubelet when provisioning nodes

    ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration(;
        clusterDNS=nothing,
        containerRuntime=nothing,
        maxPods=nothing,
        systemReserved=nothing,
    )

    - clusterDNS::Vector{String} : clusterDNS is a list of IP addresses for the cluster DNS server. Note that not all providers may use all addresses.
    - containerRuntime::String : ContainerRuntime is the container runtime to be used with your worker nodes.
    - maxPods::Int64 : MaxPods is an override for the maximum number of pods that can run on a worker node instance.
    - systemReserved::Dict{String, Any} : SystemReserved contains resources reserved for OS system daemons and kernel memory.
"""
Base.@kwdef mutable struct ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration <: OpenAPI.APIModel
    clusterDNS::Union{Nothing, Vector{String}} = nothing
    containerRuntime::Union{Nothing, String} = nothing
    maxPods::Union{Nothing, Int64} = nothing
    systemReserved::Union{Nothing, Dict{String, Any}} = nothing

    function ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration(clusterDNS, containerRuntime, maxPods, systemReserved, )
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration, Symbol("clusterDNS"), clusterDNS)
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration, Symbol("containerRuntime"), containerRuntime)
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration, Symbol("maxPods"), maxPods)
        OpenAPI.validate_property(ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration, Symbol("systemReserved"), systemReserved)
        return new(clusterDNS, containerRuntime, maxPods, systemReserved, )
    end
end # type ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration

const _property_types_ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration = Dict{Symbol,String}(Symbol("clusterDNS")=>"Vector{String}", Symbol("containerRuntime")=>"String", Symbol("maxPods")=>"Int64", Symbol("systemReserved")=>"Dict{String, Any}", )
OpenAPI.property_type(::Type{ ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration[name]))}

function check_required(o::ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration)
    true
end

function OpenAPI.validate_property(::Type{ ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration }, name::Symbol, val)
    if name === Symbol("maxPods")
        OpenAPI.validate_param(name, "ShKarpenterV1alpha5ProvisionerSpecKubeletConfiguration", :format, val, "int32")
    end
end
