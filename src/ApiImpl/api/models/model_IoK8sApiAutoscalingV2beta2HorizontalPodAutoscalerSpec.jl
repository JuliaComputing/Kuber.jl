# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerSpec
HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.

    IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec(;
        maxReplicas=nothing,
        metrics=nothing,
        minReplicas=nothing,
        scaleTargetRef=nothing,
    )

    - maxReplicas::Int64 : maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.
    - metrics::Vector{IoK8sApiAutoscalingV2beta2MetricSpec} : metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond. If not set, the default metric will be set to 80% average CPU utilization.
    - minReplicas::Int64 : minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
    - scaleTargetRef::IoK8sApiAutoscalingV2beta2CrossVersionObjectReference
"""
Base.@kwdef mutable struct IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec <: OpenAPI.APIModel
    maxReplicas::Union{Nothing, Int64} = nothing
    metrics::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiAutoscalingV2beta2MetricSpec} }
    minReplicas::Union{Nothing, Int64} = nothing
    scaleTargetRef = nothing # spec type: Union{ Nothing, IoK8sApiAutoscalingV2beta2CrossVersionObjectReference }

    function IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec(maxReplicas, metrics, minReplicas, scaleTargetRef, )
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec, Symbol("maxReplicas"), maxReplicas)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec, Symbol("metrics"), metrics)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec, Symbol("minReplicas"), minReplicas)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec, Symbol("scaleTargetRef"), scaleTargetRef)
        return new(maxReplicas, metrics, minReplicas, scaleTargetRef, )
    end
end # type IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec

const _property_types_IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec = Dict{Symbol,String}(Symbol("maxReplicas")=>"Int64", Symbol("metrics")=>"Vector{IoK8sApiAutoscalingV2beta2MetricSpec}", Symbol("minReplicas")=>"Int64", Symbol("scaleTargetRef")=>"IoK8sApiAutoscalingV2beta2CrossVersionObjectReference", )
OpenAPI.property_type(::Type{ IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec[name]))}

function check_required(o::IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec)
    o.maxReplicas === nothing && (return false)
    o.scaleTargetRef === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec }, name::Symbol, val)
    if name === Symbol("maxReplicas")
        OpenAPI.validate_param(name, "IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec", :format, val, "int32")
    end
    if name === Symbol("minReplicas")
        OpenAPI.validate_param(name, "IoK8sApiAutoscalingV2beta2HorizontalPodAutoscalerSpec", :format, val, "int32")
    end
end
