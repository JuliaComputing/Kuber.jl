# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.rbac.v1beta1.AggregationRule
AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole

    IoK8sApiRbacV1beta1AggregationRule(;
        clusterRoleSelectors=nothing,
    )

    - clusterRoleSelectors::Vector{IoK8sApimachineryPkgApisMetaV1LabelSelector} : ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole&#39;s permissions will be added
"""
Base.@kwdef mutable struct IoK8sApiRbacV1beta1AggregationRule <: OpenAPI.APIModel
    clusterRoleSelectors::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApimachineryPkgApisMetaV1LabelSelector} }

    function IoK8sApiRbacV1beta1AggregationRule(clusterRoleSelectors, )
        OpenAPI.validate_property(IoK8sApiRbacV1beta1AggregationRule, Symbol("clusterRoleSelectors"), clusterRoleSelectors)
        return new(clusterRoleSelectors, )
    end
end # type IoK8sApiRbacV1beta1AggregationRule

const _property_types_IoK8sApiRbacV1beta1AggregationRule = Dict{Symbol,String}(Symbol("clusterRoleSelectors")=>"Vector{IoK8sApimachineryPkgApisMetaV1LabelSelector}", )
OpenAPI.property_type(::Type{ IoK8sApiRbacV1beta1AggregationRule }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiRbacV1beta1AggregationRule[name]))}

function check_required(o::IoK8sApiRbacV1beta1AggregationRule)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiRbacV1beta1AggregationRule }, name::Symbol, val)
end
