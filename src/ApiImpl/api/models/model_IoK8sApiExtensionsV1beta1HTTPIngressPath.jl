# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.extensions.v1beta1.HTTPIngressPath
HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.

    IoK8sApiExtensionsV1beta1HTTPIngressPath(;
        backend=nothing,
        path=nothing,
    )

    - backend::IoK8sApiExtensionsV1beta1IngressBackend
    - path::String : Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \&quot;path\&quot; part of a URL as defined by RFC 3986. Paths must begin with a &#39;/&#39;. If unspecified, the path defaults to a catch all sending traffic to the backend.
"""
Base.@kwdef mutable struct IoK8sApiExtensionsV1beta1HTTPIngressPath <: OpenAPI.APIModel
    backend = nothing # spec type: Union{ Nothing, IoK8sApiExtensionsV1beta1IngressBackend }
    path::Union{Nothing, String} = nothing

    function IoK8sApiExtensionsV1beta1HTTPIngressPath(backend, path, )
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1HTTPIngressPath, Symbol("backend"), backend)
        OpenAPI.validate_property(IoK8sApiExtensionsV1beta1HTTPIngressPath, Symbol("path"), path)
        return new(backend, path, )
    end
end # type IoK8sApiExtensionsV1beta1HTTPIngressPath

const _property_types_IoK8sApiExtensionsV1beta1HTTPIngressPath = Dict{Symbol,String}(Symbol("backend")=>"IoK8sApiExtensionsV1beta1IngressBackend", Symbol("path")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiExtensionsV1beta1HTTPIngressPath }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiExtensionsV1beta1HTTPIngressPath[name]))}

function check_required(o::IoK8sApiExtensionsV1beta1HTTPIngressPath)
    o.backend === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiExtensionsV1beta1HTTPIngressPath }, name::Symbol, val)
end
