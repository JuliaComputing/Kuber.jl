# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.ObjectFieldSelector
ObjectFieldSelector selects an APIVersioned field of an object.

    IoK8sApiCoreV1ObjectFieldSelector(;
        apiVersion=nothing,
        fieldPath=nothing,
    )

    - apiVersion::String : Version of the schema the FieldPath is written in terms of, defaults to \&quot;v1\&quot;.
    - fieldPath::String : Path of the field to select in the specified API version.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1ObjectFieldSelector <: OpenAPI.APIModel
    apiVersion::Union{Nothing, String} = nothing
    fieldPath::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1ObjectFieldSelector(apiVersion, fieldPath, )
        OpenAPI.validate_property(IoK8sApiCoreV1ObjectFieldSelector, Symbol("apiVersion"), apiVersion)
        OpenAPI.validate_property(IoK8sApiCoreV1ObjectFieldSelector, Symbol("fieldPath"), fieldPath)
        return new(apiVersion, fieldPath, )
    end
end # type IoK8sApiCoreV1ObjectFieldSelector

const _property_types_IoK8sApiCoreV1ObjectFieldSelector = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("fieldPath")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1ObjectFieldSelector }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ObjectFieldSelector[name]))}

function check_required(o::IoK8sApiCoreV1ObjectFieldSelector)
    o.fieldPath === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1ObjectFieldSelector }, name::Symbol, val)
end
