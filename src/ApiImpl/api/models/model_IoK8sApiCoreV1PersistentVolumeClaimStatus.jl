# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.PersistentVolumeClaimStatus
PersistentVolumeClaimStatus is the current status of a persistent volume claim.

    IoK8sApiCoreV1PersistentVolumeClaimStatus(;
        accessModes=nothing,
        capacity=nothing,
        conditions=nothing,
        phase=nothing,
    )

    - accessModes::Vector{String} : AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    - capacity::Dict{String, String} : Represents the actual resources of the underlying volume.
    - conditions::Vector{IoK8sApiCoreV1PersistentVolumeClaimCondition} : Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to &#39;ResizeStarted&#39;.
    - phase::String : Phase represents the current phase of PersistentVolumeClaim.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1PersistentVolumeClaimStatus <: OpenAPI.APIModel
    accessModes::Union{Nothing, Vector{String}} = nothing
    capacity::Union{Nothing, Dict{String, String}} = nothing
    conditions::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1PersistentVolumeClaimCondition} }
    phase::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1PersistentVolumeClaimStatus(accessModes, capacity, conditions, phase, )
        OpenAPI.validate_property(IoK8sApiCoreV1PersistentVolumeClaimStatus, Symbol("accessModes"), accessModes)
        OpenAPI.validate_property(IoK8sApiCoreV1PersistentVolumeClaimStatus, Symbol("capacity"), capacity)
        OpenAPI.validate_property(IoK8sApiCoreV1PersistentVolumeClaimStatus, Symbol("conditions"), conditions)
        OpenAPI.validate_property(IoK8sApiCoreV1PersistentVolumeClaimStatus, Symbol("phase"), phase)
        return new(accessModes, capacity, conditions, phase, )
    end
end # type IoK8sApiCoreV1PersistentVolumeClaimStatus

const _property_types_IoK8sApiCoreV1PersistentVolumeClaimStatus = Dict{Symbol,String}(Symbol("accessModes")=>"Vector{String}", Symbol("capacity")=>"Dict{String, String}", Symbol("conditions")=>"Vector{IoK8sApiCoreV1PersistentVolumeClaimCondition}", Symbol("phase")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1PersistentVolumeClaimStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1PersistentVolumeClaimStatus[name]))}

function check_required(o::IoK8sApiCoreV1PersistentVolumeClaimStatus)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1PersistentVolumeClaimStatus }, name::Symbol, val)
end
