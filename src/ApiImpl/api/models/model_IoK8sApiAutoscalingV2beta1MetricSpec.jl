# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.autoscaling.v2beta1.MetricSpec
MetricSpec specifies how to scale based on a single metric (only &#x60;type&#x60; and one other matching field should be set at once).

    IoK8sApiAutoscalingV2beta1MetricSpec(;
        external=nothing,
        object=nothing,
        pods=nothing,
        resource=nothing,
        type=nothing,
    )

    - external::IoK8sApiAutoscalingV2beta1ExternalMetricSource
    - object::IoK8sApiAutoscalingV2beta1ObjectMetricSource
    - pods::IoK8sApiAutoscalingV2beta1PodsMetricSource
    - resource::IoK8sApiAutoscalingV2beta1ResourceMetricSource
    - type::String : type is the type of metric source.  It should be one of \&quot;Object\&quot;, \&quot;Pods\&quot; or \&quot;Resource\&quot;, each mapping to a matching field in the object.
"""
Base.@kwdef mutable struct IoK8sApiAutoscalingV2beta1MetricSpec <: OpenAPI.APIModel
    external = nothing # spec type: Union{ Nothing, IoK8sApiAutoscalingV2beta1ExternalMetricSource }
    object = nothing # spec type: Union{ Nothing, IoK8sApiAutoscalingV2beta1ObjectMetricSource }
    pods = nothing # spec type: Union{ Nothing, IoK8sApiAutoscalingV2beta1PodsMetricSource }
    resource = nothing # spec type: Union{ Nothing, IoK8sApiAutoscalingV2beta1ResourceMetricSource }
    type::Union{Nothing, String} = nothing

    function IoK8sApiAutoscalingV2beta1MetricSpec(external, object, pods, resource, type, )
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta1MetricSpec, Symbol("external"), external)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta1MetricSpec, Symbol("object"), object)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta1MetricSpec, Symbol("pods"), pods)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta1MetricSpec, Symbol("resource"), resource)
        OpenAPI.validate_property(IoK8sApiAutoscalingV2beta1MetricSpec, Symbol("type"), type)
        return new(external, object, pods, resource, type, )
    end
end # type IoK8sApiAutoscalingV2beta1MetricSpec

const _property_types_IoK8sApiAutoscalingV2beta1MetricSpec = Dict{Symbol,String}(Symbol("external")=>"IoK8sApiAutoscalingV2beta1ExternalMetricSource", Symbol("object")=>"IoK8sApiAutoscalingV2beta1ObjectMetricSource", Symbol("pods")=>"IoK8sApiAutoscalingV2beta1PodsMetricSource", Symbol("resource")=>"IoK8sApiAutoscalingV2beta1ResourceMetricSource", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiAutoscalingV2beta1MetricSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAutoscalingV2beta1MetricSpec[name]))}

function check_required(o::IoK8sApiAutoscalingV2beta1MetricSpec)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiAutoscalingV2beta1MetricSpec }, name::Symbol, val)
end
