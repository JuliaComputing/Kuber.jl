# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.ExecAction
ExecAction describes a \&quot;run in container\&quot; action.

    IoK8sApiCoreV1ExecAction(;
        command=nothing,
    )

    - command::Vector{String} : Command is the command line to execute inside the container, the working directory for the command  is root (&#39;/&#39;) in the container&#39;s filesystem. The command is simply exec&#39;d, it is not run inside a shell, so traditional shell instructions (&#39;|&#39;, etc) won&#39;t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1ExecAction <: OpenAPI.APIModel
    command::Union{Nothing, Vector{String}} = nothing

    function IoK8sApiCoreV1ExecAction(command, )
        OpenAPI.validate_property(IoK8sApiCoreV1ExecAction, Symbol("command"), command)
        return new(command, )
    end
end # type IoK8sApiCoreV1ExecAction

const _property_types_IoK8sApiCoreV1ExecAction = Dict{Symbol,String}(Symbol("command")=>"Vector{String}", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1ExecAction }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ExecAction[name]))}

function check_required(o::IoK8sApiCoreV1ExecAction)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1ExecAction }, name::Symbol, val)
end
