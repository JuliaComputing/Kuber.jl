# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.networking.v1.NetworkPolicyEgressRule
NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec&#39;s podSelector. The traffic must match both ports and to. This type is beta-level in 1.8

    IoK8sApiNetworkingV1NetworkPolicyEgressRule(;
        ports=nothing,
        to=nothing,
    )

    - ports::Vector{IoK8sApiNetworkingV1NetworkPolicyPort} : List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
    - to::Vector{IoK8sApiNetworkingV1NetworkPolicyPeer} : List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
"""
Base.@kwdef mutable struct IoK8sApiNetworkingV1NetworkPolicyEgressRule <: OpenAPI.APIModel
    ports::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiNetworkingV1NetworkPolicyPort} }
    to::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiNetworkingV1NetworkPolicyPeer} }

    function IoK8sApiNetworkingV1NetworkPolicyEgressRule(ports, to, )
        OpenAPI.validate_property(IoK8sApiNetworkingV1NetworkPolicyEgressRule, Symbol("ports"), ports)
        OpenAPI.validate_property(IoK8sApiNetworkingV1NetworkPolicyEgressRule, Symbol("to"), to)
        return new(ports, to, )
    end
end # type IoK8sApiNetworkingV1NetworkPolicyEgressRule

const _property_types_IoK8sApiNetworkingV1NetworkPolicyEgressRule = Dict{Symbol,String}(Symbol("ports")=>"Vector{IoK8sApiNetworkingV1NetworkPolicyPort}", Symbol("to")=>"Vector{IoK8sApiNetworkingV1NetworkPolicyPeer}", )
OpenAPI.property_type(::Type{ IoK8sApiNetworkingV1NetworkPolicyEgressRule }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiNetworkingV1NetworkPolicyEgressRule[name]))}

function check_required(o::IoK8sApiNetworkingV1NetworkPolicyEgressRule)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiNetworkingV1NetworkPolicyEgressRule }, name::Symbol, val)
end
