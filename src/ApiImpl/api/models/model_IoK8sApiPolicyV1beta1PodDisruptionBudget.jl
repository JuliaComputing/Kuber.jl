# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.policy.v1beta1.PodDisruptionBudget
PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods

    IoK8sApiPolicyV1beta1PodDisruptionBudget(;
        apiVersion=nothing,
        kind=nothing,
        metadata=nothing,
        spec=nothing,
        status=nothing,
    )

    - apiVersion::String : APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    - kind::String : Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    - metadata::IoK8sApimachineryPkgApisMetaV1ObjectMeta
    - spec::IoK8sApiPolicyV1beta1PodDisruptionBudgetSpec
    - status::IoK8sApiPolicyV1beta1PodDisruptionBudgetStatus
"""
Base.@kwdef mutable struct IoK8sApiPolicyV1beta1PodDisruptionBudget <: OpenAPI.APIModel
    apiVersion::Union{Nothing, String} = nothing
    kind::Union{Nothing, String} = nothing
    metadata = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta }
    spec = nothing # spec type: Union{ Nothing, IoK8sApiPolicyV1beta1PodDisruptionBudgetSpec }
    status = nothing # spec type: Union{ Nothing, IoK8sApiPolicyV1beta1PodDisruptionBudgetStatus }

    function IoK8sApiPolicyV1beta1PodDisruptionBudget(apiVersion, kind, metadata, spec, status, )
        OpenAPI.validate_property(IoK8sApiPolicyV1beta1PodDisruptionBudget, Symbol("apiVersion"), apiVersion)
        OpenAPI.validate_property(IoK8sApiPolicyV1beta1PodDisruptionBudget, Symbol("kind"), kind)
        OpenAPI.validate_property(IoK8sApiPolicyV1beta1PodDisruptionBudget, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoK8sApiPolicyV1beta1PodDisruptionBudget, Symbol("spec"), spec)
        OpenAPI.validate_property(IoK8sApiPolicyV1beta1PodDisruptionBudget, Symbol("status"), status)
        return new(apiVersion, kind, metadata, spec, status, )
    end
end # type IoK8sApiPolicyV1beta1PodDisruptionBudget

const _property_types_IoK8sApiPolicyV1beta1PodDisruptionBudget = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("kind")=>"String", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta", Symbol("spec")=>"IoK8sApiPolicyV1beta1PodDisruptionBudgetSpec", Symbol("status")=>"IoK8sApiPolicyV1beta1PodDisruptionBudgetStatus", )
OpenAPI.property_type(::Type{ IoK8sApiPolicyV1beta1PodDisruptionBudget }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiPolicyV1beta1PodDisruptionBudget[name]))}

function check_required(o::IoK8sApiPolicyV1beta1PodDisruptionBudget)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiPolicyV1beta1PodDisruptionBudget }, name::Symbol, val)
end
