# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.ComponentCondition
Information about the condition of a component.

    IoK8sApiCoreV1ComponentCondition(;
        error=nothing,
        message=nothing,
        status=nothing,
        type=nothing,
    )

    - error::String : Condition error code for a component. For example, a health check error code.
    - message::String : Message about the condition for a component. For example, information about a health check.
    - status::String : Status of the condition for a component. Valid values for \&quot;Healthy\&quot;: \&quot;True\&quot;, \&quot;False\&quot;, or \&quot;Unknown\&quot;.
    - type::String : Type of condition for a component. Valid value: \&quot;Healthy\&quot;
"""
Base.@kwdef mutable struct IoK8sApiCoreV1ComponentCondition <: OpenAPI.APIModel
    error::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1ComponentCondition(error, message, status, type, )
        OpenAPI.validate_property(IoK8sApiCoreV1ComponentCondition, Symbol("error"), error)
        OpenAPI.validate_property(IoK8sApiCoreV1ComponentCondition, Symbol("message"), message)
        OpenAPI.validate_property(IoK8sApiCoreV1ComponentCondition, Symbol("status"), status)
        OpenAPI.validate_property(IoK8sApiCoreV1ComponentCondition, Symbol("type"), type)
        return new(error, message, status, type, )
    end
end # type IoK8sApiCoreV1ComponentCondition

const _property_types_IoK8sApiCoreV1ComponentCondition = Dict{Symbol,String}(Symbol("error")=>"String", Symbol("message")=>"String", Symbol("status")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1ComponentCondition }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ComponentCondition[name]))}

function check_required(o::IoK8sApiCoreV1ComponentCondition)
    o.status === nothing && (return false)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1ComponentCondition }, name::Symbol, val)
end
