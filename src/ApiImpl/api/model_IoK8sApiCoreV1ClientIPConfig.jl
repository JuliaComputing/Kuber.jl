# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""ClientIPConfig represents the configurations of Client IP based session affinity.

    IoK8sApiCoreV1ClientIPConfig(;
        timeoutSeconds=nothing,
    )

    - timeoutSeconds::Int32 : timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be &gt;0 &amp;&amp; &lt;&#x3D;86400(for 1 day) if ServiceAffinity &#x3D;&#x3D; \&quot;ClientIP\&quot;. Default value is 10800(for 3 hours).
"""
mutable struct IoK8sApiCoreV1ClientIPConfig <: SwaggerModel
    timeoutSeconds::Any # spec type: Union{ Nothing, Int32 } # spec name: timeoutSeconds

    function IoK8sApiCoreV1ClientIPConfig(;timeoutSeconds=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1ClientIPConfig, Symbol("timeoutSeconds"), timeoutSeconds)
        setfield!(o, Symbol("timeoutSeconds"), timeoutSeconds)
        o
    end
end # type IoK8sApiCoreV1ClientIPConfig

const _property_map_IoK8sApiCoreV1ClientIPConfig = Dict{Symbol,Symbol}(Symbol("timeoutSeconds")=>Symbol("timeoutSeconds"))
const _property_types_IoK8sApiCoreV1ClientIPConfig = Dict{Symbol,String}(Symbol("timeoutSeconds")=>"Int32")
Base.propertynames(::Type{ IoK8sApiCoreV1ClientIPConfig }) = collect(keys(_property_map_IoK8sApiCoreV1ClientIPConfig))
Swagger.property_type(::Type{ IoK8sApiCoreV1ClientIPConfig }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ClientIPConfig[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1ClientIPConfig }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1ClientIPConfig[property_name]

function check_required(o::IoK8sApiCoreV1ClientIPConfig)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1ClientIPConfig }, name::Symbol, val)
end
