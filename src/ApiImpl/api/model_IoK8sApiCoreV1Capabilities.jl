# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""Adds and removes POSIX capabilities from running containers.

    IoK8sApiCoreV1Capabilities(;
        add=nothing,
        drop=nothing,
    )

    - add::Vector{String} : Added capabilities
    - drop::Vector{String} : Removed capabilities
"""
mutable struct IoK8sApiCoreV1Capabilities <: SwaggerModel
    add::Any # spec type: Union{ Nothing, Vector{String} } # spec name: add
    drop::Any # spec type: Union{ Nothing, Vector{String} } # spec name: drop

    function IoK8sApiCoreV1Capabilities(;add=nothing, drop=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1Capabilities, Symbol("add"), add)
        setfield!(o, Symbol("add"), add)
        validate_property(IoK8sApiCoreV1Capabilities, Symbol("drop"), drop)
        setfield!(o, Symbol("drop"), drop)
        o
    end
end # type IoK8sApiCoreV1Capabilities

const _property_map_IoK8sApiCoreV1Capabilities = Dict{Symbol,Symbol}(Symbol("add")=>Symbol("add"), Symbol("drop")=>Symbol("drop"))
const _property_types_IoK8sApiCoreV1Capabilities = Dict{Symbol,String}(Symbol("add")=>"Vector{String}", Symbol("drop")=>"Vector{String}")
Base.propertynames(::Type{ IoK8sApiCoreV1Capabilities }) = collect(keys(_property_map_IoK8sApiCoreV1Capabilities))
Swagger.property_type(::Type{ IoK8sApiCoreV1Capabilities }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1Capabilities[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1Capabilities }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1Capabilities[property_name]

function check_required(o::IoK8sApiCoreV1Capabilities)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1Capabilities }, name::Symbol, val)
end
