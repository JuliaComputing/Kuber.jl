# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct AuthorizationV1Api <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `AuthorizationV1Api`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ AuthorizationV1Api }) = "http://localhost"

const _returntypes_create_authorization_v1_namespaced_local_subject_access_review = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAuthorizationV1LocalSubjectAccessReview,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAuthorizationV1LocalSubjectAccessReview,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApiAuthorizationV1LocalSubjectAccessReview,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_authorization_v1_namespaced_local_subject_access_review(_api::AuthorizationV1Api, namespace::String, body::IoK8sApiAuthorizationV1LocalSubjectAccessReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_authorization_v1_namespaced_local_subject_access_review, "/apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create a LocalSubjectAccessReview

Params:
- namespace::String (required)
- body::IoK8sApiAuthorizationV1LocalSubjectAccessReview (required)
- dry_run::String
- field_manager::String
- pretty::String

Return: IoK8sApiAuthorizationV1LocalSubjectAccessReview, OpenAPI.Clients.ApiResponse
"""
function create_authorization_v1_namespaced_local_subject_access_review(_api::AuthorizationV1Api, namespace::String, body::IoK8sApiAuthorizationV1LocalSubjectAccessReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_authorization_v1_namespaced_local_subject_access_review(_api, namespace, body; dry_run=dry_run, field_manager=field_manager, pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_authorization_v1_namespaced_local_subject_access_review(_api::AuthorizationV1Api, response_stream::Channel, namespace::String, body::IoK8sApiAuthorizationV1LocalSubjectAccessReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_authorization_v1_namespaced_local_subject_access_review(_api, namespace, body; dry_run=dry_run, field_manager=field_manager, pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_authorization_v1_self_subject_access_review = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAuthorizationV1SelfSubjectAccessReview,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAuthorizationV1SelfSubjectAccessReview,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApiAuthorizationV1SelfSubjectAccessReview,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_authorization_v1_self_subject_access_review(_api::AuthorizationV1Api, body::IoK8sApiAuthorizationV1SelfSubjectAccessReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_authorization_v1_self_subject_access_review, "/apis/authorization.k8s.io/v1/selfsubjectaccessreviews", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create a SelfSubjectAccessReview

Params:
- body::IoK8sApiAuthorizationV1SelfSubjectAccessReview (required)
- dry_run::String
- field_manager::String
- pretty::String

Return: IoK8sApiAuthorizationV1SelfSubjectAccessReview, OpenAPI.Clients.ApiResponse
"""
function create_authorization_v1_self_subject_access_review(_api::AuthorizationV1Api, body::IoK8sApiAuthorizationV1SelfSubjectAccessReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_authorization_v1_self_subject_access_review(_api, body; dry_run=dry_run, field_manager=field_manager, pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_authorization_v1_self_subject_access_review(_api::AuthorizationV1Api, response_stream::Channel, body::IoK8sApiAuthorizationV1SelfSubjectAccessReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_authorization_v1_self_subject_access_review(_api, body; dry_run=dry_run, field_manager=field_manager, pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_authorization_v1_self_subject_rules_review = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAuthorizationV1SelfSubjectRulesReview,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAuthorizationV1SelfSubjectRulesReview,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApiAuthorizationV1SelfSubjectRulesReview,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_authorization_v1_self_subject_rules_review(_api::AuthorizationV1Api, body::IoK8sApiAuthorizationV1SelfSubjectRulesReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_authorization_v1_self_subject_rules_review, "/apis/authorization.k8s.io/v1/selfsubjectrulesreviews", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create a SelfSubjectRulesReview

Params:
- body::IoK8sApiAuthorizationV1SelfSubjectRulesReview (required)
- dry_run::String
- field_manager::String
- pretty::String

Return: IoK8sApiAuthorizationV1SelfSubjectRulesReview, OpenAPI.Clients.ApiResponse
"""
function create_authorization_v1_self_subject_rules_review(_api::AuthorizationV1Api, body::IoK8sApiAuthorizationV1SelfSubjectRulesReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_authorization_v1_self_subject_rules_review(_api, body; dry_run=dry_run, field_manager=field_manager, pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_authorization_v1_self_subject_rules_review(_api::AuthorizationV1Api, response_stream::Channel, body::IoK8sApiAuthorizationV1SelfSubjectRulesReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_authorization_v1_self_subject_rules_review(_api, body; dry_run=dry_run, field_manager=field_manager, pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_authorization_v1_subject_access_review = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAuthorizationV1SubjectAccessReview,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAuthorizationV1SubjectAccessReview,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApiAuthorizationV1SubjectAccessReview,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_authorization_v1_subject_access_review(_api::AuthorizationV1Api, body::IoK8sApiAuthorizationV1SubjectAccessReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_authorization_v1_subject_access_review, "/apis/authorization.k8s.io/v1/subjectaccessreviews", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create a SubjectAccessReview

Params:
- body::IoK8sApiAuthorizationV1SubjectAccessReview (required)
- dry_run::String
- field_manager::String
- pretty::String

Return: IoK8sApiAuthorizationV1SubjectAccessReview, OpenAPI.Clients.ApiResponse
"""
function create_authorization_v1_subject_access_review(_api::AuthorizationV1Api, body::IoK8sApiAuthorizationV1SubjectAccessReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_authorization_v1_subject_access_review(_api, body; dry_run=dry_run, field_manager=field_manager, pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_authorization_v1_subject_access_review(_api::AuthorizationV1Api, response_stream::Channel, body::IoK8sApiAuthorizationV1SubjectAccessReview; dry_run=nothing, field_manager=nothing, pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_authorization_v1_subject_access_review(_api, body; dry_run=dry_run, field_manager=field_manager, pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_authorization_v1_a_p_i_resources = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1APIResourceList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_get_authorization_v1_a_p_i_resources(_api::AuthorizationV1Api; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_authorization_v1_a_p_i_resources, "/apis/authorization.k8s.io/v1/", ["BearerToken", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""get available resources

Params:

Return: IoK8sApimachineryPkgApisMetaV1APIResourceList, OpenAPI.Clients.ApiResponse
"""
function get_authorization_v1_a_p_i_resources(_api::AuthorizationV1Api; _mediaType=nothing)
    _ctx = _oacinternal_get_authorization_v1_a_p_i_resources(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_authorization_v1_a_p_i_resources(_api::AuthorizationV1Api, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_authorization_v1_a_p_i_resources(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_authorization_v1_namespaced_local_subject_access_review
export create_authorization_v1_self_subject_access_review
export create_authorization_v1_self_subject_rules_review
export create_authorization_v1_subject_access_review
export get_authorization_v1_a_p_i_resources
