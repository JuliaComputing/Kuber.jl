# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct AppsV1beta2Api <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `AppsV1beta2Api`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ AppsV1beta2Api }) = "http://localhost"

const _returntypes_create_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ControllerRevision,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ControllerRevision,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ControllerRevision,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2ControllerRevision; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create a ControllerRevision

Params:
- namespace::String (required)
- body::IoK8sApiAppsV1beta2ControllerRevision (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2ControllerRevision, OpenAPI.Clients.ApiResponse
"""
function create_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2ControllerRevision; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_controller_revision(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, response_stream::Channel, namespace::String, body::IoK8sApiAppsV1beta2ControllerRevision; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_controller_revision(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2DaemonSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create a DaemonSet

Params:
- namespace::String (required)
- body::IoK8sApiAppsV1beta2DaemonSet (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2DaemonSet, OpenAPI.Clients.ApiResponse
"""
function create_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2DaemonSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_daemon_set(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, response_stream::Channel, namespace::String, body::IoK8sApiAppsV1beta2DaemonSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_daemon_set(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_apps_v1beta2_namespaced_deployment_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2Deployment; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_apps_v1beta2_namespaced_deployment_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create a Deployment

Params:
- namespace::String (required)
- body::IoK8sApiAppsV1beta2Deployment (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2Deployment, OpenAPI.Clients.ApiResponse
"""
function create_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2Deployment; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_deployment(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, response_stream::Channel, namespace::String, body::IoK8sApiAppsV1beta2Deployment; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_deployment(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2ReplicaSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create a ReplicaSet

Params:
- namespace::String (required)
- body::IoK8sApiAppsV1beta2ReplicaSet (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2ReplicaSet, OpenAPI.Clients.ApiResponse
"""
function create_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2ReplicaSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_replica_set(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, response_stream::Channel, namespace::String, body::IoK8sApiAppsV1beta2ReplicaSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_replica_set(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2StatefulSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create a StatefulSet

Params:
- namespace::String (required)
- body::IoK8sApiAppsV1beta2StatefulSet (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2StatefulSet, OpenAPI.Clients.ApiResponse
"""
function create_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, namespace::String, body::IoK8sApiAppsV1beta2StatefulSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_stateful_set(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, response_stream::Channel, namespace::String, body::IoK8sApiAppsV1beta2StatefulSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_apps_v1beta2_namespaced_stateful_set(_api, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_collection_namespaced_controller_revision_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_collection_namespaced_controller_revision(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_collection_namespaced_controller_revision_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete collection of ControllerRevision

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- dry_run::String
- field_selector::String
- grace_period_seconds::Int64
- label_selector::String
- limit::Int64
- orphan_dependents::Bool
- propagation_policy::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_collection_namespaced_controller_revision(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_controller_revision(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_collection_namespaced_controller_revision(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_controller_revision(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_collection_namespaced_daemon_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_collection_namespaced_daemon_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_collection_namespaced_daemon_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete collection of DaemonSet

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- dry_run::String
- field_selector::String
- grace_period_seconds::Int64
- label_selector::String
- limit::Int64
- orphan_dependents::Bool
- propagation_policy::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_collection_namespaced_daemon_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_daemon_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_collection_namespaced_daemon_set(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_daemon_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_collection_namespaced_deployment_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_collection_namespaced_deployment(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_collection_namespaced_deployment_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete collection of Deployment

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- dry_run::String
- field_selector::String
- grace_period_seconds::Int64
- label_selector::String
- limit::Int64
- orphan_dependents::Bool
- propagation_policy::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_collection_namespaced_deployment(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_deployment(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_collection_namespaced_deployment(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_deployment(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_collection_namespaced_replica_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_collection_namespaced_replica_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_collection_namespaced_replica_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete collection of ReplicaSet

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- dry_run::String
- field_selector::String
- grace_period_seconds::Int64
- label_selector::String
- limit::Int64
- orphan_dependents::Bool
- propagation_policy::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_collection_namespaced_replica_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_replica_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_collection_namespaced_replica_set(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_replica_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_collection_namespaced_stateful_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_collection_namespaced_stateful_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_collection_namespaced_stateful_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete collection of StatefulSet

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- dry_run::String
- field_selector::String
- grace_period_seconds::Int64
- label_selector::String
- limit::Int64
- orphan_dependents::Bool
- propagation_policy::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_collection_namespaced_stateful_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_stateful_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_collection_namespaced_stateful_set(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, dry_run=nothing, field_selector=nothing, grace_period_seconds=nothing, label_selector=nothing, limit=nothing, orphan_dependents=nothing, propagation_policy=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_collection_namespaced_stateful_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, dry_run=dry_run, field_selector=field_selector, grace_period_seconds=grace_period_seconds, label_selector=label_selector, limit=limit, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete a ControllerRevision

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- dry_run::String
- grace_period_seconds::Int64
- orphan_dependents::Bool
- propagation_policy::String
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_controller_revision(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_controller_revision(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete a DaemonSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- dry_run::String
- grace_period_seconds::Int64
- orphan_dependents::Bool
- propagation_policy::String
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_daemon_set(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_daemon_set(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_namespaced_deployment_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_namespaced_deployment_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete a Deployment

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- dry_run::String
- grace_period_seconds::Int64
- orphan_dependents::Bool
- propagation_policy::String
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_deployment(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_deployment(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete a ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- dry_run::String
- grace_period_seconds::Int64
- orphan_dependents::Bool
- propagation_policy::String
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_replica_set(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_replica_set(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("202", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1Status,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delete_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gracePeriodSeconds", grace_period_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "orphanDependents", orphan_dependents)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "propagationPolicy", propagation_policy)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""delete a StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- dry_run::String
- grace_period_seconds::Int64
- orphan_dependents::Bool
- propagation_policy::String
- body::IoK8sApimachineryPkgApisMetaV1DeleteOptions

Return: IoK8sApimachineryPkgApisMetaV1Status, OpenAPI.Clients.ApiResponse
"""
function delete_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_stateful_set(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, dry_run=nothing, grace_period_seconds=nothing, orphan_dependents=nothing, propagation_policy=nothing, body=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_apps_v1beta2_namespaced_stateful_set(_api, name, namespace; pretty=pretty, dry_run=dry_run, grace_period_seconds=grace_period_seconds, orphan_dependents=orphan_dependents, propagation_policy=propagation_policy, body=body, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_apps_v1beta2_a_p_i_resources_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1APIResourceList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_get_apps_v1beta2_a_p_i_resources(_api::AppsV1beta2Api; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_apps_v1beta2_a_p_i_resources_AppsV1beta2Api, "/apis/apps/v1beta2/", ["BearerToken", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""get available resources

Params:

Return: IoK8sApimachineryPkgApisMetaV1APIResourceList, OpenAPI.Clients.ApiResponse
"""
function get_apps_v1beta2_a_p_i_resources(_api::AppsV1beta2Api; _mediaType=nothing)
    _ctx = _oacinternal_get_apps_v1beta2_a_p_i_resources(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_apps_v1beta2_a_p_i_resources(_api::AppsV1beta2Api, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_apps_v1beta2_a_p_i_resources(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_controller_revision_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ControllerRevisionList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_controller_revision_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_controller_revision_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/controllerrevisions", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind ControllerRevision

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2ControllerRevisionList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_controller_revision_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_controller_revision_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_controller_revision_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_controller_revision_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_daemon_set_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSetList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_daemon_set_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_daemon_set_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/daemonsets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind DaemonSet

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2DaemonSetList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_daemon_set_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_daemon_set_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_daemon_set_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_daemon_set_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_deployment_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DeploymentList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_deployment_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_deployment_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/deployments", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind Deployment

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2DeploymentList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_deployment_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_deployment_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_deployment_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_deployment_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ControllerRevisionList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind ControllerRevision

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2ControllerRevisionList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_controller_revision(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_controller_revision(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSetList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind DaemonSet

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2DaemonSetList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_daemon_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_daemon_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_namespaced_deployment_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DeploymentList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_namespaced_deployment_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind Deployment

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2DeploymentList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_deployment(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_deployment(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSetList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind ReplicaSet

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2ReplicaSetList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_replica_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_replica_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSetList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind StatefulSet

Params:
- namespace::String (required)
- pretty::String
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2StatefulSetList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_stateful_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; pretty=nothing, allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_namespaced_stateful_set(_api, namespace; pretty=pretty, allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_replica_set_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSetList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_replica_set_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_replica_set_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/replicasets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind ReplicaSet

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2ReplicaSetList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_replica_set_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_replica_set_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_replica_set_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_replica_set_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_apps_v1beta2_stateful_set_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSetList,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_list_apps_v1beta2_stateful_set_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_apps_v1beta2_stateful_set_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/statefulsets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""list or watch objects of kind StatefulSet

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApiAppsV1beta2StatefulSetList, OpenAPI.Clients.ApiResponse
"""
function list_apps_v1beta2_stateful_set_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_stateful_set_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_apps_v1beta2_stateful_set_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_apps_v1beta2_stateful_set_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ControllerRevision,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update the specified ControllerRevision

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2ControllerRevision, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_controller_revision(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_controller_revision(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update the specified DaemonSet

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2DaemonSet, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_daemon_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_daemon_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_daemon_set_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_daemon_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_daemon_set_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}/status", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update status of the specified DaemonSet

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2DaemonSet, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_daemon_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_daemon_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_daemon_set_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_daemon_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_deployment_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_deployment_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update the specified Deployment

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2Deployment, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_deployment(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_deployment(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_deployment_scale_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_deployment_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_deployment_scale_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/scale", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update scale of the specified Deployment

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2Scale, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_deployment_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_deployment_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_deployment_scale(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_deployment_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_deployment_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_deployment_status(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_deployment_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/status", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update status of the specified Deployment

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2Deployment, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_deployment_status(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_deployment_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_deployment_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_deployment_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update the specified ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2ReplicaSet, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_replica_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_replica_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_replica_set_scale_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_replica_set_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_replica_set_scale_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/scale", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update scale of the specified ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2Scale, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_replica_set_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_replica_set_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_replica_set_scale(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_replica_set_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_replica_set_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_replica_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_replica_set_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/status", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update status of the specified ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2ReplicaSet, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_replica_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_replica_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_replica_set_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_replica_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update the specified StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2StatefulSet, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_stateful_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_stateful_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_stateful_set_scale_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_stateful_set_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_stateful_set_scale_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/scale", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update scale of the specified StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2Scale, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_stateful_set_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_stateful_set_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_stateful_set_scale(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_stateful_set_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_patch_apps_v1beta2_namespaced_stateful_set_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_patch_apps_v1beta2_namespaced_stateful_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_patch_apps_v1beta2_namespaced_stateful_set_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/status", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "force", force)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json", "application/apply-patch+yaml", ] : [_mediaType])
    return _ctx
end

@doc raw"""partially update status of the specified StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- body::Any (required)
- pretty::String
- dry_run::String
- field_manager::String
- force::Bool

Return: IoK8sApiAppsV1beta2StatefulSet, OpenAPI.Clients.ApiResponse
"""
function patch_apps_v1beta2_namespaced_stateful_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_stateful_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function patch_apps_v1beta2_namespaced_stateful_set_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::Any; pretty=nothing, dry_run=nothing, field_manager=nothing, force=nothing, _mediaType=nothing)
    _ctx = _oacinternal_patch_apps_v1beta2_namespaced_stateful_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, force=force, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ControllerRevision,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exact", exact)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "export", __export__)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read the specified ControllerRevision

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- exact::Bool
- __export__::Bool

Return: IoK8sApiAppsV1beta2ControllerRevision, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_controller_revision(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_controller_revision(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exact", exact)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "export", __export__)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read the specified DaemonSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- exact::Bool
- __export__::Bool

Return: IoK8sApiAppsV1beta2DaemonSet, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_daemon_set(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_daemon_set(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_daemon_set_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_daemon_set_status(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_daemon_set_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}/status", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read status of the specified DaemonSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String

Return: IoK8sApiAppsV1beta2DaemonSet, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_daemon_set_status(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_daemon_set_status(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_daemon_set_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_daemon_set_status(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_deployment_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_deployment_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exact", exact)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "export", __export__)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read the specified Deployment

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- exact::Bool
- __export__::Bool

Return: IoK8sApiAppsV1beta2Deployment, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_deployment(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_deployment(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_deployment_scale_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_deployment_scale(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_deployment_scale_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/scale", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read scale of the specified Deployment

Params:
- name::String (required)
- namespace::String (required)
- pretty::String

Return: IoK8sApiAppsV1beta2Scale, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_deployment_scale(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_deployment_scale(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_deployment_scale(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_deployment_scale(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_deployment_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_deployment_status(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_deployment_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/status", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read status of the specified Deployment

Params:
- name::String (required)
- namespace::String (required)
- pretty::String

Return: IoK8sApiAppsV1beta2Deployment, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_deployment_status(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_deployment_status(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_deployment_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_deployment_status(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exact", exact)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "export", __export__)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read the specified ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- exact::Bool
- __export__::Bool

Return: IoK8sApiAppsV1beta2ReplicaSet, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_replica_set(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_replica_set(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_replica_set_scale_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_replica_set_scale(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_replica_set_scale_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/scale", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read scale of the specified ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String

Return: IoK8sApiAppsV1beta2Scale, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_replica_set_scale(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_replica_set_scale(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_replica_set_scale(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_replica_set_scale(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_replica_set_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_replica_set_status(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_replica_set_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/status", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read status of the specified ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String

Return: IoK8sApiAppsV1beta2ReplicaSet, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_replica_set_status(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_replica_set_status(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_replica_set_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_replica_set_status(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exact", exact)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "export", __export__)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read the specified StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String
- exact::Bool
- __export__::Bool

Return: IoK8sApiAppsV1beta2StatefulSet, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_stateful_set(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, exact=nothing, __export__=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_stateful_set(_api, name, namespace; pretty=pretty, exact=exact, __export__=__export__, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_stateful_set_scale_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_stateful_set_scale(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_stateful_set_scale_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/scale", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read scale of the specified StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String

Return: IoK8sApiAppsV1beta2Scale, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_stateful_set_scale(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_stateful_set_scale(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_stateful_set_scale(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_stateful_set_scale(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_read_apps_v1beta2_namespaced_stateful_set_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_read_apps_v1beta2_namespaced_stateful_set_status(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_read_apps_v1beta2_namespaced_stateful_set_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/status", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""read status of the specified StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- pretty::String

Return: IoK8sApiAppsV1beta2StatefulSet, OpenAPI.Clients.ApiResponse
"""
function read_apps_v1beta2_namespaced_stateful_set_status(_api::AppsV1beta2Api, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_stateful_set_status(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function read_apps_v1beta2_namespaced_stateful_set_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, _mediaType=nothing)
    _ctx = _oacinternal_read_apps_v1beta2_namespaced_stateful_set_status(_api, name, namespace; pretty=pretty, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ControllerRevision,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ControllerRevision,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2ControllerRevision; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace the specified ControllerRevision

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2ControllerRevision (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2ControllerRevision, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2ControllerRevision; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_controller_revision(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2ControllerRevision; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_controller_revision(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2DaemonSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace the specified DaemonSet

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2DaemonSet (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2DaemonSet, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2DaemonSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_daemon_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2DaemonSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_daemon_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_daemon_set_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2DaemonSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_daemon_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2DaemonSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_daemon_set_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}/status", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace status of the specified DaemonSet

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2DaemonSet (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2DaemonSet, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_daemon_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2DaemonSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_daemon_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_daemon_set_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2DaemonSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_daemon_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_deployment_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Deployment; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_deployment_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace the specified Deployment

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2Deployment (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2Deployment, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Deployment; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_deployment(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2Deployment; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_deployment(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_deployment_scale_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_deployment_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Scale; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_deployment_scale_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/scale", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace scale of the specified Deployment

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2Scale (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2Scale, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_deployment_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Scale; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_deployment_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_deployment_scale(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2Scale; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_deployment_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_deployment_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Deployment,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_deployment_status(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Deployment; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_deployment_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/status", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace status of the specified Deployment

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2Deployment (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2Deployment, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_deployment_status(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Deployment; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_deployment_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_deployment_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2Deployment; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_deployment_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2ReplicaSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace the specified ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2ReplicaSet (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2ReplicaSet, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2ReplicaSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_replica_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2ReplicaSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_replica_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_replica_set_scale_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_replica_set_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Scale; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_replica_set_scale_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/scale", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace scale of the specified ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2Scale (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2Scale, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_replica_set_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Scale; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_replica_set_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_replica_set_scale(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2Scale; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_replica_set_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_replica_set_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2ReplicaSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_replica_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2ReplicaSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_replica_set_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/status", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace status of the specified ReplicaSet

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2ReplicaSet (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2ReplicaSet, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_replica_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2ReplicaSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_replica_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_replica_set_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2ReplicaSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_replica_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2StatefulSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace the specified StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2StatefulSet (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2StatefulSet, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2StatefulSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_stateful_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2StatefulSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_stateful_set(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_stateful_set_scale_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2Scale,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_stateful_set_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Scale; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_stateful_set_scale_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/scale", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace scale of the specified StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2Scale (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2Scale, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_stateful_set_scale(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2Scale; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_stateful_set_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_stateful_set_scale(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2Scale; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_stateful_set_scale(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_replace_apps_v1beta2_namespaced_stateful_set_status_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("201", "x"=>".") * "\$") => IoK8sApiAppsV1beta2StatefulSet,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_replace_apps_v1beta2_namespaced_stateful_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2StatefulSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_replace_apps_v1beta2_namespaced_stateful_set_status_AppsV1beta2Api, "/apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/status", ["BearerToken", ], body)
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "dryRun", dry_run)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldManager", field_manager)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""replace status of the specified StatefulSet

Params:
- name::String (required)
- namespace::String (required)
- body::IoK8sApiAppsV1beta2StatefulSet (required)
- pretty::String
- dry_run::String
- field_manager::String

Return: IoK8sApiAppsV1beta2StatefulSet, OpenAPI.Clients.ApiResponse
"""
function replace_apps_v1beta2_namespaced_stateful_set_status(_api::AppsV1beta2Api, name::String, namespace::String, body::IoK8sApiAppsV1beta2StatefulSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_stateful_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function replace_apps_v1beta2_namespaced_stateful_set_status(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String, body::IoK8sApiAppsV1beta2StatefulSet; pretty=nothing, dry_run=nothing, field_manager=nothing, _mediaType=nothing)
    _ctx = _oacinternal_replace_apps_v1beta2_namespaced_stateful_set_status(_api, name, namespace, body; pretty=pretty, dry_run=dry_run, field_manager=field_manager, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_controller_revision_list_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_controller_revision_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_controller_revision_list_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/watch/controllerrevisions", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_controller_revision_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_controller_revision_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_controller_revision_list_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_controller_revision_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_daemon_set_list_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_daemon_set_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_daemon_set_list_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/watch/daemonsets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_daemon_set_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_daemon_set_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_daemon_set_list_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_daemon_set_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_deployment_list_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_deployment_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_deployment_list_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/watch/deployments", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_deployment_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_deployment_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_deployment_list_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_deployment_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_controller_revision_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/controllerrevisions/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch changes to an object of kind ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.

Params:
- name::String (required)
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_controller_revision(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_controller_revision(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_controller_revision(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_controller_revision_list_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_controller_revision_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_controller_revision_list_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/controllerrevisions", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_controller_revision_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_controller_revision_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_controller_revision_list(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_controller_revision_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_daemon_set_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/daemonsets/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch changes to an object of kind DaemonSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.

Params:
- name::String (required)
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_daemon_set(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_daemon_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_daemon_set(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_daemon_set_list_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_daemon_set_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_daemon_set_list_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/daemonsets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_daemon_set_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_daemon_set_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_daemon_set_list(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_daemon_set_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_deployment_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_deployment_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/deployments/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch changes to an object of kind Deployment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.

Params:
- name::String (required)
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_deployment(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_deployment(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_deployment(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_deployment_list_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_deployment_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_deployment_list_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/deployments", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_deployment_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_deployment_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_deployment_list(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_deployment_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_replica_set_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/replicasets/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch changes to an object of kind ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.

Params:
- name::String (required)
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_replica_set(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_replica_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_replica_set(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_replica_set_list_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_replica_set_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_replica_set_list_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/replicasets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_replica_set_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_replica_set_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_replica_set_list(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_replica_set_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_stateful_set_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/statefulsets/{name}", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch changes to an object of kind StatefulSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.

Params:
- name::String (required)
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_stateful_set(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_stateful_set(_api::AppsV1beta2Api, response_stream::Channel, name::String, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_stateful_set(_api, name, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_namespaced_stateful_set_list_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_namespaced_stateful_set_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_namespaced_stateful_set_list_AppsV1beta2Api, "/apis/apps/v1beta2/watch/namespaces/{namespace}/statefulsets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.path, "namespace", namespace)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- namespace::String (required)
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_namespaced_stateful_set_list(_api::AppsV1beta2Api, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_stateful_set_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_namespaced_stateful_set_list(_api::AppsV1beta2Api, response_stream::Channel, namespace::String; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_namespaced_stateful_set_list(_api, namespace; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_replica_set_list_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_replica_set_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_replica_set_list_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/watch/replicasets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_replica_set_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_replica_set_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_replica_set_list_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_replica_set_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_watch_apps_v1beta2_stateful_set_list_for_all_namespaces_AppsV1beta2Api = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => IoK8sApimachineryPkgApisMetaV1WatchEvent,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_watch_apps_v1beta2_stateful_set_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_watch_apps_v1beta2_stateful_set_list_for_all_namespaces_AppsV1beta2Api, "/apis/apps/v1beta2/watch/statefulsets", ["BearerToken", ])
    OpenAPI.Clients.set_param(_ctx.query, "allowWatchBookmarks", allow_watch_bookmarks)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "continue", __continue__)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fieldSelector", field_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "labelSelector", label_selector)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "pretty", pretty)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "resourceVersion", resource_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "timeoutSeconds", timeout_seconds)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "watch", watch)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/json;stream=watch", "application/vnd.kubernetes.protobuf;stream=watch", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead.

Params:
- allow_watch_bookmarks::Bool
- __continue__::String
- field_selector::String
- label_selector::String
- limit::Int64
- pretty::String
- resource_version::String
- timeout_seconds::Int64
- watch::Bool

Return: IoK8sApimachineryPkgApisMetaV1WatchEvent, OpenAPI.Clients.ApiResponse
"""
function watch_apps_v1beta2_stateful_set_list_for_all_namespaces(_api::AppsV1beta2Api; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_stateful_set_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function watch_apps_v1beta2_stateful_set_list_for_all_namespaces(_api::AppsV1beta2Api, response_stream::Channel; allow_watch_bookmarks=nothing, __continue__=nothing, field_selector=nothing, label_selector=nothing, limit=nothing, pretty=nothing, resource_version=nothing, timeout_seconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _oacinternal_watch_apps_v1beta2_stateful_set_list_for_all_namespaces(_api; allow_watch_bookmarks=allow_watch_bookmarks, __continue__=__continue__, field_selector=field_selector, label_selector=label_selector, limit=limit, pretty=pretty, resource_version=resource_version, timeout_seconds=timeout_seconds, watch=watch, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_apps_v1beta2_namespaced_controller_revision
export create_apps_v1beta2_namespaced_daemon_set
export create_apps_v1beta2_namespaced_deployment
export create_apps_v1beta2_namespaced_replica_set
export create_apps_v1beta2_namespaced_stateful_set
export delete_apps_v1beta2_collection_namespaced_controller_revision
export delete_apps_v1beta2_collection_namespaced_daemon_set
export delete_apps_v1beta2_collection_namespaced_deployment
export delete_apps_v1beta2_collection_namespaced_replica_set
export delete_apps_v1beta2_collection_namespaced_stateful_set
export delete_apps_v1beta2_namespaced_controller_revision
export delete_apps_v1beta2_namespaced_daemon_set
export delete_apps_v1beta2_namespaced_deployment
export delete_apps_v1beta2_namespaced_replica_set
export delete_apps_v1beta2_namespaced_stateful_set
export get_apps_v1beta2_a_p_i_resources
export list_apps_v1beta2_controller_revision_for_all_namespaces
export list_apps_v1beta2_daemon_set_for_all_namespaces
export list_apps_v1beta2_deployment_for_all_namespaces
export list_apps_v1beta2_namespaced_controller_revision
export list_apps_v1beta2_namespaced_daemon_set
export list_apps_v1beta2_namespaced_deployment
export list_apps_v1beta2_namespaced_replica_set
export list_apps_v1beta2_namespaced_stateful_set
export list_apps_v1beta2_replica_set_for_all_namespaces
export list_apps_v1beta2_stateful_set_for_all_namespaces
export patch_apps_v1beta2_namespaced_controller_revision
export patch_apps_v1beta2_namespaced_daemon_set
export patch_apps_v1beta2_namespaced_daemon_set_status
export patch_apps_v1beta2_namespaced_deployment
export patch_apps_v1beta2_namespaced_deployment_scale
export patch_apps_v1beta2_namespaced_deployment_status
export patch_apps_v1beta2_namespaced_replica_set
export patch_apps_v1beta2_namespaced_replica_set_scale
export patch_apps_v1beta2_namespaced_replica_set_status
export patch_apps_v1beta2_namespaced_stateful_set
export patch_apps_v1beta2_namespaced_stateful_set_scale
export patch_apps_v1beta2_namespaced_stateful_set_status
export read_apps_v1beta2_namespaced_controller_revision
export read_apps_v1beta2_namespaced_daemon_set
export read_apps_v1beta2_namespaced_daemon_set_status
export read_apps_v1beta2_namespaced_deployment
export read_apps_v1beta2_namespaced_deployment_scale
export read_apps_v1beta2_namespaced_deployment_status
export read_apps_v1beta2_namespaced_replica_set
export read_apps_v1beta2_namespaced_replica_set_scale
export read_apps_v1beta2_namespaced_replica_set_status
export read_apps_v1beta2_namespaced_stateful_set
export read_apps_v1beta2_namespaced_stateful_set_scale
export read_apps_v1beta2_namespaced_stateful_set_status
export replace_apps_v1beta2_namespaced_controller_revision
export replace_apps_v1beta2_namespaced_daemon_set
export replace_apps_v1beta2_namespaced_daemon_set_status
export replace_apps_v1beta2_namespaced_deployment
export replace_apps_v1beta2_namespaced_deployment_scale
export replace_apps_v1beta2_namespaced_deployment_status
export replace_apps_v1beta2_namespaced_replica_set
export replace_apps_v1beta2_namespaced_replica_set_scale
export replace_apps_v1beta2_namespaced_replica_set_status
export replace_apps_v1beta2_namespaced_stateful_set
export replace_apps_v1beta2_namespaced_stateful_set_scale
export replace_apps_v1beta2_namespaced_stateful_set_status
export watch_apps_v1beta2_controller_revision_list_for_all_namespaces
export watch_apps_v1beta2_daemon_set_list_for_all_namespaces
export watch_apps_v1beta2_deployment_list_for_all_namespaces
export watch_apps_v1beta2_namespaced_controller_revision
export watch_apps_v1beta2_namespaced_controller_revision_list
export watch_apps_v1beta2_namespaced_daemon_set
export watch_apps_v1beta2_namespaced_daemon_set_list
export watch_apps_v1beta2_namespaced_deployment
export watch_apps_v1beta2_namespaced_deployment_list
export watch_apps_v1beta2_namespaced_replica_set
export watch_apps_v1beta2_namespaced_replica_set_list
export watch_apps_v1beta2_namespaced_stateful_set
export watch_apps_v1beta2_namespaced_stateful_set_list
export watch_apps_v1beta2_replica_set_list_for_all_namespaces
export watch_apps_v1beta2_stateful_set_list_for_all_namespaces
