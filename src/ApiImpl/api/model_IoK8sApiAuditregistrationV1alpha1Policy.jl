# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""Policy defines the configuration of how audit events are logged

    IoK8sApiAuditregistrationV1alpha1Policy(;
        level=nothing,
        stages=nothing,
    )

    - level::String : The Level that all requests are recorded at. available options: None, Metadata, Request, RequestResponse required
    - stages::Vector{String} : Stages is a list of stages for which events are created.
"""
mutable struct IoK8sApiAuditregistrationV1alpha1Policy <: SwaggerModel
    level::Any # spec type: Union{ Nothing, String } # spec name: level
    stages::Any # spec type: Union{ Nothing, Vector{String} } # spec name: stages

    function IoK8sApiAuditregistrationV1alpha1Policy(;level=nothing, stages=nothing)
        o = new()
        validate_property(IoK8sApiAuditregistrationV1alpha1Policy, Symbol("level"), level)
        setfield!(o, Symbol("level"), level)
        validate_property(IoK8sApiAuditregistrationV1alpha1Policy, Symbol("stages"), stages)
        setfield!(o, Symbol("stages"), stages)
        o
    end
end # type IoK8sApiAuditregistrationV1alpha1Policy

const _property_map_IoK8sApiAuditregistrationV1alpha1Policy = Dict{Symbol,Symbol}(Symbol("level")=>Symbol("level"), Symbol("stages")=>Symbol("stages"))
const _property_types_IoK8sApiAuditregistrationV1alpha1Policy = Dict{Symbol,String}(Symbol("level")=>"String", Symbol("stages")=>"Vector{String}")
Base.propertynames(::Type{ IoK8sApiAuditregistrationV1alpha1Policy }) = collect(keys(_property_map_IoK8sApiAuditregistrationV1alpha1Policy))
Swagger.property_type(::Type{ IoK8sApiAuditregistrationV1alpha1Policy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAuditregistrationV1alpha1Policy[name]))}
Swagger.field_name(::Type{ IoK8sApiAuditregistrationV1alpha1Policy }, property_name::Symbol) =  _property_map_IoK8sApiAuditregistrationV1alpha1Policy[property_name]

function check_required(o::IoK8sApiAuditregistrationV1alpha1Policy)
    (getproperty(o, Symbol("level")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiAuditregistrationV1alpha1Policy }, name::Symbol, val)
end
