# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""TokenRequestStatus is the result of a token request.

    IoK8sApiAuthenticationV1TokenRequestStatus(;
        expirationTimestamp=nothing,
        token=nothing,
    )

    - expirationTimestamp::IoK8sApimachineryPkgApisMetaV1Time : ExpirationTimestamp is the time of expiration of the returned token.
    - token::String : Token is the opaque bearer token.
"""
mutable struct IoK8sApiAuthenticationV1TokenRequestStatus <: SwaggerModel
    expirationTimestamp::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1Time } # spec name: expirationTimestamp
    token::Any # spec type: Union{ Nothing, String } # spec name: token

    function IoK8sApiAuthenticationV1TokenRequestStatus(;expirationTimestamp=nothing, token=nothing)
        o = new()
        validate_property(IoK8sApiAuthenticationV1TokenRequestStatus, Symbol("expirationTimestamp"), expirationTimestamp)
        setfield!(o, Symbol("expirationTimestamp"), expirationTimestamp)
        validate_property(IoK8sApiAuthenticationV1TokenRequestStatus, Symbol("token"), token)
        setfield!(o, Symbol("token"), token)
        o
    end
end # type IoK8sApiAuthenticationV1TokenRequestStatus

const _property_map_IoK8sApiAuthenticationV1TokenRequestStatus = Dict{Symbol,Symbol}(Symbol("expirationTimestamp")=>Symbol("expirationTimestamp"), Symbol("token")=>Symbol("token"))
const _property_types_IoK8sApiAuthenticationV1TokenRequestStatus = Dict{Symbol,String}(Symbol("expirationTimestamp")=>"IoK8sApimachineryPkgApisMetaV1Time", Symbol("token")=>"String")
Base.propertynames(::Type{ IoK8sApiAuthenticationV1TokenRequestStatus }) = collect(keys(_property_map_IoK8sApiAuthenticationV1TokenRequestStatus))
Swagger.property_type(::Type{ IoK8sApiAuthenticationV1TokenRequestStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAuthenticationV1TokenRequestStatus[name]))}
Swagger.field_name(::Type{ IoK8sApiAuthenticationV1TokenRequestStatus }, property_name::Symbol) =  _property_map_IoK8sApiAuthenticationV1TokenRequestStatus[property_name]

function check_required(o::IoK8sApiAuthenticationV1TokenRequestStatus)
    (getproperty(o, Symbol("expirationTimestamp")) === nothing) && (return false)
    (getproperty(o, Symbol("token")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiAuthenticationV1TokenRequestStatus }, name::Symbol, val)
end
