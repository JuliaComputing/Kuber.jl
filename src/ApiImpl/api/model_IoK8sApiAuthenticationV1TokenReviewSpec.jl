# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""TokenReviewSpec is a description of the token authentication request.

    IoK8sApiAuthenticationV1TokenReviewSpec(;
        audiences=nothing,
        token=nothing,
    )

    - audiences::Vector{String} : Audiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.
    - token::String : Token is the opaque bearer token.
"""
mutable struct IoK8sApiAuthenticationV1TokenReviewSpec <: SwaggerModel
    audiences::Any # spec type: Union{ Nothing, Vector{String} } # spec name: audiences
    token::Any # spec type: Union{ Nothing, String } # spec name: token

    function IoK8sApiAuthenticationV1TokenReviewSpec(;audiences=nothing, token=nothing)
        o = new()
        validate_property(IoK8sApiAuthenticationV1TokenReviewSpec, Symbol("audiences"), audiences)
        setfield!(o, Symbol("audiences"), audiences)
        validate_property(IoK8sApiAuthenticationV1TokenReviewSpec, Symbol("token"), token)
        setfield!(o, Symbol("token"), token)
        o
    end
end # type IoK8sApiAuthenticationV1TokenReviewSpec

const _property_map_IoK8sApiAuthenticationV1TokenReviewSpec = Dict{Symbol,Symbol}(Symbol("audiences")=>Symbol("audiences"), Symbol("token")=>Symbol("token"))
const _property_types_IoK8sApiAuthenticationV1TokenReviewSpec = Dict{Symbol,String}(Symbol("audiences")=>"Vector{String}", Symbol("token")=>"String")
Base.propertynames(::Type{ IoK8sApiAuthenticationV1TokenReviewSpec }) = collect(keys(_property_map_IoK8sApiAuthenticationV1TokenReviewSpec))
Swagger.property_type(::Type{ IoK8sApiAuthenticationV1TokenReviewSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAuthenticationV1TokenReviewSpec[name]))}
Swagger.field_name(::Type{ IoK8sApiAuthenticationV1TokenReviewSpec }, property_name::Symbol) =  _property_map_IoK8sApiAuthenticationV1TokenReviewSpec[property_name]

function check_required(o::IoK8sApiAuthenticationV1TokenReviewSpec)
    true
end

function validate_property(::Type{ IoK8sApiAuthenticationV1TokenReviewSpec }, name::Symbol, val)
end
